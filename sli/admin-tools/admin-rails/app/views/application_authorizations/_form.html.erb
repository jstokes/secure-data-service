    <tr>
      <td><%= @apps_map[@app_auth.appId].name %><% if @apps_map[@app_auth.appId].registration.status != 'APPROVED' %>
          <div class="alert">Application has been denied by operator</div>
        <% end %><% if @apps_map[@app_auth.appId].isBulkExtract %>
          <div class="alert alert-info">Bulk Extract application request</div>
        <% end %>
      </td>
      <td><%= @apps_map[@app_auth.appId].version  %></td>
      <td><%= @apps_map[@app_auth.appId].vendor %></td>
      <%=
          isApproved = @app_auth.authorized
	  isEnabled = @edorg_apps.has_key?(@cur_edorg) && @edorg_apps[@cur_edorg].has_key?(@app_auth.appId)
  	  app = @apps_map[@app_auth.appId]
	  if @app_counts[@app_auth.appId].nil?
	    count = 0
	  else
	    count = @app_counts[@app_auth.appId]
	  end
	  if app.allowed_for_all_edorgs
	    all_str = ", auto-authorized"
	  else
	    all_str = ""
          end
          if count > 0 || app.allowed_for_all_edorgs
            content_tag(:td, count.to_s + " EdOrg(s)" + all_str, :id => "approvedStatus")
          elsif isEnabled
            content_tag(:td, "Not Approved" + all_str, :id => "notApprovedStatus")
          else
            content_tag(:td, "Not Enabled By Developer" + all_str, :id => "notEnabledStatus")
          end
      %>
      <td><%=
          form_for @app_auth, :method =>"GET", :url => "/application_authorizations/" + @app_auth.id + "/edit" do |f|
          %>
            <%= f.hidden_field :appId, :value => @app_auth.appId %>
            <%= f.hidden_field :edorg, :value => @cur_edorg %>
            <%= f.submit "Edit Authorizations" %>
          <% end %>
      </td>
    </tr>
