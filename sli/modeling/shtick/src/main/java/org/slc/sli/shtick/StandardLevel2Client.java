package org.slc.sli.shtick;import java.io.IOException;import java.net.URL;import java.util.ArrayList;import java.util.Collections;import java.util.List;import org.slc.sli.api.client.Entity;public final class StandardLevel2Client implements Level2Client{public StandardLevel2Client(final URL apiServerUrl, final String clientId, final String clientSecret, final URL callbackURL){}/** * getStudentAcademicRecords */@Overridepublic List<Entity> getStudentAcademicRecords() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentAcademicRecordsById */@Overridepublic List<Entity> getStudentAcademicRecordsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentAcademicRecordsById */@Overridepublic List<Entity> getCustomForStudentAcademicRecordsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentGradebookEntries */@Overridepublic List<Entity> getStudentGradebookEntries() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentGradebookEntriesById */@Overridepublic List<Entity> getStudentGradebookEntriesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentGradebookEntriesById */@Overridepublic List<Entity> getCustomForStudentGradebookEntriesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getGradebookEntries */@Overridepublic List<Entity> getGradebookEntries() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getGradebookEntriesById */@Overridepublic List<Entity> getGradebookEntriesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForGradebookEntriesById */@Overridepublic List<Entity> getCustomForGradebookEntriesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentDisciplineIncidentAssociations */@Overridepublic List<Entity> getStudentDisciplineIncidentAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId */@Overridepublic List<Entity> getStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId */@Overridepublic List<Entity> getStudentsForStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getDisciplineIncidentsForStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId */@Overridepublic List<Entity> getDisciplineIncidentsForStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentDisciplineIncidentAssociationsById */@Overridepublic List<Entity> getCustomForStudentDisciplineIncidentAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getAssessments */@Overridepublic List<Entity> getAssessments() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentAssessmentsForAssessmentsByAssessmentId */@Overridepublic List<Entity> getStudentAssessmentsForAssessmentsByAssessmentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentAssessmentsForAssessmentsByAssessmentId */@Overridepublic List<Entity> getStudentsForStudentAssessmentsForAssessmentsByAssessmentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionAssessmentAssociationsForAssessmentsByAssessmentId */@Overridepublic List<Entity> getSectionAssessmentAssociationsForAssessmentsByAssessmentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionsForSectionAssessmentAssociationsForAssessmentsByAssessmentId */@Overridepublic List<Entity> getSectionsForSectionAssessmentAssociationsForAssessmentsByAssessmentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getLearningStandardsForAssessmentsByAssessmentId */@Overridepublic List<Entity> getLearningStandardsForAssessmentsByAssessmentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getLearningObjectivesForAssessmentsByAssessmentId */@Overridepublic List<Entity> getLearningObjectivesForAssessmentsByAssessmentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getAssessmentsById */@Overridepublic List<Entity> getAssessmentsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForAssessmentsById */@Overridepublic List<Entity> getCustomForAssessmentsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCompetencyLevelDescriptorTypes */@Overridepublic List<Entity> getCompetencyLevelDescriptorTypes() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCompetencyLevelDescriptorTypesById */@Overridepublic List<Entity> getCompetencyLevelDescriptorTypesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForCompetencyLevelDescriptorTypesById */@Overridepublic List<Entity> getCustomForCompetencyLevelDescriptorTypesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getHome */@Overridepublic List<Entity> getHome() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentParentAssociations */@Overridepublic List<Entity> getStudentParentAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getParentsForStudentParentAssociationsByStudentParentAssociationId */@Overridepublic List<Entity> getParentsForStudentParentAssociationsByStudentParentAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentParentAssociationsByStudentParentAssociationId */@Overridepublic List<Entity> getStudentsForStudentParentAssociationsByStudentParentAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentParentAssociationsById */@Overridepublic List<Entity> getStudentParentAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentParentAssociationsById */@Overridepublic List<Entity> getCustomForStudentParentAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffProgramAssociations */@Overridepublic List<Entity> getStaffProgramAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffProgramAssociationsByStaffProgramAssociationId */@Overridepublic List<Entity> getStaffProgramAssociationsByStaffProgramAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffForStaffProgramAssociationsByStaffProgramAssociationId */@Overridepublic List<Entity> getStaffForStaffProgramAssociationsByStaffProgramAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getProgramsForStaffProgramAssociationsByStaffProgramAssociationId */@Overridepublic List<Entity> getProgramsForStaffProgramAssociationsByStaffProgramAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStaffProgramAssociationsById */@Overridepublic List<Entity> getCustomForStaffProgramAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCohorts */@Overridepublic List<Entity> getCohorts() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCohortsByCohortIdentifier */@Overridepublic List<Entity> getCohortsByCohortIdentifier() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffCohortAssociationsForCohortsByCohortIdentifier */@Overridepublic List<Entity> getStaffCohortAssociationsForCohortsByCohortIdentifier() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffForStaffCohortAssociationsForCohortsByCohortIdentifier */@Overridepublic List<Entity> getStaffForStaffCohortAssociationsForCohortsByCohortIdentifier() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCohortAssociationsForCohortsByCohortIdentifier */@Overridepublic List<Entity> getStudentCohortAssociationsForCohortsByCohortIdentifier() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentCohortAssociationsForCohortsByCohortIdentifier */@Overridepublic List<Entity> getStudentsForStudentCohortAssociationsForCohortsByCohortIdentifier() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForCohortsById */@Overridepublic List<Entity> getCustomForCohortsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCompetencies */@Overridepublic List<Entity> getStudentCompetencies() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getReportCardsForStudentCompetenciesByStudentCompetencyId */@Overridepublic List<Entity> getReportCardsForStudentCompetenciesByStudentCompetencyId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCompetenciesById */@Overridepublic List<Entity> getStudentCompetenciesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentCompetenciesById */@Overridepublic List<Entity> getCustomForStudentCompetenciesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionAssessmentAssociations */@Overridepublic List<Entity> getSectionAssessmentAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionsForSectionAssessmentAssociationsBySectionAssessmentAssociationId */@Overridepublic List<Entity> getSectionsForSectionAssessmentAssociationsBySectionAssessmentAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getAssessmentsForSectionAssessmentAssociationsBySectionAssessmentAssociationId */@Overridepublic List<Entity> getAssessmentsForSectionAssessmentAssociationsBySectionAssessmentAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionAssessmentAssociationsById */@Overridepublic List<Entity> getSectionAssessmentAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForSectionAssessmentAssociationsById */@Overridepublic List<Entity> getCustomForSectionAssessmentAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffEducationOrgAssignmentAssociations */@Overridepublic List<Entity> getStaffEducationOrgAssignmentAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId */@Overridepublic List<Entity> getStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffForStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId */@Overridepublic List<Entity> getStaffForStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getEducationOrganizationsForStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId */@Overridepublic List<Entity> getEducationOrganizationsForStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStaffEducationOrgAssignmentAssociationsById */@Overridepublic List<Entity> getCustomForStaffEducationOrgAssignmentAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCompetencyLevelDescriptor */@Overridepublic List<Entity> getCompetencyLevelDescriptor() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCompetencyLevelDescriptorById */@Overridepublic List<Entity> getCompetencyLevelDescriptorById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForCompetencyLevelDescriptorById */@Overridepublic List<Entity> getCustomForCompetencyLevelDescriptorById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolSessionAssociations */@Overridepublic List<Entity> getSchoolSessionAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolSessionAssociationsBySchoolSessionAssociationId */@Overridepublic List<Entity> getSchoolSessionAssociationsBySchoolSessionAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSessionsForSchoolSessionAssociationsBySchoolSessionAssociationId */@Overridepublic List<Entity> getSessionsForSchoolSessionAssociationsBySchoolSessionAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolsForSchoolSessionAssociationsBySchoolSessionAssociationId */@Overridepublic List<Entity> getSchoolsForSchoolSessionAssociationsBySchoolSessionAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForSchoolSessionAssociationsById */@Overridepublic List<Entity> getCustomForSchoolSessionAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCourses */@Overridepublic List<Entity> getCourses() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCourseOfferingsForCoursesByCourseId */@Overridepublic List<Entity> getCourseOfferingsForCoursesByCourseId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSessionsForCourseOfferingsForCoursesByCourseId */@Overridepublic List<Entity> getSessionsForCourseOfferingsForCoursesByCourseId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCourseTranscriptsForCoursesByCourseId */@Overridepublic List<Entity> getCourseTranscriptsForCoursesByCourseId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForCourseTranscriptsForCoursesByCourseId */@Overridepublic List<Entity> getStudentsForCourseTranscriptsForCoursesByCourseId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentParentAssociationsForCoursesByCourseId */@Overridepublic List<Entity> getStudentParentAssociationsForCoursesByCourseId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentParentAssociationsForCoursesByCourseId */@Overridepublic List<Entity> getStudentsForStudentParentAssociationsForCoursesByCourseId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCoursesById */@Overridepublic List<Entity> getCoursesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForCoursesById */@Overridepublic List<Entity> getCustomForCoursesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getUserAccounts */@Overridepublic List<Entity> getUserAccounts() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getUserAccountsByUserAccountId */@Overridepublic List<Entity> getUserAccountsByUserAccountId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCreateCheckForUserAccounts */@Overridepublic List<Entity> getCreateCheckForUserAccounts() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForUserAccountsById */@Overridepublic List<Entity> getCustomForUserAccountsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCourseOfferings */@Overridepublic List<Entity> getCourseOfferings() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCourseOfferingsByCourseOfferingId */@Overridepublic List<Entity> getCourseOfferingsByCourseOfferingId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSessionsForCourseOfferingsByCourseOfferingId */@Overridepublic List<Entity> getSessionsForCourseOfferingsByCourseOfferingId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCoursesForCourseOfferingsByCourseOfferingId */@Overridepublic List<Entity> getCoursesForCourseOfferingsByCourseOfferingId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForCourseOfferingsById */@Overridepublic List<Entity> getCustomForCourseOfferingsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getGradingPeriods */@Overridepublic List<Entity> getGradingPeriods() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getReportCardsForGradingPeriodsByGradingPeriodId */@Overridepublic List<Entity> getReportCardsForGradingPeriodsByGradingPeriodId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getGradesForGradingPeriodsByGradingPeriodId */@Overridepublic List<Entity> getGradesForGradingPeriodsByGradingPeriodId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getGradingPeriodsById */@Overridepublic List<Entity> getGradingPeriodsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForGradingPeriodsById */@Overridepublic List<Entity> getCustomForGradingPeriodsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentSchoolAssociations */@Overridepublic List<Entity> getStudentSchoolAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolsForStudentSchoolAssociationsByStudentSchoolAssociationId */@Overridepublic List<Entity> getSchoolsForStudentSchoolAssociationsByStudentSchoolAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentSchoolAssociationsByStudentSchoolAssociationId */@Overridepublic List<Entity> getStudentsForStudentSchoolAssociationsByStudentSchoolAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentSchoolAssociationsById */@Overridepublic List<Entity> getStudentSchoolAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentSchoolAssociationsById */@Overridepublic List<Entity> getCustomForStudentSchoolAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getLearningStandards */@Overridepublic List<Entity> getLearningStandards() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getLearningStandardsById */@Overridepublic List<Entity> getLearningStandardsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForLearningStandardsById */@Overridepublic List<Entity> getCustomForLearningStandardsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentProgramAssociations */@Overridepublic List<Entity> getStudentProgramAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentProgramAssociationsByStudentProgramAssociationId */@Overridepublic List<Entity> getStudentProgramAssociationsByStudentProgramAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentProgramAssociationsByStudentProgramAssociationId */@Overridepublic List<Entity> getStudentsForStudentProgramAssociationsByStudentProgramAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getProgramsForStudentProgramAssociationsByStudentProgramAssociationId */@Overridepublic List<Entity> getProgramsForStudentProgramAssociationsByStudentProgramAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentProgramAssociationsById */@Overridepublic List<Entity> getCustomForStudentProgramAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeacherSchoolAssociations */@Overridepublic List<Entity> getTeacherSchoolAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeachersForTeacherSchoolAssociationsByTeacherSchoolAssociationId */@Overridepublic List<Entity> getTeachersForTeacherSchoolAssociationsByTeacherSchoolAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolsForTeacherSchoolAssociationsByTeacherSchoolAssociationId */@Overridepublic List<Entity> getSchoolsForTeacherSchoolAssociationsByTeacherSchoolAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeacherSchoolAssociationsById */@Overridepublic List<Entity> getTeacherSchoolAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForTeacherSchoolAssociationsById */@Overridepublic List<Entity> getCustomForTeacherSchoolAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getDisciplineActions */@Overridepublic List<Entity> getDisciplineActions() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getDisciplineActionsByDisciplineActionId */@Overridepublic List<Entity> getDisciplineActionsByDisciplineActionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForDisciplineActionsById */@Overridepublic List<Entity> getCustomForDisciplineActionsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudents */@Overridepublic List<Entity> getStudents() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getProgramsForStudentProgramAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getProgramsForStudentProgramAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentAssessmentsForStudentsByStudentId */@Overridepublic List<Entity> getStudentAssessmentsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCohortAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getStudentCohortAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCourseTranscriptsForStudentsByStudentId */@Overridepublic List<Entity> getCourseTranscriptsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentParentAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getStudentParentAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentDisciplineIncidentAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getStudentDisciplineIncidentAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getReportCardsForStudentsByStudentId */@Overridepublic List<Entity> getReportCardsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getParentsForStudentParentAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getParentsForStudentParentAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentProgramAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getStudentProgramAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentSchoolAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getStudentSchoolAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentSectionAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getStudentSectionAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentWithGradeForStudents */@Overridepublic List<Entity> getStudentWithGradeForStudents() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentWithGradeForStudentsByStudentId */@Overridepublic List<Entity> getStudentWithGradeForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionsForStudentSectionAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getSectionsForStudentSectionAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolsForStudentSchoolAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getSchoolsForStudentSchoolAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getAssessmentsForStudentAssessmentsForStudentsByStudentId */@Overridepublic List<Entity> getAssessmentsForStudentAssessmentsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getAttendancesForStudentsByStudentId */@Overridepublic List<Entity> getAttendancesForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCoursesForCourseTranscriptsForStudentsByStudentId */@Overridepublic List<Entity> getCoursesForCourseTranscriptsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getDisciplineIncidentsForStudentDisciplineIncidentAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getDisciplineIncidentsForStudentDisciplineIncidentAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCohortsForStudentCohortAssociationsForStudentsByStudentId */@Overridepublic List<Entity> getCohortsForStudentCohortAssociationsForStudentsByStudentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsById */@Overridepublic List<Entity> getStudentsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentsById */@Overridepublic List<Entity> getCustomForStudentsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeachers */@Overridepublic List<Entity> getTeachers() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeacherSchoolAssociationsForTeachersByTeacherId */@Overridepublic List<Entity> getTeacherSchoolAssociationsForTeachersByTeacherId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeacherSectionAssociationsForTeachersByTeacherId */@Overridepublic List<Entity> getTeacherSectionAssociationsForTeachersByTeacherId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionsForTeacherSectionAssociationsForTeachersByTeacherId */@Overridepublic List<Entity> getSectionsForTeacherSectionAssociationsForTeachersByTeacherId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolsForTeacherSchoolAssociationsForTeachersByTeacherId */@Overridepublic List<Entity> getSchoolsForTeacherSchoolAssociationsForTeachersByTeacherId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeachersById */@Overridepublic List<Entity> getTeachersById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForTeachersById */@Overridepublic List<Entity> getCustomForTeachersById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getEducationOrganizations */@Overridepublic List<Entity> getEducationOrganizations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffEducationOrgAssignmentAssociationsForEducationOrganizationsByEducationOrganizationId */@Overridepublic List<Entity> getStaffEducationOrgAssignmentAssociationsForEducationOrganizationsByEducationOrganizationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffForStaffEducationOrgAssignmentAssociationsForEducationOrganizationsByEducationOrganizationId */@Overridepublic List<Entity> getStaffForStaffEducationOrgAssignmentAssociationsForEducationOrganizationsByEducationOrganizationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getEducationOrganizationsById */@Overridepublic List<Entity> getEducationOrganizationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForEducationOrganizationsById */@Overridepublic List<Entity> getCustomForEducationOrganizationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeacherSectionAssociations */@Overridepublic List<Entity> getTeacherSectionAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionsForTeacherSectionAssociationsByTeacherSectionAssociationId */@Overridepublic List<Entity> getSectionsForTeacherSectionAssociationsByTeacherSectionAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeachersForTeacherSectionAssociationsByTeacherSectionAssociationId */@Overridepublic List<Entity> getTeachersForTeacherSectionAssociationsByTeacherSectionAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeacherSectionAssociationsById */@Overridepublic List<Entity> getTeacherSectionAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForTeacherSectionAssociationsById */@Overridepublic List<Entity> getCustomForTeacherSectionAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSessions */@Overridepublic List<Entity> getSessions() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSessionsBySessionId */@Overridepublic List<Entity> getSessionsBySessionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCourseOfferingsForSessionsBySessionId */@Overridepublic List<Entity> getCourseOfferingsForSessionsBySessionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCoursesForCourseOfferingsForSessionsBySessionId */@Overridepublic List<Entity> getCoursesForCourseOfferingsForSessionsBySessionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolSessionAssociationsForSessionsBySchoolId */@Overridepublic List<Entity> getSchoolSessionAssociationsForSessionsBySchoolId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolsForSchoolSessionAssociationsForSessionsBySchoolId */@Overridepublic List<Entity> getSchoolsForSchoolSessionAssociationsForSessionsBySchoolId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForSessionsById */@Overridepublic List<Entity> getCustomForSessionsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCourseTranscripts */@Overridepublic List<Entity> getCourseTranscripts() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCoursesForCourseTranscriptsByCourseTranscriptId */@Overridepublic List<Entity> getCoursesForCourseTranscriptsByCourseTranscriptId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForCourseTranscriptsByCourseTranscriptId */@Overridepublic List<Entity> getStudentsForCourseTranscriptsByCourseTranscriptId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCourseTranscriptsById */@Overridepublic List<Entity> getCourseTranscriptsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForCourseTranscriptsById */@Overridepublic List<Entity> getCustomForCourseTranscriptsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getAttendances */@Overridepublic List<Entity> getAttendances() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getAttendancesById */@Overridepublic List<Entity> getAttendancesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForAttendancesById */@Overridepublic List<Entity> getCustomForAttendancesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffCohortAssociations */@Overridepublic List<Entity> getStaffCohortAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffCohortAssociationsByStaffCohortAssociationId */@Overridepublic List<Entity> getStaffCohortAssociationsByStaffCohortAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffForStaffCohortAssociationsByStaffCohortAssociationId */@Overridepublic List<Entity> getStaffForStaffCohortAssociationsByStaffCohortAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCohortsForStaffCohortAssociationsByStaffCohortAssociationId */@Overridepublic List<Entity> getCohortsForStaffCohortAssociationsByStaffCohortAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStaffCohortAssociationsById */@Overridepublic List<Entity> getCustomForStaffCohortAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getGrades */@Overridepublic List<Entity> getGrades() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getGradesById */@Overridepublic List<Entity> getGradesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForGradesById */@Overridepublic List<Entity> getCustomForGradesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchools */@Overridepublic List<Entity> getSchools() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeacherSchoolAssociationsForSchoolsBySchoolId */@Overridepublic List<Entity> getTeacherSchoolAssociationsForSchoolsBySchoolId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeachersForTeacherSchoolAssociationsForSchoolsBySchoolId */@Overridepublic List<Entity> getTeachersForTeacherSchoolAssociationsForSchoolsBySchoolId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentSchoolAssociationsForSchoolsBySchoolId */@Overridepublic List<Entity> getStudentSchoolAssociationsForSchoolsBySchoolId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentSchoolAssociationsForSchoolsBySchoolId */@Overridepublic List<Entity> getStudentsForStudentSchoolAssociationsForSchoolsBySchoolId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionsForSchoolsBySchoolId */@Overridepublic List<Entity> getSectionsForSchoolsBySchoolId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolSessionAssociationsForSchoolsBySchoolId */@Overridepublic List<Entity> getSchoolSessionAssociationsForSchoolsBySchoolId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSessionsForSchoolSessionAssociationsForSchoolsBySchoolId */@Overridepublic List<Entity> getSessionsForSchoolSessionAssociationsForSchoolsBySchoolId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSchoolsById */@Overridepublic List<Entity> getSchoolsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForSchoolsById */@Overridepublic List<Entity> getCustomForSchoolsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getReportCards */@Overridepublic List<Entity> getReportCards() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getReportCardsById */@Overridepublic List<Entity> getReportCardsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForReportCardsById */@Overridepublic List<Entity> getCustomForReportCardsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCompetencyObjectives */@Overridepublic List<Entity> getStudentCompetencyObjectives() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCompetencyObjectivesById */@Overridepublic List<Entity> getStudentCompetencyObjectivesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentCompetencyObjectivesById */@Overridepublic List<Entity> getCustomForStudentCompetencyObjectivesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSections */@Overridepublic List<Entity> getSections() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionAssessmentAssociationsForSectionsBySectionId */@Overridepublic List<Entity> getSectionAssessmentAssociationsForSectionsBySectionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentSectionAssociationsForSectionsBySectionId */@Overridepublic List<Entity> getStudentSectionAssociationsForSectionsBySectionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentSectionAssociationsForSectionsBySectionId */@Overridepublic List<Entity> getStudentsForStudentSectionAssociationsForSectionsBySectionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeacherSectionAssociationsForSectionsBySectionId */@Overridepublic List<Entity> getTeacherSectionAssociationsForSectionsBySectionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getTeachersForTeacherSectionAssociationsForSectionsBySectionId */@Overridepublic List<Entity> getTeachersForTeacherSectionAssociationsForSectionsBySectionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getAssessmentsForSectionAssessmentAssociationsForSectionsBySectionId */@Overridepublic List<Entity> getAssessmentsForSectionAssessmentAssociationsForSectionsBySectionId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionsById */@Overridepublic List<Entity> getSectionsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForSectionsById */@Overridepublic List<Entity> getCustomForSectionsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCohortAssociations */@Overridepublic List<Entity> getStudentCohortAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCohortAssociationsByStudentCohortAssociationId */@Overridepublic List<Entity> getStudentCohortAssociationsByStudentCohortAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentCohortAssociationsByStudentCohortAssociationId */@Overridepublic List<Entity> getStudentsForStudentCohortAssociationsByStudentCohortAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCohortsForStudentCohortAssociationsByStudentCohortAssociationId */@Overridepublic List<Entity> getCohortsForStudentCohortAssociationsByStudentCohortAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentCohortAssociationsById */@Overridepublic List<Entity> getCustomForStudentCohortAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getLearningObjectives */@Overridepublic List<Entity> getLearningObjectives() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCompetenciesForLearningObjectivesByLearningObjectiveId */@Overridepublic List<Entity> getStudentCompetenciesForLearningObjectivesByLearningObjectiveId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getLearningStandardsForLearningObjectivesByLearningObjectiveId */@Overridepublic List<Entity> getLearningStandardsForLearningObjectivesByLearningObjectiveId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getParentLearningObjectivesForLearningObjectivesByLearningObjectiveId */@Overridepublic List<Entity> getParentLearningObjectivesForLearningObjectivesByLearningObjectiveId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getChildLearningObjectivesForLearningObjectivesByLearningObjectiveId */@Overridepublic List<Entity> getChildLearningObjectivesForLearningObjectivesByLearningObjectiveId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getLearningObjectivesById */@Overridepublic List<Entity> getLearningObjectivesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForLearningObjectivesById */@Overridepublic List<Entity> getCustomForLearningObjectivesById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentSectionAssociations */@Overridepublic List<Entity> getStudentSectionAssociations() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentSectionAssociationsByStudentSectionAssociationId */@Overridepublic List<Entity> getStudentsForStudentSectionAssociationsByStudentSectionAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getSectionsForStudentSectionAssociationsByStudentSectionAssociationId */@Overridepublic List<Entity> getSectionsForStudentSectionAssociationsByStudentSectionAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentCompetenciesForStudentSectionAssociationsByStudentSectionAssociationId */@Overridepublic List<Entity> getStudentCompetenciesForStudentSectionAssociationsByStudentSectionAssociationId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentSectionAssociationsById */@Overridepublic List<Entity> getStudentSectionAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentSectionAssociationsById */@Overridepublic List<Entity> getCustomForStudentSectionAssociationsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getPrograms */@Overridepublic List<Entity> getPrograms() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getProgramsByProgramId */@Overridepublic List<Entity> getProgramsByProgramId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffForStaffProgramAssociationsForProgramsByProgramId */@Overridepublic List<Entity> getStaffForStaffProgramAssociationsForProgramsByProgramId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentProgramAssociationsForProgramsByProgramId */@Overridepublic List<Entity> getStudentProgramAssociationsForProgramsByProgramId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentProgramAssociationsForProgramsByProgramId */@Overridepublic List<Entity> getStudentsForStudentProgramAssociationsForProgramsByProgramId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffProgramAssociationsForProgramsByProgramId */@Overridepublic List<Entity> getStaffProgramAssociationsForProgramsByProgramId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForProgramsById */@Overridepublic List<Entity> getCustomForProgramsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getParents */@Overridepublic List<Entity> getParents() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getParentsByParentId */@Overridepublic List<Entity> getParentsByParentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentParentAssociationsForParentsByParentId */@Overridepublic List<Entity> getStudentParentAssociationsForParentsByParentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentParentAssociationsForParentsByParentId */@Overridepublic List<Entity> getStudentsForStudentParentAssociationsForParentsByParentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForParentsById */@Overridepublic List<Entity> getCustomForParentsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getDisciplineIncidents */@Overridepublic List<Entity> getDisciplineIncidents() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getDisciplineIncidentsByDisciplineIncidentId */@Overridepublic List<Entity> getDisciplineIncidentsByDisciplineIncidentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentDisciplineIncidentAssociationsForDisciplineIncidentsByDisciplineIncidentId */@Overridepublic List<Entity> getStudentDisciplineIncidentAssociationsForDisciplineIncidentsByDisciplineIncidentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentDisciplineIncidentAssociationsForDisciplineIncidentsByDisciplineIncidentId */@Overridepublic List<Entity> getStudentsForStudentDisciplineIncidentAssociationsForDisciplineIncidentsByDisciplineIncidentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForDisciplineIncidentsById */@Overridepublic List<Entity> getCustomForDisciplineIncidentsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaff */@Overridepublic List<Entity> getStaff() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getProgramsForStaffProgramAssociationsForStaffByStaffId */@Overridepublic List<Entity> getProgramsForStaffProgramAssociationsForStaffByStaffId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffCohortAssociationsForStaffByStaffId */@Overridepublic List<Entity> getStaffCohortAssociationsForStaffByStaffId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffEducationOrgAssignmentAssociationsForStaffByStaffId */@Overridepublic List<Entity> getStaffEducationOrgAssignmentAssociationsForStaffByStaffId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffProgramAssociationsForStaffByStaffId */@Overridepublic List<Entity> getStaffProgramAssociationsForStaffByStaffId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getEducationOrganizationsForStaffEducationOrgAssignmentAssociationsForStaffByStaffId */@Overridepublic List<Entity> getEducationOrganizationsForStaffEducationOrgAssignmentAssociationsForStaffByStaffId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCohortsForStaffCohortAssociationsForStaffByStaffId */@Overridepublic List<Entity> getCohortsForStaffCohortAssociationsForStaffByStaffId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStaffById */@Overridepublic List<Entity> getStaffById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStaffById */@Overridepublic List<Entity> getCustomForStaffById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentAssessments */@Overridepublic List<Entity> getStudentAssessments() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getAssessmentsForStudentAssessmentsByStudentAssessmentId */@Overridepublic List<Entity> getAssessmentsForStudentAssessmentsByStudentAssessmentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentsForStudentAssessmentsByStudentAssessmentId */@Overridepublic List<Entity> getStudentsForStudentAssessmentsByStudentAssessmentId() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getStudentAssessmentsById */@Overridepublic List<Entity> getStudentAssessmentsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};/** * getCustomForStudentAssessmentsById */@Overridepublic List<Entity> getCustomForStudentAssessmentsById() throws IOException, SLIDataStoreException{final List<Entity> entities = new ArrayList<Entity>();return Collections.unmodifiableList(entities);};}