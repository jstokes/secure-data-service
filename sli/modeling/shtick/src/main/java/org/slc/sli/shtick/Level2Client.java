package org.slc.sli.shtick;import java.io.IOException;import java.util.List;import java.util.Map;public interface Level2Client{/** * postStudentAcademicRecords */String postStudentAcademicRecords(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentAcademicRecords */List<Entity> getStudentAcademicRecords(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentAcademicRecordsById */void deleteStudentAcademicRecordsById(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentAcademicRecordsById */List<Entity> getStudentAcademicRecordsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentAcademicRecordsById */void putStudentAcademicRecordsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStudentAcademicRecordsById */void deleteCustomForStudentAcademicRecordsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentAcademicRecordsById */List<Entity> getCustomForStudentAcademicRecordsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentAcademicRecordsById */void putCustomForStudentAcademicRecordsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentAcademicRecordsById */String postCustomForStudentAcademicRecordsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudentGradebookEntries */String postStudentGradebookEntries(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentGradebookEntries */List<Entity> getStudentGradebookEntries(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentGradebookEntriesById */void deleteStudentGradebookEntriesById(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentGradebookEntriesById */List<Entity> getStudentGradebookEntriesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentGradebookEntriesById */void putStudentGradebookEntriesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStudentGradebookEntriesById */void deleteCustomForStudentGradebookEntriesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentGradebookEntriesById */List<Entity> getCustomForStudentGradebookEntriesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentGradebookEntriesById */void putCustomForStudentGradebookEntriesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentGradebookEntriesById */String postCustomForStudentGradebookEntriesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postGradebookEntries */String postGradebookEntries(String token, Entity entity) throws IOException, StatusCodeException;/** * getGradebookEntries */List<Entity> getGradebookEntries(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteGradebookEntriesById */void deleteGradebookEntriesById(String token, String entityId) throws IOException, StatusCodeException;/** * getGradebookEntriesById */List<Entity> getGradebookEntriesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putGradebookEntriesById */void putGradebookEntriesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForGradebookEntriesById */void deleteCustomForGradebookEntriesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForGradebookEntriesById */List<Entity> getCustomForGradebookEntriesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForGradebookEntriesById */void putCustomForGradebookEntriesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForGradebookEntriesById */String postCustomForGradebookEntriesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudentDisciplineIncidentAssociations */String postStudentDisciplineIncidentAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentDisciplineIncidentAssociations */List<Entity> getStudentDisciplineIncidentAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId */void deleteStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId */List<Entity> getStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId(String token, List<String> studentDisciplineIncidentAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId */void putStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId(String token, String studentDisciplineIncidentAssociationId, Entity entity) throws IOException, StatusCodeException;/** * getStudentsForStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId */List<Entity> getStudentsForStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId(String token, List<String> studentDisciplineIncidentAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getDisciplineIncidentsForStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId */List<Entity> getDisciplineIncidentsForStudentDisciplineIncidentAssociationsByStudentDisciplineIncidentAssociationId(String token, List<String> studentDisciplineIncidentAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForStudentDisciplineIncidentAssociationsById */void deleteCustomForStudentDisciplineIncidentAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentDisciplineIncidentAssociationsById */List<Entity> getCustomForStudentDisciplineIncidentAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentDisciplineIncidentAssociationsById */void putCustomForStudentDisciplineIncidentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentDisciplineIncidentAssociationsById */String postCustomForStudentDisciplineIncidentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postAssessments */String postAssessments(String token, Entity entity) throws IOException, StatusCodeException;/** * getAssessments */List<Entity> getAssessments(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentAssessmentsForAssessmentsByAssessmentId */List<Entity> getStudentAssessmentsForAssessmentsByAssessmentId(String token, List<String> assessmentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentAssessmentsForAssessmentsByAssessmentId */List<Entity> getStudentsForStudentAssessmentsForAssessmentsByAssessmentId(String token, List<String> assessmentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSectionAssessmentAssociationsForAssessmentsByAssessmentId */List<Entity> getSectionAssessmentAssociationsForAssessmentsByAssessmentId(String token, List<String> assessmentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSectionsForSectionAssessmentAssociationsForAssessmentsByAssessmentId */List<Entity> getSectionsForSectionAssessmentAssociationsForAssessmentsByAssessmentId(String token, List<String> assessmentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getLearningStandardsForAssessmentsByAssessmentId */List<Entity> getLearningStandardsForAssessmentsByAssessmentId(String token, List<String> assessmentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getLearningObjectivesForAssessmentsByAssessmentId */List<Entity> getLearningObjectivesForAssessmentsByAssessmentId(String token, List<String> assessmentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteAssessmentsById */void deleteAssessmentsById(String token, String entityId) throws IOException, StatusCodeException;/** * getAssessmentsById */List<Entity> getAssessmentsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putAssessmentsById */void putAssessmentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForAssessmentsById */void deleteCustomForAssessmentsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForAssessmentsById */List<Entity> getCustomForAssessmentsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForAssessmentsById */void putCustomForAssessmentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForAssessmentsById */String postCustomForAssessmentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCompetencyLevelDescriptorTypes */String postCompetencyLevelDescriptorTypes(String token, Entity entity) throws IOException, StatusCodeException;/** * getCompetencyLevelDescriptorTypes */List<Entity> getCompetencyLevelDescriptorTypes(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCompetencyLevelDescriptorTypesById */void deleteCompetencyLevelDescriptorTypesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCompetencyLevelDescriptorTypesById */List<Entity> getCompetencyLevelDescriptorTypesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCompetencyLevelDescriptorTypesById */void putCompetencyLevelDescriptorTypesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForCompetencyLevelDescriptorTypesById */void deleteCustomForCompetencyLevelDescriptorTypesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForCompetencyLevelDescriptorTypesById */List<Entity> getCustomForCompetencyLevelDescriptorTypesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForCompetencyLevelDescriptorTypesById */void putCustomForCompetencyLevelDescriptorTypesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForCompetencyLevelDescriptorTypesById */String postCustomForCompetencyLevelDescriptorTypesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * getHome */List<Entity> getHome(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * postStudentParentAssociations */String postStudentParentAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentParentAssociations */List<Entity> getStudentParentAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getParentsForStudentParentAssociationsByStudentParentAssociationId */List<Entity> getParentsForStudentParentAssociationsByStudentParentAssociationId(String token, List<String> studentParentAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentParentAssociationsByStudentParentAssociationId */List<Entity> getStudentsForStudentParentAssociationsByStudentParentAssociationId(String token, List<String> studentParentAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentParentAssociationsById */void deleteStudentParentAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentParentAssociationsById */List<Entity> getStudentParentAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentParentAssociationsById */void putStudentParentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStudentParentAssociationsById */void deleteCustomForStudentParentAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentParentAssociationsById */List<Entity> getCustomForStudentParentAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentParentAssociationsById */void putCustomForStudentParentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentParentAssociationsById */String postCustomForStudentParentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStaffProgramAssociations */String postStaffProgramAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getStaffProgramAssociations */List<Entity> getStaffProgramAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStaffProgramAssociationsByProgramId */void deleteStaffProgramAssociationsByProgramId(String token, String entityId) throws IOException, StatusCodeException;/** * getStaffProgramAssociationsByStaffProgramAssociationId */List<Entity> getStaffProgramAssociationsByStaffProgramAssociationId(String token, List<String> staffProgramAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStaffProgramAssociationsByStaffProgramAssociationId */void putStaffProgramAssociationsByStaffProgramAssociationId(String token, String staffProgramAssociationId, Entity entity) throws IOException, StatusCodeException;/** * getStaffForStaffProgramAssociationsByStaffProgramAssociationId */List<Entity> getStaffForStaffProgramAssociationsByStaffProgramAssociationId(String token, List<String> staffProgramAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getProgramsForStaffProgramAssociationsByStaffProgramAssociationId */List<Entity> getProgramsForStaffProgramAssociationsByStaffProgramAssociationId(String token, List<String> staffProgramAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForStaffProgramAssociationsById */void deleteCustomForStaffProgramAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStaffProgramAssociationsById */List<Entity> getCustomForStaffProgramAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStaffProgramAssociationsById */void putCustomForStaffProgramAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStaffProgramAssociationsById */String postCustomForStaffProgramAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCohorts */String postCohorts(String token, Entity entity) throws IOException, StatusCodeException;/** * getCohorts */List<Entity> getCohorts(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCohortsByCohortIdentifier */void deleteCohortsByCohortIdentifier(String token, String entityId) throws IOException, StatusCodeException;/** * getCohortsByCohortIdentifier */List<Entity> getCohortsByCohortIdentifier(String token, List<String> cohortIdentifier, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCohortsByCohortIdentifier */void putCohortsByCohortIdentifier(String token, String cohortIdentifier, Entity entity) throws IOException, StatusCodeException;/** * getStaffCohortAssociationsForCohortsByCohortIdentifier */List<Entity> getStaffCohortAssociationsForCohortsByCohortIdentifier(String token, List<String> cohortIdentifier, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStaffForStaffCohortAssociationsForCohortsByCohortIdentifier */List<Entity> getStaffForStaffCohortAssociationsForCohortsByCohortIdentifier(String token, List<String> cohortIdentifier, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentCohortAssociationsForCohortsByCohortIdentifier */List<Entity> getStudentCohortAssociationsForCohortsByCohortIdentifier(String token, List<String> cohortIdentifier, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentCohortAssociationsForCohortsByCohortIdentifier */List<Entity> getStudentsForStudentCohortAssociationsForCohortsByCohortIdentifier(String token, List<String> cohortIdentifier, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForCohortsById */void deleteCustomForCohortsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForCohortsById */List<Entity> getCustomForCohortsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForCohortsById */void putCustomForCohortsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForCohortsById */String postCustomForCohortsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudentCompetencies */String postStudentCompetencies(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentCompetencies */List<Entity> getStudentCompetencies(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getReportCardsForStudentCompetenciesByStudentCompetencyId */List<Entity> getReportCardsForStudentCompetenciesByStudentCompetencyId(String token, List<String> studentCompetencyId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentCompetenciesById */void deleteStudentCompetenciesById(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentCompetenciesById */List<Entity> getStudentCompetenciesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentCompetenciesById */void putStudentCompetenciesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStudentCompetenciesById */void deleteCustomForStudentCompetenciesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentCompetenciesById */List<Entity> getCustomForStudentCompetenciesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentCompetenciesById */void putCustomForStudentCompetenciesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentCompetenciesById */String postCustomForStudentCompetenciesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postSectionAssessmentAssociations */String postSectionAssessmentAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getSectionAssessmentAssociations */List<Entity> getSectionAssessmentAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSectionsForSectionAssessmentAssociationsBySectionAssessmentAssociationId */List<Entity> getSectionsForSectionAssessmentAssociationsBySectionAssessmentAssociationId(String token, List<String> sectionAssessmentAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getAssessmentsForSectionAssessmentAssociationsBySectionAssessmentAssociationId */List<Entity> getAssessmentsForSectionAssessmentAssociationsBySectionAssessmentAssociationId(String token, List<String> sectionAssessmentAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteSectionAssessmentAssociationsById */void deleteSectionAssessmentAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getSectionAssessmentAssociationsById */List<Entity> getSectionAssessmentAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putSectionAssessmentAssociationsById */void putSectionAssessmentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForSectionAssessmentAssociationsById */void deleteCustomForSectionAssessmentAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForSectionAssessmentAssociationsById */List<Entity> getCustomForSectionAssessmentAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForSectionAssessmentAssociationsById */void putCustomForSectionAssessmentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForSectionAssessmentAssociationsById */String postCustomForSectionAssessmentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStaffEducationOrgAssignmentAssociations */String postStaffEducationOrgAssignmentAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getStaffEducationOrgAssignmentAssociations */List<Entity> getStaffEducationOrgAssignmentAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId */void deleteStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId(String token, String entityId) throws IOException, StatusCodeException;/** * getStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId */List<Entity> getStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId(String token, List<String> staffEducationOrganizationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId */void putStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId(String token, String staffEducationOrganizationId, Entity entity) throws IOException, StatusCodeException;/** * getStaffForStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId */List<Entity> getStaffForStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId(String token, List<String> staffEducationOrganizationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getEducationOrganizationsForStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId */List<Entity> getEducationOrganizationsForStaffEducationOrgAssignmentAssociationsByStaffEducationOrganizationId(String token, List<String> staffEducationOrganizationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForStaffEducationOrgAssignmentAssociationsById */void deleteCustomForStaffEducationOrgAssignmentAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStaffEducationOrgAssignmentAssociationsById */List<Entity> getCustomForStaffEducationOrgAssignmentAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStaffEducationOrgAssignmentAssociationsById */void putCustomForStaffEducationOrgAssignmentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStaffEducationOrgAssignmentAssociationsById */String postCustomForStaffEducationOrgAssignmentAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCompetencyLevelDescriptor */String postCompetencyLevelDescriptor(String token, Entity entity) throws IOException, StatusCodeException;/** * getCompetencyLevelDescriptor */List<Entity> getCompetencyLevelDescriptor(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCompetencyLevelDescriptorById */void deleteCompetencyLevelDescriptorById(String token, String entityId) throws IOException, StatusCodeException;/** * getCompetencyLevelDescriptorById */List<Entity> getCompetencyLevelDescriptorById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCompetencyLevelDescriptorById */void putCompetencyLevelDescriptorById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForCompetencyLevelDescriptorById */void deleteCustomForCompetencyLevelDescriptorById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForCompetencyLevelDescriptorById */List<Entity> getCustomForCompetencyLevelDescriptorById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForCompetencyLevelDescriptorById */void putCustomForCompetencyLevelDescriptorById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForCompetencyLevelDescriptorById */String postCustomForCompetencyLevelDescriptorById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postSchoolSessionAssociations */String postSchoolSessionAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getSchoolSessionAssociations */List<Entity> getSchoolSessionAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteSchoolSessionAssociationsBySchoolSessionAssociationId */void deleteSchoolSessionAssociationsBySchoolSessionAssociationId(String token, String entityId) throws IOException, StatusCodeException;/** * getSchoolSessionAssociationsBySchoolSessionAssociationId */List<Entity> getSchoolSessionAssociationsBySchoolSessionAssociationId(String token, List<String> schoolSessionAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putSchoolSessionAssociationsBySchoolSessionAssociationId */void putSchoolSessionAssociationsBySchoolSessionAssociationId(String token, String schoolSessionAssociationId, Entity entity) throws IOException, StatusCodeException;/** * getSessionsForSchoolSessionAssociationsBySchoolSessionAssociationId */List<Entity> getSessionsForSchoolSessionAssociationsBySchoolSessionAssociationId(String token, List<String> schoolSessionAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSchoolsForSchoolSessionAssociationsBySchoolSessionAssociationId */List<Entity> getSchoolsForSchoolSessionAssociationsBySchoolSessionAssociationId(String token, List<String> schoolSessionAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForSchoolSessionAssociationsById */void deleteCustomForSchoolSessionAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForSchoolSessionAssociationsById */List<Entity> getCustomForSchoolSessionAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForSchoolSessionAssociationsById */void putCustomForSchoolSessionAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForSchoolSessionAssociationsById */String postCustomForSchoolSessionAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCourses */String postCourses(String token, Entity entity) throws IOException, StatusCodeException;/** * getCourses */List<Entity> getCourses(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCourseOfferingsForCoursesByCourseId */List<Entity> getCourseOfferingsForCoursesByCourseId(String token, List<String> courseId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSessionsForCourseOfferingsForCoursesByCourseId */List<Entity> getSessionsForCourseOfferingsForCoursesByCourseId(String token, List<String> courseId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCourseTranscriptsForCoursesByCourseId */List<Entity> getCourseTranscriptsForCoursesByCourseId(String token, List<String> courseId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForCourseTranscriptsForCoursesByCourseId */List<Entity> getStudentsForCourseTranscriptsForCoursesByCourseId(String token, List<String> courseId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentParentAssociationsForCoursesByCourseId */List<Entity> getStudentParentAssociationsForCoursesByCourseId(String token, List<String> courseId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentParentAssociationsForCoursesByCourseId */List<Entity> getStudentsForStudentParentAssociationsForCoursesByCourseId(String token, List<String> courseId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCoursesById */void deleteCoursesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCoursesById */List<Entity> getCoursesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCoursesById */void putCoursesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForCoursesById */void deleteCustomForCoursesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForCoursesById */List<Entity> getCustomForCoursesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForCoursesById */void putCustomForCoursesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForCoursesById */String postCustomForCoursesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postUserAccounts */String postUserAccounts(String token, Entity entity) throws IOException, StatusCodeException;/** * getUserAccounts */List<Entity> getUserAccounts(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteUserAccountsByUserAccountId */void deleteUserAccountsByUserAccountId(String token, String entityId) throws IOException, StatusCodeException;/** * getUserAccountsByUserAccountId */List<Entity> getUserAccountsByUserAccountId(String token, List<String> userAccountId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putUserAccountsByUserAccountId */void putUserAccountsByUserAccountId(String token, String userAccountId, Entity entity) throws IOException, StatusCodeException;/** * getCreateCheckForUserAccounts */List<Entity> getCreateCheckForUserAccounts(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * postCreateWaitingListUserForUserAccounts */String postCreateWaitingListUserForUserAccounts(String token, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForUserAccountsById */void deleteCustomForUserAccountsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForUserAccountsById */List<Entity> getCustomForUserAccountsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForUserAccountsById */void putCustomForUserAccountsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForUserAccountsById */String postCustomForUserAccountsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCourseOfferings */String postCourseOfferings(String token, Entity entity) throws IOException, StatusCodeException;/** * getCourseOfferings */List<Entity> getCourseOfferings(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCourseOfferingsByCourseOfferingId */void deleteCourseOfferingsByCourseOfferingId(String token, String entityId) throws IOException, StatusCodeException;/** * getCourseOfferingsByCourseOfferingId */List<Entity> getCourseOfferingsByCourseOfferingId(String token, List<String> courseOfferingId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCourseOfferingsByCourseOfferingId */void putCourseOfferingsByCourseOfferingId(String token, String courseOfferingId, Entity entity) throws IOException, StatusCodeException;/** * getSessionsForCourseOfferingsByCourseOfferingId */List<Entity> getSessionsForCourseOfferingsByCourseOfferingId(String token, List<String> courseOfferingId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCoursesForCourseOfferingsByCourseOfferingId */List<Entity> getCoursesForCourseOfferingsByCourseOfferingId(String token, List<String> courseOfferingId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForCourseOfferingsById */void deleteCustomForCourseOfferingsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForCourseOfferingsById */List<Entity> getCustomForCourseOfferingsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForCourseOfferingsById */void putCustomForCourseOfferingsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForCourseOfferingsById */String postCustomForCourseOfferingsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postGradingPeriods */String postGradingPeriods(String token, Entity entity) throws IOException, StatusCodeException;/** * getGradingPeriods */List<Entity> getGradingPeriods(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getReportCardsForGradingPeriodsByGradingPeriodId */List<Entity> getReportCardsForGradingPeriodsByGradingPeriodId(String token, List<String> gradingPeriodId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getGradesForGradingPeriodsByGradingPeriodId */List<Entity> getGradesForGradingPeriodsByGradingPeriodId(String token, List<String> gradingPeriodId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteGradingPeriodsById */void deleteGradingPeriodsById(String token, String entityId) throws IOException, StatusCodeException;/** * getGradingPeriodsById */List<Entity> getGradingPeriodsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putGradingPeriodsById */void putGradingPeriodsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForGradingPeriodsById */void deleteCustomForGradingPeriodsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForGradingPeriodsById */List<Entity> getCustomForGradingPeriodsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForGradingPeriodsById */void putCustomForGradingPeriodsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForGradingPeriodsById */String postCustomForGradingPeriodsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudentSchoolAssociations */String postStudentSchoolAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentSchoolAssociations */List<Entity> getStudentSchoolAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSchoolsForStudentSchoolAssociationsByStudentSchoolAssociationId */List<Entity> getSchoolsForStudentSchoolAssociationsByStudentSchoolAssociationId(String token, List<String> studentSchoolAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentSchoolAssociationsByStudentSchoolAssociationId */List<Entity> getStudentsForStudentSchoolAssociationsByStudentSchoolAssociationId(String token, List<String> studentSchoolAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentSchoolAssociationsById */void deleteStudentSchoolAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentSchoolAssociationsById */List<Entity> getStudentSchoolAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentSchoolAssociationsById */void putStudentSchoolAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStudentSchoolAssociationsById */void deleteCustomForStudentSchoolAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentSchoolAssociationsById */List<Entity> getCustomForStudentSchoolAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentSchoolAssociationsById */void putCustomForStudentSchoolAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentSchoolAssociationsById */String postCustomForStudentSchoolAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postLearningStandards */String postLearningStandards(String token, Entity entity) throws IOException, StatusCodeException;/** * getLearningStandards */List<Entity> getLearningStandards(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteLearningStandardsById */void deleteLearningStandardsById(String token, String entityId) throws IOException, StatusCodeException;/** * getLearningStandardsById */List<Entity> getLearningStandardsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putLearningStandardsById */void putLearningStandardsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForLearningStandardsById */void deleteCustomForLearningStandardsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForLearningStandardsById */List<Entity> getCustomForLearningStandardsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForLearningStandardsById */void putCustomForLearningStandardsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForLearningStandardsById */String postCustomForLearningStandardsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudentProgramAssociations */String postStudentProgramAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentProgramAssociations */List<Entity> getStudentProgramAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentProgramAssociationsByProgramId */void deleteStudentProgramAssociationsByProgramId(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentProgramAssociationsByStudentProgramAssociationId */List<Entity> getStudentProgramAssociationsByStudentProgramAssociationId(String token, List<String> studentProgramAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentProgramAssociationsByStudentProgramAssociationId */void putStudentProgramAssociationsByStudentProgramAssociationId(String token, String studentProgramAssociationId, Entity entity) throws IOException, StatusCodeException;/** * getStudentsForStudentProgramAssociationsByStudentProgramAssociationId */List<Entity> getStudentsForStudentProgramAssociationsByStudentProgramAssociationId(String token, List<String> studentProgramAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getProgramsForStudentProgramAssociationsByStudentProgramAssociationId */List<Entity> getProgramsForStudentProgramAssociationsByStudentProgramAssociationId(String token, List<String> studentProgramAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForStudentProgramAssociationsById */void deleteCustomForStudentProgramAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentProgramAssociationsById */List<Entity> getCustomForStudentProgramAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentProgramAssociationsById */void putCustomForStudentProgramAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentProgramAssociationsById */String postCustomForStudentProgramAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postTeacherSchoolAssociations */String postTeacherSchoolAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getTeacherSchoolAssociations */List<Entity> getTeacherSchoolAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getTeachersForTeacherSchoolAssociationsByTeacherSchoolAssociationId */List<Entity> getTeachersForTeacherSchoolAssociationsByTeacherSchoolAssociationId(String token, List<String> teacherSchoolAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSchoolsForTeacherSchoolAssociationsByTeacherSchoolAssociationId */List<Entity> getSchoolsForTeacherSchoolAssociationsByTeacherSchoolAssociationId(String token, List<String> teacherSchoolAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteTeacherSchoolAssociationsById */void deleteTeacherSchoolAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getTeacherSchoolAssociationsById */List<Entity> getTeacherSchoolAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putTeacherSchoolAssociationsById */void putTeacherSchoolAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForTeacherSchoolAssociationsById */void deleteCustomForTeacherSchoolAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForTeacherSchoolAssociationsById */List<Entity> getCustomForTeacherSchoolAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForTeacherSchoolAssociationsById */void putCustomForTeacherSchoolAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForTeacherSchoolAssociationsById */String postCustomForTeacherSchoolAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postDisciplineActions */String postDisciplineActions(String token, Entity entity) throws IOException, StatusCodeException;/** * getDisciplineActions */List<Entity> getDisciplineActions(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteDisciplineActionsByDisciplineActionId */void deleteDisciplineActionsByDisciplineActionId(String token, String entityId) throws IOException, StatusCodeException;/** * getDisciplineActionsByDisciplineActionId */List<Entity> getDisciplineActionsByDisciplineActionId(String token, List<String> disciplineActionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putDisciplineActionsByDisciplineActionId */void putDisciplineActionsByDisciplineActionId(String token, String disciplineActionId, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForDisciplineActionsById */void deleteCustomForDisciplineActionsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForDisciplineActionsById */List<Entity> getCustomForDisciplineActionsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForDisciplineActionsById */void putCustomForDisciplineActionsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForDisciplineActionsById */String postCustomForDisciplineActionsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudents */String postStudents(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudents */List<Entity> getStudents(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getProgramsForStudentProgramAssociationsForStudentsByStudentId */List<Entity> getProgramsForStudentProgramAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentAssessmentsForStudentsByStudentId */List<Entity> getStudentAssessmentsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentCohortAssociationsForStudentsByStudentId */List<Entity> getStudentCohortAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCourseTranscriptsForStudentsByStudentId */List<Entity> getCourseTranscriptsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentParentAssociationsForStudentsByStudentId */List<Entity> getStudentParentAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentDisciplineIncidentAssociationsForStudentsByStudentId */List<Entity> getStudentDisciplineIncidentAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getReportCardsForStudentsByStudentId */List<Entity> getReportCardsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getParentsForStudentParentAssociationsForStudentsByStudentId */List<Entity> getParentsForStudentParentAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentProgramAssociationsForStudentsByStudentId */List<Entity> getStudentProgramAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentSchoolAssociationsForStudentsByStudentId */List<Entity> getStudentSchoolAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentSectionAssociationsForStudentsByStudentId */List<Entity> getStudentSectionAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentWithGradeForStudents */List<Entity> getStudentWithGradeForStudents(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentWithGradeForStudentsByStudentId */List<Entity> getStudentWithGradeForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSectionsForStudentSectionAssociationsForStudentsByStudentId */List<Entity> getSectionsForStudentSectionAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSchoolsForStudentSchoolAssociationsForStudentsByStudentId */List<Entity> getSchoolsForStudentSchoolAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getAssessmentsForStudentAssessmentsForStudentsByStudentId */List<Entity> getAssessmentsForStudentAssessmentsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getAttendancesForStudentsByStudentId */List<Entity> getAttendancesForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCoursesForCourseTranscriptsForStudentsByStudentId */List<Entity> getCoursesForCourseTranscriptsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getDisciplineIncidentsForStudentDisciplineIncidentAssociationsForStudentsByStudentId */List<Entity> getDisciplineIncidentsForStudentDisciplineIncidentAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCohortsForStudentCohortAssociationsForStudentsByStudentId */List<Entity> getCohortsForStudentCohortAssociationsForStudentsByStudentId(String token, List<String> studentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentsById */void deleteStudentsById(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentsById */List<Entity> getStudentsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentsById */void putStudentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStudentsById */void deleteCustomForStudentsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentsById */List<Entity> getCustomForStudentsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentsById */void putCustomForStudentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentsById */String postCustomForStudentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postTeachers */String postTeachers(String token, Entity entity) throws IOException, StatusCodeException;/** * getTeachers */List<Entity> getTeachers(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getTeacherSchoolAssociationsForTeachersByTeacherId */List<Entity> getTeacherSchoolAssociationsForTeachersByTeacherId(String token, List<String> teacherId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getTeacherSectionAssociationsForTeachersByTeacherId */List<Entity> getTeacherSectionAssociationsForTeachersByTeacherId(String token, List<String> teacherId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSectionsForTeacherSectionAssociationsForTeachersByTeacherId */List<Entity> getSectionsForTeacherSectionAssociationsForTeachersByTeacherId(String token, List<String> teacherId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSchoolsForTeacherSchoolAssociationsForTeachersByTeacherId */List<Entity> getSchoolsForTeacherSchoolAssociationsForTeachersByTeacherId(String token, List<String> teacherId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteTeachersById */void deleteTeachersById(String token, String entityId) throws IOException, StatusCodeException;/** * getTeachersById */List<Entity> getTeachersById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putTeachersById */void putTeachersById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForTeachersById */void deleteCustomForTeachersById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForTeachersById */List<Entity> getCustomForTeachersById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForTeachersById */void putCustomForTeachersById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForTeachersById */String postCustomForTeachersById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postEducationOrganizations */String postEducationOrganizations(String token, Entity entity) throws IOException, StatusCodeException;/** * getEducationOrganizations */List<Entity> getEducationOrganizations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStaffEducationOrgAssignmentAssociationsForEducationOrganizationsByEducationOrganizationId */List<Entity> getStaffEducationOrgAssignmentAssociationsForEducationOrganizationsByEducationOrganizationId(String token, List<String> educationOrganizationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStaffForStaffEducationOrgAssignmentAssociationsForEducationOrganizationsByEducationOrganizationId */List<Entity> getStaffForStaffEducationOrgAssignmentAssociationsForEducationOrganizationsByEducationOrganizationId(String token, List<String> educationOrganizationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteEducationOrganizationsById */void deleteEducationOrganizationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getEducationOrganizationsById */List<Entity> getEducationOrganizationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putEducationOrganizationsById */void putEducationOrganizationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForEducationOrganizationsById */void deleteCustomForEducationOrganizationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForEducationOrganizationsById */List<Entity> getCustomForEducationOrganizationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForEducationOrganizationsById */void putCustomForEducationOrganizationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForEducationOrganizationsById */String postCustomForEducationOrganizationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postTeacherSectionAssociations */String postTeacherSectionAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getTeacherSectionAssociations */List<Entity> getTeacherSectionAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSectionsForTeacherSectionAssociationsByTeacherSectionAssociationId */List<Entity> getSectionsForTeacherSectionAssociationsByTeacherSectionAssociationId(String token, List<String> teacherSectionAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getTeachersForTeacherSectionAssociationsByTeacherSectionAssociationId */List<Entity> getTeachersForTeacherSectionAssociationsByTeacherSectionAssociationId(String token, List<String> teacherSectionAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteTeacherSectionAssociationsById */void deleteTeacherSectionAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getTeacherSectionAssociationsById */List<Entity> getTeacherSectionAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putTeacherSectionAssociationsById */void putTeacherSectionAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForTeacherSectionAssociationsById */void deleteCustomForTeacherSectionAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForTeacherSectionAssociationsById */List<Entity> getCustomForTeacherSectionAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForTeacherSectionAssociationsById */void putCustomForTeacherSectionAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForTeacherSectionAssociationsById */String postCustomForTeacherSectionAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postSessions */String postSessions(String token, Entity entity) throws IOException, StatusCodeException;/** * getSessions */List<Entity> getSessions(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteSessionsBySessionId */void deleteSessionsBySessionId(String token, String entityId) throws IOException, StatusCodeException;/** * getSessionsBySessionId */List<Entity> getSessionsBySessionId(String token, List<String> sessionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putSessionsBySessionId */void putSessionsBySessionId(String token, String sessionId, Entity entity) throws IOException, StatusCodeException;/** * getCourseOfferingsForSessionsBySessionId */List<Entity> getCourseOfferingsForSessionsBySessionId(String token, List<String> sessionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCoursesForCourseOfferingsForSessionsBySessionId */List<Entity> getCoursesForCourseOfferingsForSessionsBySessionId(String token, List<String> sessionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSchoolSessionAssociationsForSessionsBySchoolId */List<Entity> getSchoolSessionAssociationsForSessionsBySchoolId(String token, List<String> schoolId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSchoolsForSchoolSessionAssociationsForSessionsBySchoolId */List<Entity> getSchoolsForSchoolSessionAssociationsForSessionsBySchoolId(String token, List<String> schoolId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForSessionsById */void deleteCustomForSessionsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForSessionsById */List<Entity> getCustomForSessionsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForSessionsById */void putCustomForSessionsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForSessionsById */String postCustomForSessionsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCourseTranscripts */String postCourseTranscripts(String token, Entity entity) throws IOException, StatusCodeException;/** * getCourseTranscripts */List<Entity> getCourseTranscripts(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCoursesForCourseTranscriptsByCourseTranscriptId */List<Entity> getCoursesForCourseTranscriptsByCourseTranscriptId(String token, List<String> courseTranscriptId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForCourseTranscriptsByCourseTranscriptId */List<Entity> getStudentsForCourseTranscriptsByCourseTranscriptId(String token, List<String> courseTranscriptId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCourseTranscriptsById */void deleteCourseTranscriptsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCourseTranscriptsById */List<Entity> getCourseTranscriptsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCourseTranscriptsById */void putCourseTranscriptsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForCourseTranscriptsById */void deleteCustomForCourseTranscriptsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForCourseTranscriptsById */List<Entity> getCustomForCourseTranscriptsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForCourseTranscriptsById */void putCustomForCourseTranscriptsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForCourseTranscriptsById */String postCustomForCourseTranscriptsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postAttendances */String postAttendances(String token, Entity entity) throws IOException, StatusCodeException;/** * getAttendances */List<Entity> getAttendances(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteAttendancesById */void deleteAttendancesById(String token, String entityId) throws IOException, StatusCodeException;/** * getAttendancesById */List<Entity> getAttendancesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putAttendancesById */void putAttendancesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForAttendancesById */void deleteCustomForAttendancesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForAttendancesById */List<Entity> getCustomForAttendancesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForAttendancesById */void putCustomForAttendancesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForAttendancesById */String postCustomForAttendancesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStaffCohortAssociations */String postStaffCohortAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getStaffCohortAssociations */List<Entity> getStaffCohortAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStaffCohortAssociationsByStaffCohortAssociationId */void deleteStaffCohortAssociationsByStaffCohortAssociationId(String token, String entityId) throws IOException, StatusCodeException;/** * getStaffCohortAssociationsByStaffCohortAssociationId */List<Entity> getStaffCohortAssociationsByStaffCohortAssociationId(String token, List<String> staffCohortAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStaffCohortAssociationsByStaffCohortAssociationId */void putStaffCohortAssociationsByStaffCohortAssociationId(String token, String staffCohortAssociationId, Entity entity) throws IOException, StatusCodeException;/** * getStaffForStaffCohortAssociationsByStaffCohortAssociationId */List<Entity> getStaffForStaffCohortAssociationsByStaffCohortAssociationId(String token, List<String> staffCohortAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCohortsForStaffCohortAssociationsByStaffCohortAssociationId */List<Entity> getCohortsForStaffCohortAssociationsByStaffCohortAssociationId(String token, List<String> staffCohortAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForStaffCohortAssociationsById */void deleteCustomForStaffCohortAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStaffCohortAssociationsById */List<Entity> getCustomForStaffCohortAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStaffCohortAssociationsById */void putCustomForStaffCohortAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStaffCohortAssociationsById */String postCustomForStaffCohortAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postGrades */String postGrades(String token, Entity entity) throws IOException, StatusCodeException;/** * getGrades */List<Entity> getGrades(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteGradesById */void deleteGradesById(String token, String entityId) throws IOException, StatusCodeException;/** * getGradesById */List<Entity> getGradesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putGradesById */void putGradesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForGradesById */void deleteCustomForGradesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForGradesById */List<Entity> getCustomForGradesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForGradesById */void putCustomForGradesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForGradesById */String postCustomForGradesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postSchools */String postSchools(String token, Entity entity) throws IOException, StatusCodeException;/** * getSchools */List<Entity> getSchools(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getTeacherSchoolAssociationsForSchoolsBySchoolId */List<Entity> getTeacherSchoolAssociationsForSchoolsBySchoolId(String token, List<String> schoolId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getTeachersForTeacherSchoolAssociationsForSchoolsBySchoolId */List<Entity> getTeachersForTeacherSchoolAssociationsForSchoolsBySchoolId(String token, List<String> schoolId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentSchoolAssociationsForSchoolsBySchoolId */List<Entity> getStudentSchoolAssociationsForSchoolsBySchoolId(String token, List<String> schoolId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentSchoolAssociationsForSchoolsBySchoolId */List<Entity> getStudentsForStudentSchoolAssociationsForSchoolsBySchoolId(String token, List<String> schoolId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSectionsForSchoolsBySchoolId */List<Entity> getSectionsForSchoolsBySchoolId(String token, List<String> schoolId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSchoolSessionAssociationsForSchoolsBySchoolId */List<Entity> getSchoolSessionAssociationsForSchoolsBySchoolId(String token, List<String> schoolId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSessionsForSchoolSessionAssociationsForSchoolsBySchoolId */List<Entity> getSessionsForSchoolSessionAssociationsForSchoolsBySchoolId(String token, List<String> schoolId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteSchoolsById */void deleteSchoolsById(String token, String entityId) throws IOException, StatusCodeException;/** * getSchoolsById */List<Entity> getSchoolsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putSchoolsById */void putSchoolsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForSchoolsById */void deleteCustomForSchoolsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForSchoolsById */List<Entity> getCustomForSchoolsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForSchoolsById */void putCustomForSchoolsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForSchoolsById */String postCustomForSchoolsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postReportCards */String postReportCards(String token, Entity entity) throws IOException, StatusCodeException;/** * getReportCards */List<Entity> getReportCards(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteReportCardsById */void deleteReportCardsById(String token, String entityId) throws IOException, StatusCodeException;/** * getReportCardsById */List<Entity> getReportCardsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putReportCardsById */void putReportCardsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForReportCardsById */void deleteCustomForReportCardsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForReportCardsById */List<Entity> getCustomForReportCardsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForReportCardsById */void putCustomForReportCardsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForReportCardsById */String postCustomForReportCardsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudentCompetencyObjectives */String postStudentCompetencyObjectives(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentCompetencyObjectives */List<Entity> getStudentCompetencyObjectives(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentCompetencyObjectivesById */void deleteStudentCompetencyObjectivesById(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentCompetencyObjectivesById */List<Entity> getStudentCompetencyObjectivesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentCompetencyObjectivesById */void putStudentCompetencyObjectivesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStudentCompetencyObjectivesById */void deleteCustomForStudentCompetencyObjectivesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentCompetencyObjectivesById */List<Entity> getCustomForStudentCompetencyObjectivesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentCompetencyObjectivesById */void putCustomForStudentCompetencyObjectivesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentCompetencyObjectivesById */String postCustomForStudentCompetencyObjectivesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postSections */String postSections(String token, Entity entity) throws IOException, StatusCodeException;/** * getSections */List<Entity> getSections(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSectionAssessmentAssociationsForSectionsBySectionId */List<Entity> getSectionAssessmentAssociationsForSectionsBySectionId(String token, List<String> sectionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentSectionAssociationsForSectionsBySectionId */List<Entity> getStudentSectionAssociationsForSectionsBySectionId(String token, List<String> sectionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentSectionAssociationsForSectionsBySectionId */List<Entity> getStudentsForStudentSectionAssociationsForSectionsBySectionId(String token, List<String> sectionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getTeacherSectionAssociationsForSectionsBySectionId */List<Entity> getTeacherSectionAssociationsForSectionsBySectionId(String token, List<String> sectionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getTeachersForTeacherSectionAssociationsForSectionsBySectionId */List<Entity> getTeachersForTeacherSectionAssociationsForSectionsBySectionId(String token, List<String> sectionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getAssessmentsForSectionAssessmentAssociationsForSectionsBySectionId */List<Entity> getAssessmentsForSectionAssessmentAssociationsForSectionsBySectionId(String token, List<String> sectionId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteSectionsById */void deleteSectionsById(String token, String entityId) throws IOException, StatusCodeException;/** * getSectionsById */List<Entity> getSectionsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putSectionsById */void putSectionsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForSectionsById */void deleteCustomForSectionsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForSectionsById */List<Entity> getCustomForSectionsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForSectionsById */void putCustomForSectionsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForSectionsById */String postCustomForSectionsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudentCohortAssociations */String postStudentCohortAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentCohortAssociations */List<Entity> getStudentCohortAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentCohortAssociationsByStudentCohortAssociationId */void deleteStudentCohortAssociationsByStudentCohortAssociationId(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentCohortAssociationsByStudentCohortAssociationId */List<Entity> getStudentCohortAssociationsByStudentCohortAssociationId(String token, List<String> studentCohortAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentCohortAssociationsByStudentCohortAssociationId */void putStudentCohortAssociationsByStudentCohortAssociationId(String token, String studentCohortAssociationId, Entity entity) throws IOException, StatusCodeException;/** * getStudentsForStudentCohortAssociationsByStudentCohortAssociationId */List<Entity> getStudentsForStudentCohortAssociationsByStudentCohortAssociationId(String token, List<String> studentCohortAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCohortsForStudentCohortAssociationsByStudentCohortAssociationId */List<Entity> getCohortsForStudentCohortAssociationsByStudentCohortAssociationId(String token, List<String> studentCohortAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForStudentCohortAssociationsById */void deleteCustomForStudentCohortAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentCohortAssociationsById */List<Entity> getCustomForStudentCohortAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentCohortAssociationsById */void putCustomForStudentCohortAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentCohortAssociationsById */String postCustomForStudentCohortAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postLearningObjectives */String postLearningObjectives(String token, Entity entity) throws IOException, StatusCodeException;/** * getLearningObjectives */List<Entity> getLearningObjectives(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentCompetenciesForLearningObjectivesByLearningObjectiveId */List<Entity> getStudentCompetenciesForLearningObjectivesByLearningObjectiveId(String token, List<String> learningObjectiveId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getLearningStandardsForLearningObjectivesByLearningObjectiveId */List<Entity> getLearningStandardsForLearningObjectivesByLearningObjectiveId(String token, List<String> learningObjectiveId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getParentLearningObjectivesForLearningObjectivesByLearningObjectiveId */List<Entity> getParentLearningObjectivesForLearningObjectivesByLearningObjectiveId(String token, List<String> learningObjectiveId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getChildLearningObjectivesForLearningObjectivesByLearningObjectiveId */List<Entity> getChildLearningObjectivesForLearningObjectivesByLearningObjectiveId(String token, List<String> learningObjectiveId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteLearningObjectivesById */void deleteLearningObjectivesById(String token, String entityId) throws IOException, StatusCodeException;/** * getLearningObjectivesById */List<Entity> getLearningObjectivesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putLearningObjectivesById */void putLearningObjectivesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForLearningObjectivesById */void deleteCustomForLearningObjectivesById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForLearningObjectivesById */List<Entity> getCustomForLearningObjectivesById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForLearningObjectivesById */void putCustomForLearningObjectivesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForLearningObjectivesById */String postCustomForLearningObjectivesById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudentSectionAssociations */String postStudentSectionAssociations(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentSectionAssociations */List<Entity> getStudentSectionAssociations(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentSectionAssociationsByStudentSectionAssociationId */List<Entity> getStudentsForStudentSectionAssociationsByStudentSectionAssociationId(String token, List<String> studentSectionAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getSectionsForStudentSectionAssociationsByStudentSectionAssociationId */List<Entity> getSectionsForStudentSectionAssociationsByStudentSectionAssociationId(String token, List<String> studentSectionAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentCompetenciesForStudentSectionAssociationsByStudentSectionAssociationId */List<Entity> getStudentCompetenciesForStudentSectionAssociationsByStudentSectionAssociationId(String token, List<String> studentSectionAssociationId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentSectionAssociationsById */void deleteStudentSectionAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentSectionAssociationsById */List<Entity> getStudentSectionAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentSectionAssociationsById */void putStudentSectionAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStudentSectionAssociationsById */void deleteCustomForStudentSectionAssociationsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentSectionAssociationsById */List<Entity> getCustomForStudentSectionAssociationsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentSectionAssociationsById */void putCustomForStudentSectionAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentSectionAssociationsById */String postCustomForStudentSectionAssociationsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postPrograms */String postPrograms(String token, Entity entity) throws IOException, StatusCodeException;/** * getPrograms */List<Entity> getPrograms(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteProgramsByProgramId */void deleteProgramsByProgramId(String token, String entityId) throws IOException, StatusCodeException;/** * getProgramsByProgramId */List<Entity> getProgramsByProgramId(String token, List<String> programId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putProgramsByProgramId */void putProgramsByProgramId(String token, String programId, Entity entity) throws IOException, StatusCodeException;/** * getStaffForStaffProgramAssociationsForProgramsByProgramId */List<Entity> getStaffForStaffProgramAssociationsForProgramsByProgramId(String token, List<String> programId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentProgramAssociationsForProgramsByProgramId */List<Entity> getStudentProgramAssociationsForProgramsByProgramId(String token, List<String> programId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentProgramAssociationsForProgramsByProgramId */List<Entity> getStudentsForStudentProgramAssociationsForProgramsByProgramId(String token, List<String> programId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStaffProgramAssociationsForProgramsByProgramId */List<Entity> getStaffProgramAssociationsForProgramsByProgramId(String token, List<String> programId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForProgramsById */void deleteCustomForProgramsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForProgramsById */List<Entity> getCustomForProgramsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForProgramsById */void putCustomForProgramsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForProgramsById */String postCustomForProgramsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postParents */String postParents(String token, Entity entity) throws IOException, StatusCodeException;/** * getParents */List<Entity> getParents(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteParentsByParentId */void deleteParentsByParentId(String token, String entityId) throws IOException, StatusCodeException;/** * getParentsByParentId */List<Entity> getParentsByParentId(String token, List<String> parentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putParentsByParentId */void putParentsByParentId(String token, String parentId, Entity entity) throws IOException, StatusCodeException;/** * getStudentParentAssociationsForParentsByParentId */List<Entity> getStudentParentAssociationsForParentsByParentId(String token, List<String> parentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentParentAssociationsForParentsByParentId */List<Entity> getStudentsForStudentParentAssociationsForParentsByParentId(String token, List<String> parentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForParentsById */void deleteCustomForParentsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForParentsById */List<Entity> getCustomForParentsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForParentsById */void putCustomForParentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForParentsById */String postCustomForParentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postDisciplineIncidents */String postDisciplineIncidents(String token, Entity entity) throws IOException, StatusCodeException;/** * getDisciplineIncidents */List<Entity> getDisciplineIncidents(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteDisciplineIncidentsByDisciplineIncidentId */void deleteDisciplineIncidentsByDisciplineIncidentId(String token, String entityId) throws IOException, StatusCodeException;/** * getDisciplineIncidentsByDisciplineIncidentId */List<Entity> getDisciplineIncidentsByDisciplineIncidentId(String token, List<String> disciplineIncidentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putDisciplineIncidentsByDisciplineIncidentId */void putDisciplineIncidentsByDisciplineIncidentId(String token, String disciplineIncidentId, Entity entity) throws IOException, StatusCodeException;/** * getStudentDisciplineIncidentAssociationsForDisciplineIncidentsByDisciplineIncidentId */List<Entity> getStudentDisciplineIncidentAssociationsForDisciplineIncidentsByDisciplineIncidentId(String token, List<String> disciplineIncidentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentDisciplineIncidentAssociationsForDisciplineIncidentsByDisciplineIncidentId */List<Entity> getStudentsForStudentDisciplineIncidentAssociationsForDisciplineIncidentsByDisciplineIncidentId(String token, List<String> disciplineIncidentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteCustomForDisciplineIncidentsById */void deleteCustomForDisciplineIncidentsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForDisciplineIncidentsById */List<Entity> getCustomForDisciplineIncidentsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForDisciplineIncidentsById */void putCustomForDisciplineIncidentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForDisciplineIncidentsById */String postCustomForDisciplineIncidentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStaff */String postStaff(String token, Entity entity) throws IOException, StatusCodeException;/** * getStaff */List<Entity> getStaff(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getProgramsForStaffProgramAssociationsForStaffByStaffId */List<Entity> getProgramsForStaffProgramAssociationsForStaffByStaffId(String token, List<String> staffId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStaffCohortAssociationsForStaffByStaffId */List<Entity> getStaffCohortAssociationsForStaffByStaffId(String token, List<String> staffId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStaffEducationOrgAssignmentAssociationsForStaffByStaffId */List<Entity> getStaffEducationOrgAssignmentAssociationsForStaffByStaffId(String token, List<String> staffId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStaffProgramAssociationsForStaffByStaffId */List<Entity> getStaffProgramAssociationsForStaffByStaffId(String token, List<String> staffId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getEducationOrganizationsForStaffEducationOrgAssignmentAssociationsForStaffByStaffId */List<Entity> getEducationOrganizationsForStaffEducationOrgAssignmentAssociationsForStaffByStaffId(String token, List<String> staffId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getCohortsForStaffCohortAssociationsForStaffByStaffId */List<Entity> getCohortsForStaffCohortAssociationsForStaffByStaffId(String token, List<String> staffId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStaffById */void deleteStaffById(String token, String entityId) throws IOException, StatusCodeException;/** * getStaffById */List<Entity> getStaffById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStaffById */void putStaffById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStaffById */void deleteCustomForStaffById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStaffById */List<Entity> getCustomForStaffById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStaffById */void putCustomForStaffById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStaffById */String postCustomForStaffById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postStudentAssessments */String postStudentAssessments(String token, Entity entity) throws IOException, StatusCodeException;/** * getStudentAssessments */List<Entity> getStudentAssessments(String token, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getAssessmentsForStudentAssessmentsByStudentAssessmentId */List<Entity> getAssessmentsForStudentAssessmentsByStudentAssessmentId(String token, List<String> studentAssessmentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * getStudentsForStudentAssessmentsByStudentAssessmentId */List<Entity> getStudentsForStudentAssessmentsByStudentAssessmentId(String token, List<String> studentAssessmentId, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * deleteStudentAssessmentsById */void deleteStudentAssessmentsById(String token, String entityId) throws IOException, StatusCodeException;/** * getStudentAssessmentsById */List<Entity> getStudentAssessmentsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putStudentAssessmentsById */void putStudentAssessmentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * deleteCustomForStudentAssessmentsById */void deleteCustomForStudentAssessmentsById(String token, String entityId) throws IOException, StatusCodeException;/** * getCustomForStudentAssessmentsById */List<Entity> getCustomForStudentAssessmentsById(String token, List<String> id, Map<String,Object> queryArgs) throws IOException, StatusCodeException;/** * putCustomForStudentAssessmentsById */void putCustomForStudentAssessmentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;/** * postCustomForStudentAssessmentsById */String postCustomForStudentAssessmentsById(String token, String id, Entity entity) throws IOException, StatusCodeException;}