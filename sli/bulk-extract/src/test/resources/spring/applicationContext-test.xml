<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="ApplicationProperties"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="locations">
            <list>
                <value>file:///${sli.conf}</value>
                <!-- override specific properties for testing -->
                <value>file:///${sli.test.conf}</value>
            </list>
        </property>
    </bean>

    <import resource="classpath:/spring/db.xml" />
    <import resource="classpath:/spring/writer-context-test.xml" />
    
    <bean id="validator" class="org.slc.sli.validation.schema.ApiNeutralSchemaValidator" />

    <bean id="dalEntityCipher" class="org.slc.sli.dal.encrypt.AesCipher" />
    <bean id="entityEncryption" class="org.slc.sli.dal.encrypt.EntityEncryption" />
    
    <util:map id="entitiesToCollections" key-type="java.lang.String" value-type="java.lang.String">
        <entry key="assessment" value="assessment" />
        <entry key="assessmentFamily" value="assessmentFamily" />
        <entry key="assessmentPeriodDescriptor" value="assessmentPeriodDescriptor" />
        <entry key="attendance" value="attendance" />
	<entry key="calendarDate" value="calendarDate" />
        <entry key="cohort" value="cohort" />
        <entry key="competencyLevelDescriptor" value="competencyLevelDescriptor" />
        <entry key="course" value="course" />
        <entry key="courseOffering" value="courseOffering" />
        <entry key="courseTranscript" value="courseTranscript" />
        <entry key="disciplineAction" value="disciplineAction" />
        <entry key="disciplineIncident" value="disciplineIncident" />
        <entry key="educationOrganization" value="educationOrganization" />
        <entry key="grade" value="yearlyTranscript" />
        <entry key="gradebookEntry" value="section" />
        <entry key="gradingPeriod" value="gradingPeriod" />
        <entry key="graduationPlan" value="graduationPlan" />
        <entry key="learningObjective" value="learningObjective" />
        <entry key="learningStandard" value="learningStandard" />
        <entry key="parent" value="parent" />
        <entry key="program" value="program" />
        <entry key="reportCard" value="yearlyTranscript" />
        <entry key="school" value="educationOrganization" />
        <entry key="section" value="section" />
        <entry key="session" value="session" />
        <entry key="staff" value="staff" />
        <entry key="staffCohortAssociation" value="staffCohortAssociation" />
        <entry key="staffEducationOrganizationAssociation" value="staffEducationOrganizationAssociation" />
        <entry key="staffProgramAssociation" value="staffProgramAssociation" />
        <entry key="student" value="student" />
        <entry key="studentAcademicRecord" value="yearlyTranscript" />
        <entry key="studentAssessment" value="studentAssessment" />
        <entry key="studentCohortAssociation" value="cohort" />
        <entry key="studentCompetency" value="studentCompetency" />
        <entry key="studentCompetencyObjective" value="studentCompetencyObjective" />
        <entry key="studentDisciplineIncidentAssociation" value="student" />
        <entry key="studentGradebookEntry" value="studentGradebookEntry" />
        <entry key="studentParentAssociation" value="student" />
        <entry key="studentProgramAssociation" value="program" />
        <entry key="studentSchoolAssociation" value="studentSchoolAssociation" />
        <entry key="studentSectionAssociation" value="section" />
        <entry key="teacher" value="staff" />
        <entry key="teacherSchoolAssociation" value="teacherSchoolAssociation" />
        <entry key="teacherSectionAssociation" value="section" />
    </util:map>
    
    <util:map id="multiFileEntities" key-type="java.lang.String" value-type="java.lang.String">
        <entry key="teacher" value="staff" />
        <entry key="school" value="educationOrganization" />
    </util:map>
    
    <bean id="defaultWriterMap" class="org.slc.sli.bulk.extract.util.DefaultHashMap" >
        <constructor-arg ref="writers" type="java.util.Map"/>
        <constructor-arg ref="defaultWriter"/>
    </bean>

    <bean id="writer" class="org.slc.sli.bulk.extract.files.EntityWriterManager">
         <property name="writers" ref="defaultWriterMap" />
         <property name="multiFileEntities" ref="multiFileEntities" />
         <property name="entities" ref="entitiesToCollections" />
    </bean>

    <bean id="entityExtractor" class="org.slc.sli.bulk.extract.extractor.EntityExtractor">
         <property name="entityRepository" ref="secondaryReadRepository" />
         <property name="writer" ref="writer" />
    </bean>

    <bean id="tenantExtractor" class="org.slc.sli.bulk.extract.extractor.TenantExtractor">
         <property name="entitiesToCollections" ref="entitiesToCollections" />
         <property name="entityExtractor" ref="entityExtractor" />
    </bean>
    
    <bean id="localEdorgExtractor" class="org.slc.sli.bulk.extract.extractor.LocalEdOrgExtractor">
    </bean>
    
    <bean id="launcher" class="org.slc.sli.bulk.extract.Launcher">
        <property name="baseDirectory" value="${sli.bulk.extract.output.directory:extract}" />
        <property name="tenantExtractor" ref="tenantExtractor" />
    </bean>
    
    <bean id="bulkExtractMongoDA" class="org.slc.sli.bulk.extract.BulkExtractMongoDA">
         <property name="entityRepository" ref="secondaryReadRepository" />
    </bean>

    <context:component-scan base-package="org.slc">
        <context:exclude-filter type="regex"
            expression=".*CustomImpl" />
        <context:exclude-filter type="regex"
            expression=".*DummyEntityRepository" />
        <context:exclude-filter type="regex"
            expression=".*AvroEntityValidator" />
        <context:exclude-filter type="regex"
            expression=".*NeutralSchemaValidator" />
        <context:exclude-filter type="regex"
            expression=".*AggregationLoader" />
        <context:exclude-filter type="regex"
            expression=".*LdapServiceImpl" />
    </context:component-scan>

    <bean id="secondaryReadRepository" name="secondaryRepo" class="org.slc.sli.bulk.extract.SecondaryReadRepository" parent="mongoEntityRepository"/>
</beans>

