<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="ApplicationProperties"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="locations">
            <list>
                <value>file:///${sli.conf}</value>
                <!-- override specific properties for testing -->
                <value>file:///${sli.test.conf}</value>
            </list>
        </property>
    </bean>

    <import resource="classpath:/spring/db.xml" />

    <bean id="validator" class="org.slc.sli.validation.schema.ApiNeutralSchemaValidator" />

    <bean id="dalEntityCipher" class="org.slc.sli.dal.encrypt.AesCipher" />
    <bean id="entityEncryption" class="org.slc.sli.dal.encrypt.EntityEncryption" />

    <util:list id="excludedCollections" value-type="java.lang.String">
        <value>error</value>
        <value>recordHash</value>
    </util:list>

    <util:list id="yearlyTranscriptSubdocs" value-type="java.lang.String">
        <value>grade</value>
        <value>reportCard</value>
        <value>studentAcademicRecord</value>
    </util:list>

    <bean id="entityExtractor" class="org.slc.sli.bulk.extract.extractor.EntityExtractor">
         <property name="entityRepository" ref="mongoEntityRepository" />
         <property name="excludedCollections" ref="excludedCollections" />
         <property name="yearlyTranscriptSubdocs" ref="yearlyTranscriptSubdocs" />
         <property name="applicator" ref="applicator" />
    </bean>

    <bean id="tenantExtractor" class="org.slc.sli.bulk.extract.extractor.TenantExtractor">
         <property name="entityExtractor" ref="entityExtractor" />
    </bean>

    <bean id="launcher" class="org.slc.sli.bulk.extract.Launcher">
        <property name="baseDirectory" value="${sli.bulk.extract.output.directory:extract}" />
        <property name="tenantExtractor" ref="tenantExtractor" />
    </bean>

    <bean id="applicator" class="org.slc.sli.bulk.extract.treatment.TreatmentApplicator">
         <property name="treatments" ref="treatments" />
    </bean>

    <bean id="idTreatment" class="org.slc.sli.bulk.extract.treatment.IdTreatment" />

    <bean id="typeTreatment" class="org.slc.sli.bulk.extract.treatment.TypeTreatment" />

    <util:list id="treatments" value-type="org.slc.sli.bulk.extract.treatment.Treatment">
        <ref local="idTreatment"/>
        <ref local="typeTreatment"/>
    </util:list>

    <context:component-scan base-package="org.slc">
        <context:exclude-filter type="regex"
            expression=".*CustomImpl" />
        <context:exclude-filter type="regex"
            expression=".*DummyEntityRepository" />
        <context:exclude-filter type="regex"
            expression=".*AvroEntityValidator" />
        <context:exclude-filter type="regex"
            expression=".*NeutralSchemaValidator" />
        <context:exclude-filter type="regex"
            expression=".*AggregationLoader" />
        <context:exclude-filter type="regex"
            expression=".*LdapServiceImpl" />
    </context:component-scan>

</beans>

