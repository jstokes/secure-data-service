<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

  <import resource="recordLvlHash-context.xml" />

  <util:list id="excluded" value-type="java.lang.String">
    <value>system.indexes</value>
    <value>system.js</value>
    <value>system.namespaces</value>
    <value>system.profile</value>
    <value>system.users</value>
    <value>tenant</value>
    <value>securityEvent</value>
    <value>realm</value>
    <value>application</value>
    <value>roles</value>
    <value>customRole</value>
  </util:list>

  <bean id="purgeProcessor" class="org.slc.sli.ingestion.processors.PurgeProcessor">
    <property name="mongoTemplate" ref="mongoTemplate" />
    <property name="batchJobDAO" ref="batchJobMongoDA" />
    <property name="messageReport" ref="databaseMessageReport" />
    <property name="sandboxEnabled" value="${sli.sandbox.enabled}" />
    <property name="purgeBatchSize" value="${sli.ingestion.purge.batch.size:30000}" />
  </bean>

  <bean name="ingestionProcessor" class="org.slc.sli.ingestion.processors.IngestionProcessor" abstract="true">
    <property name="batchJobDAO" ref="batchJobMongoDA" />
    <property name="messageReport" ref="databaseMessageReport" />
  </bean>

  <bean id="deltaFilterProcessor" class="org.slc.sli.ingestion.processors.DeltaProcessor" parent="ingestionProcessor">
    <property name="dIdStrategy" ref="deterministicUUIDGeneratorStrategy" />
    <property name="dIdResolver" ref="deterministicIdResolver" />
    <property name="recordLevelDeltaEnabledEntities" ref="recordLevelDeltaEnabledEntities" />
  </bean>

  <bean id="stagingProcessor" class="org.slc.sli.ingestion.processors.StagingProcessor" parent="ingestionProcessor">
    <property name="nrMongoStagingWriter" ref="neutralRecordMongoAccess" />
  </bean>

  <bean id="xsdTypeProvider" class="org.slc.sli.ingestion.parser.impl.XsdTypeProvider">
    <property name="schemaFiles" value="classpath:edfiXsd-SLI/*.xsd" />
  </bean>

  <bean id="xmlFileValidator" class="org.slc.sli.ingestion.landingzone.validation.XmlFileValidator" />

  <!-- This will go away upon completion of US4198 -->
  <bean id="XmlFileHandler" class="org.slc.sli.ingestion.handler.XmlFileHandler" scope="prototype">
    <property name="preValidators">
      <util:list value-type="org.slc.sli.ingestion.validation.Validator">
        <bean class="org.slc.sli.ingestion.landingzone.validation.XmlFileValidator" />
        <ref bean="xsdValidator" />
      </util:list>
    </property>
  </bean>

  <bean id="edFiParserProcessor" class="org.slc.sli.ingestion.processors.EdFiParserProcessor" parent="ingestionProcessor">
    <property name="batchSize" value="${sli.ingestion.parser.batch.size:1000}" />
    <property name="typeProvider" ref="xsdTypeProvider" />
    <property name="xsdSelector" ref="xsdSelector" />
    <property name="producer" ref="parserEndPoint" />
    <property name="preValidators">
      <util:list value-type="org.slc.sli.ingestion.validation.Validator">
        <bean class="org.slc.sli.ingestion.landingzone.validation.XmlFileValidator" />
      </util:list>
    </property>
  </bean>
  
  <bean id="deltaHashPurgeProcessor" class="org.slc.sli.ingestion.processors.DeltaHashPurgeProcessor" parent="ingestionProcessor"/>

  <bean id="persistenceProcessor" class="org.slc.sli.ingestion.processors.PersistenceProcessor">
    <property name="transformer" ref="smooksEdFi2SLITransformer" />
    <property name="defaultEntityPersistHandler" ref="entityPersistHandler" />
    <property name="entityPersistTypeMap" ref="entityPersistTypeMap" />
    <property name="neutralRecordReadConverter" ref="neutralRecordReadConverter" />
    <property name="recordLvlHashNeutralRecordTypes" ref="recordLevelDeltaEnabledEntities" />
  </bean>

  <bean id="WorkNoteSplitter" class="org.slc.sli.ingestion.routes.orchestra.WorkNoteSplitter" />

  <bean id="ZipFileSplitter" class="org.slc.sli.ingestion.routes.orchestra.ZipFileSplitter" />

  <bean id="stagedEntityTypeDAO" class="org.slc.sli.ingestion.routes.orchestra.InMemoryStagedEntityTypeDAO" />

  <bean id="balancedTimestampSplitStrategy" class="org.slc.sli.ingestion.routes.orchestra.BalancedTimestampSplitStrategy">
    <property name="neutralRecordAccess" ref="neutralRecordMongoAccess" />
  </bean>

    <bean id="fileEntryLatch" class="org.slc.sli.ingestion.routes.orchestra.parsing.FileEntryLatch" >
        <property name="batchJobDAO" ref="batchJobMongoDA" />
    </bean>
  
</beans>
