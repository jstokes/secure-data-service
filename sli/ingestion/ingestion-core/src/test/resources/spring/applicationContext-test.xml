<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mongo="http://www.springframework.org/schema/data/mongo"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    >

  <bean id="ingestionPropertiesPlaceholder" class="org.slc.sli.ingestion.util.ExposedPropertyPlaceholderConfigurer">

    <!-- this avoids errors with *other* property placeholders -->
    <property name="ignoreUnresolvablePlaceholders" value="true" />

    <!-- this allows using an optional local properties file (ingestion-dev.properties) -->
    <property name="ignoreResourceNotFound" value="true" />

    <property name="locations">
      <list>
        <value>file:${sli.conf}</value>
        <value>classpath:ingestion.properties</value>

        <!-- Override with test properties -->
        <value>file:${sli.test.conf}</value>
      </list>
    </property>
  </bean>

  <import resource="activemq-context.xml" />
  <import resource="smooks-context.xml" />
  <import resource="classpath:/spring/db.xml" />
  <import resource="dal-context.xml" />

  <import resource="core-message-context.xml" />
  <import resource="persistence-context.xml" />
  <import resource="validation-context.xml" />
  <import resource="handler-context.xml" />
  <import resource="processor-context.xml" />
  <import resource="idRefResolution-context.xml" />
  <import resource="recordLvlHash-context.xml" />
  <import resource="tenantdb-context.xml" />

  <!-- <bean id="ProfileAwareTestBean" class="org.slc.sli.repository.ProfileAwareTest"> <property name="slienv" value="${sli.env}"
    /> <property name="testprop" value="${sli.test.prop}" /> </bean> -->

  <context:component-scan base-package="org.slc.sli">
    <context:exclude-filter type="regex" expression=".*CustomImpl" />
    <context:exclude-filter type="regex" expression=".*DummyEntityRepository" />
    <context:exclude-filter type="regex" expression=".*AvroEntityValidator"></context:exclude-filter>
    <context:exclude-filter type="regex" expression=".*AesCipher" />
    <context:exclude-filter type="regex" expression=".*MemcachedCacheProvider" />
    <context:exclude-filter type="regex" expression=".*LdapServiceImpl" />
  </context:component-scan>


  <bean id="dalEntityCipher" class="org.slc.sli.dal.encrypt.InsecureCipher" />

  <!-- <bean id="entitySchemaRegistry" class="org.slc.sli.validation.AvroEntitySchemaRegistry"></bean> -->
  <bean id="validator" class="org.slc.sli.validation.schema.NeutralSchemaValidator" />

  <bean id="repo"  name="validationRepo" class="org.slc.sli.validation.DummyEntityRepository">
     <constructor-arg value="true" type="boolean" />
  </bean>

  <context:annotation-config />

  <bean id="lz" class="org.slc.sli.ingestion.landingzone.LocalFileSystemLandingZone">
    <property name="directory" value="src/test/resources/dummylz"></property>
  </bean>

  <bean id="controlFileValidator" class="org.slc.sli.ingestion.landingzone.validation.ControlFileValidator">
    <property name="ingestionFileValidators">
      <list>
        <bean class="org.slc.sli.ingestion.landingzone.validation.FileFormatValidator" />
        <bean class="org.slc.sli.ingestion.landingzone.validation.FileTypeValidator" />
        <bean class="org.slc.sli.ingestion.landingzone.validation.ChecksumValidator" />
      </list>
    </property>
  </bean>

  <bean id="zipFileValidator" class="org.slc.sli.ingestion.landingzone.validation.ZipFileValidator">
  </bean>

  <bean id="indexValidator" class="org.slc.sli.ingestion.validation.IndexValidator" />
  <bean id="tenantDBIndexValidator" class="org.slc.sli.ingestion.validation.indexes.TenantDBIndexValidator" />
  <bean id="sliDbIndexValidator" class="org.slc.sli.ingestion.validation.indexes.SLIDbIndexValidator" />
  <bean id="batchJobDbIndexValidator" class="org.slc.sli.ingestion.validation.indexes.BatchJobDbIndexValidator" />


  <bean id="messageSource" parent="coreMessageSource" />

  <camelContext xmlns="http://camel.apache.org/schema/spring" />

  <bean id="smooksFileHandler" class="org.slc.sli.ingestion.handler.SmooksFileHandler" />

  <bean id="tenantDA" class="org.slc.sli.ingestion.tenant.TenantMongoDA" >
    <property name="entityRepository" ref="mongoEntityRepository" />
  </bean>

  <bean id="tenantPopulator" class="org.slc.sli.ingestion.tenant.TenantPopulator">
    <property name="parentLandingZoneDir" value="${landingzone.inbounddir}" />
    <property name="tenantRecordResourcePaths">
      <list>
        <value>classpath:tenants/tenant_IL.json</value>
        <value>classpath:tenants/tenant_NY.json</value>
      </list>
    </property>
  </bean>

  <bean id="entityPersistHandler" class="org.slc.sli.ingestion.handler.EntityPersistHandler">
    <property name="entityRepository" ref="mongoEntityRepository" />
    <property name="messageSource" ref="messageSource" />
  </bean>

  <bean id="persistenceProcessor" class="org.slc.sli.ingestion.processors.PersistenceProcessor">
    <property name="transformer" ref="smooksEdFi2SLITransformer" />
    <property name="defaultEntityPersistHandler" ref="entityPersistHandler" />
    <property name="entityPersistTypeMap" ref="entityPersistTypeMap" />
    <property name="neutralRecordReadConverter" ref="neutralRecordReadConverter" />
    <property name="recordLvlHashNeutralRecordTypes" ref="recordLvlHashNeutralRecordTypes" />
  </bean>

  <bean id="WorkNoteSplitter" class="org.slc.sli.ingestion.routes.orchestra.WorkNoteSplitter" />
  <bean id="stagedEntityTypeDAO" class="org.slc.sli.ingestion.routes.orchestra.InMemoryStagedEntityTypeDAO" />

  <bean id="dummyNeutralRecordAccess" class="org.slc.sli.ingestion.routes.orchestra.BalancedTimestampSplitStrategyTest.DummyNeutralRecordAccess" />
  <bean id="balancedTimestampSplitStrategy" class="org.slc.sli.ingestion.routes.orchestra.BalancedTimestampSplitStrategy">
    <property name="neutralRecordAccess" ref="dummyNeutralRecordAccess" />
  </bean>

  <util:set id="testIndexes" set-class="java.util.TreeSet">
    <!-- (collection,unique,indexKeys ...) -->
    <!-- creationTime indexes for all collections -->
    <value>assessment,false,creationTime</value>
    <value>assessmentFamily,false,creationTime</value>
    <value>assessmentItem,false,creationTime</value>
  </util:set>

</beans>
