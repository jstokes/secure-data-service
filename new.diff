diff --git a/sli/acceptance-tests/Gemfile b/sli/acceptance-tests/Gemfile
index 90ac7f7..db7d1cd 100644
--- a/sli/acceptance-tests/Gemfile
+++ b/sli/acceptance-tests/Gemfile
@@ -3,6 +3,7 @@ gem 'rake'
 gem 'oauth2'
 gem 'mongo', '1.8.2'
 gem 'selenium-webdriver', '2.38.0'
+gem 'capybara'
 gem 'rest-client'
 gem 'builder'
 gem 'cucumber'
@@ -25,4 +26,4 @@ gem 'nokogiri'
 gem 'simplecov'
 gem 'headless'
 gem 'archive-tar-minitar'
-gem 'macaddr'
+gem 'macaddr'
\ No newline at end of file
diff --git a/sli/acceptance-tests/Gemfile.lock b/sli/acceptance-tests/Gemfile.lock
index f41cffb..2cb3778 100644
--- a/sli/acceptance-tests/Gemfile.lock
+++ b/sli/acceptance-tests/Gemfile.lock
@@ -14,6 +14,12 @@ GEM
     bson_ext (1.8.2)
       bson (~> 1.8.2)
     builder (3.0.0)
+    capybara (2.2.1)
+      mime-types (>= 1.16)
+      nokogiri (>= 1.3.3)
+      rack (>= 1.0.0)
+      rack-test (>= 0.5.4)
+      xpath (~> 2.0)
     childprocess (0.3.7)
       ffi (~> 1.0, >= 1.0.6)
     clbustos-rtf (0.4.2)
@@ -79,6 +85,8 @@ GEM
     prawn-svg (0.9.1.11)
       prawn (>= 0.8.4)
     rack (1.4.1)
+    rack-test (0.6.2)
+      rack (>= 1.0)
     rake (0.9.2.2)
     reportbuilder (1.4.2)
       clbustos-rtf (~> 0.4.0)
@@ -133,6 +141,8 @@ GEM
       polyglot (>= 0.3.1)
     uuidtools (2.1.3)
     websocket (1.0.7)
+    xpath (2.0.0)
+      nokogiri (~> 1.3)
 
 PLATFORMS
   ruby
@@ -144,6 +154,7 @@ DEPENDENCIES
   archive-tar-minitar
   bson_ext
   builder
+  capybara
   cucumber
   ffi (= 1.0.9)
   headless
diff --git a/sli/acceptance-tests/find_users.rb b/sli/acceptance-tests/find_users.rb
index f80474b..8ddacf0 100644
--- a/sli/acceptance-tests/find_users.rb
+++ b/sli/acceptance-tests/find_users.rb
@@ -4,7 +4,7 @@ require 'pp'
 
 class FindUsers
 
-  attr :users
+  attr :users, :missing_users
   attr_reader :feature_files
 
   KNOWN_USERS = [
@@ -71,6 +71,17 @@ class FindUsers
     dedup
   end
 
+  def find_missing
+    @missing_users = []
+    @feature_files.each do |file|
+      content = IO.read(file)
+
+      pattern = %r{\sI submit the credentials "([^"]*)" "([^"]*)"}
+      content.scan(pattern) { |username, password| @missing_users << username }
+    end
+    @missing_users.sort!.uniq!
+  end
+
   def users_by_realm
     grouped = users.group_by { |item| item[2] }
     grouped.each do |realm, users|
@@ -88,8 +99,12 @@ class FindUsers
 end
 
 f=FindUsers.new
-f.find
-users = f.users
-puts "Found #{users.count} users"
-users.each {|u| puts u.join(', ')}
-puts f.users_by_realm.to_json
+users = f.find
+known_users = users.map{|u| u.first}
+other_users = f.find_missing
+
+missing_users = other_users - known_users
+
+puts "Found #{missing_users.count} users"
+
+missing_users.each {|u| puts u}
diff --git a/sli/acceptance-tests/suites/apiV1.rake b/sli/acceptance-tests/suites/apiV1.rake
index 8ca1169..1407d6d 100644
--- a/sli/acceptance-tests/suites/apiV1.rake
+++ b/sli/acceptance-tests/suites/apiV1.rake
@@ -37,7 +37,6 @@ task :apiV1EntityTests => [:realmInit] do
   runTests("test/features/apiV1/entities/crud/admin_crud.feature")
   runTests("test/features/apiV1/entities/crud/section_crud.feature")
   runTests("test/features/apiV1/entities/crud/crud.feature")
-  runTests("test/features/apiV1/entities/crud/multipleAttendanceEventCategories.feature")
   Rake::Task["importSandboxData"].execute
   runTests("test/features/apiV1/entities/crud_auto")
   runTests("test/features/apiV1/search/api_search.feature")
diff --git a/sli/acceptance-tests/test/features/admintools/SAMT_Account_Management_Interface.feature b/sli/acceptance-tests/test/features/admintools/SAMT_Account_Management_Interface.feature
index b2f39ad..28a1d1d 100644
--- a/sli/acceptance-tests/test/features/admintools/SAMT_Account_Management_Interface.feature
+++ b/sli/acceptance-tests/test/features/admintools/SAMT_Account_Management_Interface.feature
@@ -4,7 +4,7 @@ Feature: Super Admin Interface
 	
 Background: 
 Given I have an open web browser
-And LDAP server has been setup and running
+And my LDAP server has been setup and running
 And I already have a SLC Operator account
 
 
diff --git a/sli/acceptance-tests/test/features/admintools/admin_smoke.feature b/sli/acceptance-tests/test/features/admintools/admin_smoke.feature
index 1a595ab..71f7797 100644
--- a/sli/acceptance-tests/test/features/admintools/admin_smoke.feature
+++ b/sli/acceptance-tests/test/features/admintools/admin_smoke.feature
@@ -1,92 +1,53 @@
-@smoke
-Feature: SLI admin smoke tests
+@admin_smoke @smoke @javascript
+Feature:
+  The administration tool can be used:
+    - by a developer to register a new application
+    - by an operator to approve a developer application
+    - by a developer to enable her application for education organizations
+    - by IT administrators to authorize or deauthorize applications
+    - by realm administrators to modify realm information
 
 Background:
-Given I have an open web browser
+  Given I have an open browser
 
-Scenario: SLC Developer operations part 1
-Given I am a valid SLC developer
-When I authenticate on the Application Registration Tool
-Then I see the list of my registered applications only
-And I have clicked to the button New
-And I am redirected to a new application page
-When I entered the name "Smoke!" into the field titled "Name"
-And I have entered data into the other required fields except for the shared secret and the app id which are read-only
-And I click on the button Submit
-Then I am redirected to the Application Registration Tool page
-And the application "Smoke!" is listed in the table on the top
-When I click on the row of application named "Smoke!" in the table
-Then the client ID and shared secret fields are Pending
-And the Registration Status field is Pending
+Scenario: A developer registers an application
+  Given I am a valid inBloom developer
+    And I am managing my applications
+   When I submit a new application for registration
+   Then the application should get registered
+    And the application status should be pending
 
-Scenario: SLC Operator operations
-Given I am a valid SLC Operator
-When I authenticate on the Application Registration Tool
-And I see all the applications registered on SLI
-And I see all the applications pending registration
-And the pending apps are on top
-When I click on 'Approve' next to application "Smoke!"
-Then application "Smoke!" is registered
-And the 'Approve' button is disabled for application "Smoke!"
-When I navigate to the account management page
-And I got the 404 page
+Scenario: An operator approves an application
+  Given I am a valid inBloom operator
+    And I am managing my applications
+    And I see a pending application
+   When I approve the pending application
+   Then the application status should be approved
 
-# Developer: Enable all edOrgs for app "Smoke!"
-Scenario: SLC Developer operations part 2
-Given I am a valid SLC developer
-When I authenticate on the Application Registration Tool
-Then I see the list of my registered applications only
-And I clicked on the button Edit for the application "Smoke!"
-And the checkbox with HTML id "root" is unchecked
-And I check the checkbox with HTML id "root"
-When I click on Save
-Then I am redirected to the Application Registration Tool page
+Scenario: A developer enables education organizations for her application
+  Given I am a valid inBloom developer
+    And I am managing my applications
+    And I have an in-progress application
+   When I edit the in-progress application
+    And enable the application for an education organization
+   Then the application should be ready
 
-# SEA Admin: Approve all edOrgs for app "Smoke!"
-Scenario: SEA Administrator operations
-Given the sli securityEvent collection is empty
-And I am a valid SEA administrator
-When I hit the Admin Application Authorization Tool
-And I login
-And I see an application "Smoke!" in the table
-And in Status it says "Not Approved"
-And I click on the "Edit Authorizations" button next to it
-And I am redirected to the Admin Application Authorization Edit Page
-And the checkbox with HTML id "root" is unchecked
-And I check the checkbox with HTML id "root"
-And I click Update
-And the app "Smoke!" Status matches "\d+ EdOrg"
-And it is colored "green"
+Scenario: A tenant-level administrator authorizes an application for education organizations
+  Given I am a valid tenant-level administrator
+    And I am managing my application authorizations
+   When I edit the authorizations for an application
+    And authorize the application for all education organizations
+   Then the application should be approved for all education organizations
 
-Scenario: LEA Administrator operations
-Given the sli securityEvent collection is empty
-And I am a valid district administrator
-When I hit the Admin Application Authorization Tool
-And I login
-And I see an application "Smoke!" in the table
-And the app "Smoke!" Status matches "\d+ EdOrg"
-And I click on the "Edit Authorizations" button next to it
-And I am redirected to the Admin Application Authorization Edit Page
-And the checkbox with HTML id "root" is checked
-And I uncheck the checkbox with HTML id "root"
-And I click Update
-And the app "Smoke!" Status matches "Not Approved"
-And it is colored "red"
+Scenario: A district-level administrator de-authorizes an application for education organizations
+  Given I am a valid district-level administrator
+    And I am managing my application authorizations
+   When I edit the authorizations for an approved application
+    And de-authorize the application for all education organizations
+   Then the application should not be approved
 
-Scenario: Realm administrator operations
-Given I am a valid realm administrator
-When I authenticate on the realm editing tool
-When I see the realms for "Sunset School District 4526 (IL-SUNSET)"
-And I click the "Illinois Sunset School District 4526" edit button
-And I should see that I am on the "Illinois Sunset School District 4526" edit page
-And I should enter "Smoke" into the Display Name field
-And I should click the "Save" button
-Then I see the realms for "Sunset School District 4526 (IL-SUNSET)"
-And the realm "Smoke" will exist
-And I should receive a notice that the realm was successfully "updated"
-And I click the "Smoke" edit button
-And I should see that I am on the "Smoke" edit page
-And I should enter "Illinois Sunset School District 4526" into the Display Name field
-And I should click the "Save" button
-Then I see the realms for "Sunset School District 4526 (IL-SUNSET)"
-And the realm "Illinois Sunset School District 4526" will exist
+Scenario: A realm administrator can create a realm
+  Given I am a valid realm administrator
+    And I am managing my realms
+   When I add a new realm
+   Then I see the new realm listed
\ No newline at end of file
diff --git a/sli/acceptance-tests/test/features/admintools/app_registration.feature b/sli/acceptance-tests/test/features/admintools/app_registration.feature
index 20f309d..737df7f 100755
--- a/sli/acceptance-tests/test/features/admintools/app_registration.feature
+++ b/sli/acceptance-tests/test/features/admintools/app_registration.feature
@@ -5,7 +5,7 @@ As a super-admin I want to be able to create new application keys to allow the o
 
 Background:
 Given I have an open web browser
-And LDAP server has been setup and running
+And my LDAP server has been setup and running
 
 Scenario: Federated edOrg user denied 
 
diff --git a/sli/acceptance-tests/test/features/admintools/step_definitions/admin_smoke_steps.rb b/sli/acceptance-tests/test/features/admintools/step_definitions/admin_smoke_steps.rb
index 68742ea..28253a4 100644
--- a/sli/acceptance-tests/test/features/admintools/step_definitions/admin_smoke_steps.rb
+++ b/sli/acceptance-tests/test/features/admintools/step_definitions/admin_smoke_steps.rb
@@ -1,6 +1,6 @@
 =begin
 
-Copyright 2012-2013 inBloom, Inc. and its affiliates.
+Copyright 2012-2014 inBloom, Inc. and its affiliates.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
@@ -16,51 +16,249 @@ limitations under the License.
 
 =end
 
-require "selenium-webdriver"
-require 'json'
+require 'capybara'
+#require_relative '../../utils/db_client.rb'
 
-require_relative '../../utils/sli_utils.rb'
-require_relative '../../security/step_definitions/securityevent_util_steps.rb'
-require_relative '../../sandbox/AccountApproval/step_definitions/prod_sandbox_AccountApproval_Inteface_steps.rb'
+# TODO Move the capybara setup code to a common location
+class Browser
+  include Capybara::DSL
+  def initialize
+    Capybara.default_driver = :selenium
+    Capybara.reset_session!
+  end
+end
+
+Before('@admin_smoke') do
+  @created_entities = []
+end
+
+def add_for_cleanup(collection, name)
+  @created_entities << [collection, name]
+end
 
-Given /^I am a valid SLC developer$/ do
-  @user = 'slcdeveloper' # an :operator
+After('@admin_smoke') do
+  db_client = DbClient.new.for_sli
+  @created_entities.each do |collection, name|
+    db_client.remove(collection.to_s, {'body.name' => name})
+  end
+  db_client.close
+end
+
+Given /^I have an open browser$/ do
+  @browser = Browser.new
+end
+
+Given /^I am a valid inBloom developer$/ do
+  @user = 'slcdeveloper'
   @pass = 'slcdeveloper1234'
 end
 
-Given /^I am a valid SLC operator$/ do
-  @user = 'slcoperator-email@slidev.org' # an :operator
-  @pass = 'test1234'
+Given /^I am a valid inBloom operator$/ do
+  @user = 'slcoperator'
+  @pass = 'slcoperator1234'
+end
+
+Given /^I am a valid tenant-level administrator$/ do
+  @user = 'iladmin'
+  @pass = 'iladmin1234'
+end
+
+Given /^I am a valid district-level administrator$/ do
+  @user = 'sunsetadmin'
+  @pass = 'sunsetadmin1234'
 end
 
 Given /^I am a valid realm administrator$/ do
-  @user = 'sunsetrealmadmin' # an :operator
+  @user = 'sunsetrealmadmin'
   @pass = 'sunsetrealmadmin1234'
 end
 
+Given /^I am managing my applications$/ do
+  browser.visit admin_apps_page
+  login_to_the_inbloom_realm
+  browser.page.should have_selector('h1', :text => /(Manage|Authorize) Applications/)
+end
 
-Given /^I am a valid district administrator$/ do
-  @user = 'sunsetadmin'
-  @pass = 'sunsetadmin1234'
+Given /^I am managing my application authorizations$/ do
+  browser.visit application_authorizations_page
+  login_to_the_inbloom_realm
+  browser.page.should have_selector('h1', :text => 'Approve Applications')
 end
 
-Given /^I am a valid SEA administrator$/ do
-  @user = 'iladmin'
-  @pass = 'iladmin1234'
+Given /^I am managing my realms$/ do
+  browser.visit realm_management_page
+  login_to_the_inbloom_realm
+  browser.page.should have_selector('h1', :text => /Realms for/)
+end
+
+Given /^I have an in\-progress application$/ do
+  @app_row = browser.page.first('table#applications tr', :text => /#{app_prefix}.*In Progress/)
+  @app_row.should_not be_nil
+  @app_name = @app_row.find('td:nth-child(2)').text.strip
+end
+
+When /^I submit a new application for registration$/ do
+  @app_name = "#{app_prefix}#{Time.now.to_i}"
+
+  browser.page.click_link 'New Application'
+  browser.page.should have_title('New Application')
+  browser.page.fill_in('app[name]', :with => @app_name)
+
+  fill_in_app_registration
+
+  browser.page.click_button 'Register'
+end
+
+When /^I edit the (in\-progress )?application$/ do |in_progress|
+  link = in_progress ? 'In Progress' : 'Edit'
+  browser.within @app_row do
+    browser.click_link link
+  end
+end
+
+When /^I edit the authorizations for an (approved )?application$/ do |approved|
+  status_match = approved ? 'EdOrg\(s\)' : 'Not Approved'
+  app_row = browser.page.first('table#AuthorizedAppsTable tr', :text => /#{app_prefix}.*#{status_match}/)
+  @app_name = app_row.find('td:nth-child(1)').text.strip
+  browser.within app_row do
+    browser.click_button 'Edit Authorizations'
+  end
+end
+
+When /^I see a pending application$/ do
+  @app_row = browser.page.first('table#applications tr', :text => /#{app_prefix}.*PENDING/)
+  @app_row.should_not be_nil
+  @app_name = @app_row.find('td:nth-child(1)').text
+end
+
+When /^I approve the pending application$/ do
+  browser.within @app_row do
+    browser.click_button 'Approve'
+  end
+end
+
+When /^(?:I )?(enable|authorize|disable|de\-authorize) the application for (?:an|all) education organizations?$/ do |check|
+  check = (check =~ /^(enable|authorize)$/) ? true : false
+  browser.page.should have_selector('#edorgTree #root')
+  browser.within '#edorgTree' do
+    check ? browser.check('root') : browser.uncheck('root')
+  end
+  save_button = browser.page.first(:button, 'Save & Update')
+  save_button.click
+end
+
+When /^I add a new realm$/ do
+  browser.page.click_link 'Add new'
+  browser.page.should have_selector('h1', :text => 'Manage Realm')
+  @realm_name = "#{app_prefix}realm_#{Time.now.to_i}"
+  browser.fill_in('realm_name', :with => @realm_name)
+  browser.fill_in('realm_idp_id', :with => 'http://www.example.com')
+  browser.fill_in('realm_idp_redirectEndpoint', :with => 'http://www.example.com')
+  browser.fill_in('realm_uniqueIdentifier', :with => @realm_name)
+  browser.click_button 'Save'
+  add_for_cleanup(:realm, @realm_name)
+end
+
+Then /^I see the new realm listed$/ do
+  browser.page.should have_selector('#notice', :text => 'Realm was successfully created.')
+  browser.page.should have_selector('table#realms tr > td:nth-child(1)', :text => @realm_name)
+end
+
+Then /^the application should be not approved$/ do
+  pending # express the regexp above with the code you wish you had
+end
+
+Then /^the application should get registered$/ do
+  browser.page.should have_selector('h1', :text => 'Manage Applications')
+  browser.page.should have_selector('#notice', :text => 'App was successfully created')
+  browser.page.should have_selector('tbody > tr:nth-child(1) > td', :text => @app_name)
+end
+
+Then /^the application status should be pending$/ do
+  pending = /pending/i
+
+  # Verify that the 'Creation Date' shows 'Pending'
+  browser.page.should have_selector('tbody > tr:nth-child(1) td:nth-child(5)', :text => pending)
+  browser.page.find('tbody > tr:nth-child(1) > td:nth-child(2)').click
+
+  # Verify that the 'Client ID' and 'Shared Secret' show 'Pending'
+  browser.page.should have_selector('tbody > tr:nth-child(2) dd:nth-of-type(1)', :text => pending)
+  browser.page.should have_selector('tbody > tr:nth-child(2) dd:nth-of-type(2)', :text => pending)
+end
+
+Then /^the application status should be approved$/ do
+  browser.page.should have_selector('table#applications tr', :text => /#{@app_name}(.*)APPROVED/)
+end
+
+Then /^the application should be ready$/ do
+  browser.page.should have_selector('table#applications tr', :text => /#{@app_name}(.*)Edit/)
+end
+
+Then /^the application should be approved for all education organizations$/ do
+  app_row = browser.page.first('table#AuthorizedAppsTable tr', :text => /#{@app_name}/)
+  app_row.should have_selector('td:nth-child(4)', :text => /\d+ EdOrg\(s\)/)
+end
+
+Then /^the application should not be approved$/ do
+  app_row = browser.page.first('table#AuthorizedAppsTable tr', :text => /#{@app_name}/)
+  app_row.should have_selector('td:nth-child(4)', :text => /Not Approved/)
+end
+
+# METHODS
+
+def browser
+  @browser
+end
+
+def app_prefix
+  'smoke_test_'
+end
+
+def admin_apps_page
+  "#{Property['admintools_server_url']}/apps/"
+end
+
+def application_authorizations_page
+  "#{Property['admintools_server_url']}/application_authorizations/"
+end
+
+def realm_management_page
+  "#{Property['admintools_server_url']}/realm_management/"
+end
+
+def login_to_the_inbloom_realm
+  login_to_realm 'inBloom'
+end
+
+def login_to_the_tenants_realm
+  login_to_realm 'Illinois Daybreak School District 4529'
+end
+
+def login_to_realm(realm)
+  choose_realm realm
+  submit_idp_credentials @user, @pass
 end
 
-When /^I authenticate on the realm editing tool$/ do
-  step "I hit the realm editing URL"
-  step "I login"
+def choose_realm(realm)
+  browser.page.should have_title('Choose your realm')
+  browser.select(realm, :from => 'realmId')
+  browser.click_button 'Go'
 end
 
-When /^I authenticate on the Application Registration Tool$/ do
-  step "I hit the Application Registration Tool URL"
-  step "I login"
+def submit_idp_credentials(username, password)
+  browser.fill_in('user_id', :with => username)
+  browser.fill_in('password', :with => password)
+  browser.click_button 'login_button'
 end
 
-When /^I authenticate on the Admin Delegation Tool$/ do 
-  step "I hit the delegation url"
-  step "I login"
+def fill_in_app_registration
+  browser.fill_in('app[description]', :with => 'smoke test')
+  browser.fill_in('app[version]', :with => '0.9')
+  browser.check('app[installed]')
 end
 
+def verify_registered_application(name)
+  value = @driver.find_element(:id, 'notice').text
+  assert(value =~ /successfully created/, "Should have valid flash message")
+  assertWithWait("Couldn't locate #{app} at the top of the page") {@driver.find_element(:xpath, "//tbody/tr[1]/td[text()='#{app}']")}
+end
\ No newline at end of file
diff --git a/sli/acceptance-tests/test/features/admintools/step_definitions/app_registration_steps.rb b/sli/acceptance-tests/test/features/admintools/step_definitions/app_registration_steps.rb
index 4634873..e1d33eb 100755
--- a/sli/acceptance-tests/test/features/admintools/step_definitions/app_registration_steps.rb
+++ b/sli/acceptance-tests/test/features/admintools/step_definitions/app_registration_steps.rb
@@ -26,6 +26,20 @@ require_relative '../../utils/sli_utils.rb'
 require_relative '../../utils/selenium_common.rb'
 require 'date'
 
+#TODO: This step is defined (one way or another) in multiple places; need to DRY it up
+Given /^my LDAP server has been setup and running$/ do
+  @ldap = LDAPStorage.new(Property['ldap_hostname'], Property['ldap_port'],
+                          Property['ldap_base'], Property['ldap_admin_user'],
+                          Property['ldap_admin_pass'], Property['ldap_use_ssl'])
+  @email_sender_name= "Administrator"
+  @email_sender_address= "noreply@slidev.org"
+  @email_conf = {
+      :host =>  Property['email_smtp_host'],
+      :port => Property['email_smtp_port'],
+      :sender_name => @email_sender_name,
+      :sender_email_addr => @email_sender_address
+  }
+end
 Given /^I am a valid SLI Developer "([^"]*)" from the "([^"]*)" hosted directory$/ do |arg1, arg2|
   # No code needed, done as configuration
 end
diff --git a/sli/acceptance-tests/test/features/apiV1/entities/crud/admin_crud.feature b/sli/acceptance-tests/test/features/apiV1/entities/crud/admin_crud.feature
index f8af226..a62ae06 100644
--- a/sli/acceptance-tests/test/features/apiV1/entities/crud/admin_crud.feature
+++ b/sli/acceptance-tests/test/features/apiV1/entities/crud/admin_crud.feature
@@ -1,9 +1,12 @@
-@RALLY_US5865
-Feature: As a federated user via an admin application, I should NOT be able to perform CRUD operations on certain admin resources
+Feature:
+  As a federated user via an admin application
+  I should NOT be able to perform CRUD operations on certain admin resources
 
-  Scenario Outline: API admin GET endpoints are inaccessible for federated users
-    Given I am logged in using "rrogersAppAuth" "rrogers1234" to realm "IL"
+  Background:
+    Given I am logged in as a tenant-level IT Administrator
     And format "application/json"
+
+  Scenario Outline: API admin GET endpoints are inaccessible for federated users
     When I navigate to <Action> "/<Resource URI>"
     Then I should receive a return code of <Expected Status>
 
@@ -22,8 +25,6 @@ Feature: As a federated user via an admin application, I should NOT be able to p
     | realm            | POST   | 403             |
 
    Scenario Outline: API admin GET "application" and "applicationAuthorization" endpoints are inaccessible for federated users with proper rights
-      Given I am logged in using "rrogersAppAuth" "rrogers1234" to realm "IL"
-      And format "application/json"
       When I navigate to <Action> "/<Resource URI>"
       Then I should receive a return code of <Expected Status>
 
diff --git a/sli/acceptance-tests/test/features/apiV1/entities/crud/attendance.feature b/sli/acceptance-tests/test/features/apiV1/entities/crud/attendance.feature
deleted file mode 100644
index fbb8e72..0000000
--- a/sli/acceptance-tests/test/features/apiV1/entities/crud/attendance.feature
+++ /dev/null
@@ -1,509 +0,0 @@
-@smoke @RALLY_US209 @RALLY_DE87
-Feature: As an SLI application, I want to be able to perform CRUD operations on various resources
-  This means I want to be able to perform CRUD on all entities.
-  and verify that the correct links are made available.
-
-  Background: Nothing yet
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And format "application/vnd.slc+json"
-
-  @DE2943
-  Scenario: Search on fields with insufficient rights returns bad request
-    Given I am logged in using "linda.kim" "linda.kim1234" to realm "IL"
-    And format "application/vnd.slc+json"
-    When I navigate to GET "/v1/students/0c2756fd-6a30-4010-af79-488d6ef2735a_id?economicDisadvantaged=false"
-    Then I should receive a return code of 400
-    When I navigate to GET "/v1/students/0c2756fd-6a30-4010-af79-488d6ef2735a_id?economicDisadvantaged=true"
-    Then I should receive a return code of 400
-
-  @DE2943
-  Scenario: Search on inaccessible entities with fields returns acess denied
-    Given I am logged in using "jvasquez" "jvasquez" to realm "IL"
-    And format "application/vnd.slc+json"
-    When I navigate to GET "/v1/students/414106a9-6156-1023-a477-4bd4dda7e21a_id?economicDisadvantaged=false"
-    Then I should receive a return code of 403
-    When I navigate to GET "/v1/students/414106a9-6156-1023-a477-4bd4dda7e21a_id?economicDisadvantaged=true"
-    Then I should receive a return code of 403
-
-  Scenario Outline: CRUD operations requiring explicit associations on an entity as staff
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And format "application/vnd.slc+json"
-    Given entity URI <Entity Resource URI>
-  # Create
-    Given a valid entity json document for a <Entity Type>
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI
-  # Association
-    When I create an association of type <Association Type>
-    When I POST the association of type <Association Type>
-    Then I should receive a return code of 201
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And a valid entity json document for a <Entity Type>
-    And the response should contain the appropriate fields and values
-    And "entityType" should be <Entity Type>
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Update
-    When I set the <Update Field> to <Updated Value>
-    And I navigate to PUT "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And <Update Field> should be <Updated Value>
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  Examples:
-    | Entity Type | Entity Resource URI | Association Type                         | Update Field             | Updated Value            |
-    | "staff"     | "staff"             | "staffEducationOrganizationAssociation2" | "sex"                    | "Female"                 |
-    | "teacher"   | "teachers"          | "teacherSchoolAssociation2"              | "highlyQualifiedTeacher" | "false"                  |
-    | "program"   | "programs"          | "staffProgramAssociation"                | "programSponsor"         | "State Education Agency" |
-
-  Scenario Outline: CRUD operations on an entity and can't update natural key
-    Given entity URI <Entity Resource URI>
-  # Create
-    Given a valid entity json document for a <Entity Type>
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And the response should contain the appropriate fields and values
-    And "entityType" should be <Entity Type>
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Update
-    When I set the <Update Field> to <Updated Value>
-    And I navigate to PUT "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 409
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  Examples:
-    | Entity Type             | Entity Resource URI      | Update Field         | Updated Value                                |
-    | "assessment"            | "assessments"            | "assessmentTitle"    | "Advanced Placement Test - Subject: Writing" |
-    | "attendance"            | "attendances"            | "studentId"          | "274f4c71-1984-4607-8c6f-0a91db2d240a_id"    |
-    | "gradebookEntry"        | "gradebookEntries"       | "gradebookEntryType" | "Homework"                                   |
-    | "studentAcademicRecord" | "studentAcademicRecords" | "sessionId"          | "abcff7ae-1f01-46bc-8cc7-cf409819bbce"       |
-    | "grade"                 | "grades"                 | "schoolYear"         | "2008-2009"                                  |
-
-  Scenario Outline: CRUD operations on an entity requiring explicit associations and can't update natural key
-    Given entity URI <Entity Resource URI>
-  # Create
-    Given a valid entity json document for a <Entity Type>
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI
-  # Optional Association
-    When I create an association of type <Association Type>
-    When I POST the association of type <Association Type>
-    Then I should receive a return code of 201
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And a valid entity json document for a <Entity Type>
-    And the response should contain the appropriate fields and values
-    And "entityType" should be <Entity Type>
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Update
-    When I set the <Update Field> to <Updated Value>
-    And I navigate to PUT "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 409
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  Examples:
-    | Entity Type | Entity Resource URI | Association Type            | Update Field          | Updated Value |
-    | "parent"    | "parents"           | "studentParentAssociation2" | "parentUniqueStateId" | "ParentID102" |
-
-  Scenario Outline: CRUD operations requiring explicit associations on an entity as an IT Admin Teacher
-    Given I am logged in using "cgrayadmin" "cgray1234" to realm "IL"
-    And format "application/vnd.slc+json"
-    Given entity URI <Entity Resource URI>
-  # Create
-    Given a valid entity json document for a <Entity Type>
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI
-  # Association
-    When I create an association of type <Association Type>
-    When I POST the association of type <Association Type>
-    Then I should receive a return code of 201
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And a valid entity json document for a <Entity Type>
-    And the response should contain the appropriate fields and values
-    And "entityType" should be <Entity Type>
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Update
-    When I set the <Update Field> to <Updated Value>
-    And I navigate to PUT "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And <Update Field> should be <Updated Value>
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  Examples:
-    | Entity Type          | Entity Resource URI   | Association Type                        | Update Field             | Updated Value            |
-    | "cohort"             | "cohorts"             | "studentCohortAssocation"               | "cohortDescription"      | "frisbee golf team"      |
-    | "disciplineIncident" | "disciplineIncidents" | "studentDisciplineIncidentAssociation"  | "incidentTime"           | "01:02:15"               |
-    | "program"            | "programs"            | "studentProgramAssociation"             | "programSponsor"         | "State Education Agency" |
-    | "section"            | "sections"            | "studentSectionAssociation"             | "sequenceOfCourse"       | "2"                      |
-    | "staff"              | "staff"               | "staffEducationOrganizationAssociation" | "sex"                    | "Female"                 |
-    | "student"            | "students"            | "studentSectionAssociation2"            | "sex"                    | "Female"                 |
-    | "teacher"            | "teachers"            | "teacherSchoolAssociation"              | "highlyQualifiedTeacher" | "false"                  |
-
-# Session and course require multiple levels of associations, e.g. course -> courseOffering -> section -> teacherSectionAssoc
-#| "session"                      | "sessions"            | | |  "totalInstructionalDays" | "43"                                         |
-#| "course"                       | "courses"             | "courseOffering"                       | "section"         | "courseDescription"      | "Advanced Linguistic Studies" |
-
-  Scenario Outline: CRUD operations requiring explicit associations on an entity as an IT Admin Teacher and can't update natural keys
-    Given I am logged in using "cgrayadmin" "cgray1234" to realm "IL"
-    And format "application/vnd.slc+json"
-    Given entity URI <Entity Resource URI>
-  # Create
-    Given a valid entity json document for a <Entity Type>
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI
-  # Association
-    When I create an association of type <Association Type>
-    When I POST the association of type <Association Type>
-    Then I should receive a return code of 201
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And a valid entity json document for a <Entity Type>
-    And the response should contain the appropriate fields and values
-    And "entityType" should be <Entity Type>
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Update
-    When I set the <Update Field> to <Updated Value>
-    And I navigate to PUT "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 409
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  Examples:
-    | Entity Type | Entity Resource URI | Association Type           | Update Field          | Updated Value |
-    | "parent"    | "parents"           | "studentParentAssociation" | "parentUniqueStateId" | "ParentID102" |
-
-  Scenario Outline: Get All Entities as School Teacher
-
-    Given I am logged in using "cgray" "cgray1234" to realm "IL"
-    And format "application/vnd.slc+json"
-    And my contextual access is defined by table:
-      | Context                | Ids                                                                             |
-      | schools                | 92d6d5a0-852c-45f4-907a-912752831772,6756e2b9-aba1-4336-80b8-4a5dde3c63fe       |
-      | educationOrganizations | 92d6d5a0-852c-45f4-907a-912752831772,6756e2b9-aba1-4336-80b8-4a5dde3c63fe       |
-      | staff                  | e9ca4497-e1e5-4fc4-ac7b-24bad1f2998b                                            |
-      | teachers               | e9ca4497-e1e5-4fc4-ac7b-24bad1f2998b                                            |
-      | sections               | 15ab6363-5509-470c-8b59-4f289c224107_id,47b5adbf-6fd0-4f07-ba5e-39612da2e234_id |
-    Given entity URI <Entity Resource URI>
-  #TODO BUG for the 6 entities routed to ES, revert back to "0" when bug is fixed
-    Given parameter "limit" is "250"
-    When I navigate to GET "/<ENTITY URI>"
-    Then I should receive a return code of 200
-    And I should receive a collection of "<Count>" entities
-    And each entity's "entityType" should be <Entity Type>
-    And uri was rewritten to "<Rewrite URI>"
-
-  Examples:
-    | Entity Type                  | Entity Resource URI           | Count | Rewrite URI                                                                          |
-    | "assessment"                 | "assessments"                 | 18    | /search/assessments                                                                  |
-    | "attendance"                 | "attendances"                 | 4     | /sections/@ids/studentSectionAssociations/students/attendances                       |
-    | "cohort"                     | "cohorts"                     | 4     | /staff/@ids/staffCohortAssociations/cohorts                                          |
-    | "course"                     | "courses"                     | 92    | /search/courses                                                                      |
-    | "disciplineAction"           | "disciplineActions"           | 0     | /staff/@ids/disciplineActions                                                        |
-    | "disciplineIncident"         | "disciplineIncidents"         | 0     | /staff/@ids/disciplineIncidents                                                      |
-    | "educationOrganization"      | "educationOrganizations"      | 2     | /teachers/@ids/teacherSchoolAssociations/schools                                     |
-    | "gradebookEntry"             | "gradebookEntries"            | 3     | /sections/@ids/gradebookEntries                                                      |
-    | "learningObjective"          | "learningObjectives"          | 5     | /search/learningObjectives                                                           |
-    | "learningStandard"           | "learningStandards"           | 14    | /search/learningStandards                                                            |
-    | "parent"                     | "parents"                     | 3     | /sections/@ids/studentSectionAssociations/students/studentParentAssociations/parents |
-    | "program"                    | "programs"                    | 1     | /staff/@ids/staffProgramAssociations/programs                                        |
-    | "educationOrganization"      | "schools"                     | 2     | /teachers/@ids/teacherSchoolAssociations/schools                                     |
-    | "section"                    | "sections"                    | 2     | /teachers/@ids/teacherSectionAssociations/sections                                   |
-    | "session"                    | "sessions"                    | 29    | /search/sessions                                                                     |
-    | "staff"                      | "staff"                       | 6     | /educationOrganizations/@ids/staffEducationOrgAssignmentAssociations/staff           |
-    | "student"                    | "students"                    | 25    | /sections/@ids/studentSectionAssociations/students                                   |
-    | "studentAcademicRecord"      | "studentAcademicRecords"      | 2     | /sections/@ids/studentSectionAssociations/students/studentAcademicRecords            |
-    | "studentGradebookEntry"      | "studentGradebookEntries"     | 2     | /sections/@ids/studentSectionAssociations/students/studentGradebookEntries           |
-    | "teacher"                    | "teachers"                    | 3     | /schools/@ids/teacherSchoolAssociations/teachers                                     |
-    | "grade"                      | "grades"                      | 1     | /sections/@ids/studentSectionAssociations/grades                                     |
-    | "studentCompetency"          | "studentCompetencies"         | 2     | /sections/@ids/studentSectionAssociations/studentCompetencies                        |
-    | "gradingPeriod"              | "gradingPeriods"              | 3     | /search/gradingPeriods                                                               |
-    | "reportCard"                 | "reportCards"                 | 3     | /sections/@ids/studentSectionAssociations/students/reportCards                       |
-    | "studentCompetencyObjective" | "studentCompetencyObjectives" | 1     | /search/studentCompetencyObjectives                                                  |
-
-  @DE1825
-  Scenario: Invalid data parsing fails gracefully
-    When I navigate to GET "/v1/staffEducationOrgAssignmentAssociations?endDate=blah"
-    Then I should receive a return code of 400
-    When I create an association of type "studentSectionAssociation"
-    And field "beginDate" is removed from the json document
-    When I navigate to POST "/v1/studentSectionAssociations"
-    Then I should receive a return code of 400
-
-
-
-#all staff types (it admins, educators) should be able to see all public entities
-
-  @tagPublicEntities
-  Scenario Outline: Ensure Public Entities Are Visible
-    Given I am logged in using <User> <Password> to realm "IL"
-    And entity URI <Entity>
-    And parameter "limit" is "0"
-    When I navigate to GET "/<ENTITY URI>"
-    Then I should receive a return code of 200
-  #generic step that sets global variable for current entity
-    And I should see all entities
-
-  Examples:
-    | User         | Password         | Entity            |
-    | "linda.kim"  | "linda.kim1234"  | "sessions"        |
-    | "linda.kim"  | "linda.kim1234"  | "gradingPeriods"  |
-    | "linda.kim"  | "linda.kim1234"  | "courseOfferings" |
-    | "linda.kim"  | "linda.kim1234"  | "courses"         |
-    | "jstevenson" | "jstevenson1234" | "sessions"        |
-    | "jstevenson" | "jstevenson1234" | "gradingPeriods"  |
-    | "jstevenson" | "jstevenson1234" | "courseOfferings" |
-    | "jstevenson" | "jstevenson1234" | "courses"         |
-
-
-  #crud assessment / studentAssessment and verify in mongo it's superdoc'ed
-  @US5365 @AssmtTest
-
-  Scenario: crud on super assessment and super studentAssessment
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And entity URI "/v1/assessments"
-    And format "application/vnd.slc+json"
-    And a valid entity json document for a "super_assessment"
-    When I navigate to POST "<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI
-    And I verify "objectiveAssessment" and "assessmentItem" should be subdoc'ed in mongo for this new "assessment"
-    And I verify there are "1" "assessmentPeriodDescriptor" with "codeValue=codeGreen" in mongo
-    When I navigate to GET "/assessments/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And I verify "objectiveAssessment, assessmentPeriodDescriptor" and "assessmentItem" is collapsed in response body
-    And "objectiveAssessment" is hierachical with children at "objectiveAssessments"
-    When I set the "lowestGradeLevelAssessed" to "Sixth grade"
-    And I set the "codeValue" to "codeRed" in "assessmentPeriodDescriptor"
-    And I navigate to PUT "/assessments/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I verify "objectiveAssessment" and "assessmentItem" should be subdoc'ed in mongo for this new "assessment"
-  #assessmentPeriodDecriptor is read
-    And I verify there are "1" "assessmentPeriodDescriptor" with "codeValue=codeRed" in mongo
-    And I verify there are "1" "assessmentPeriodDescriptor" with "codeValue=codeGreen" in mongo
-    And I navigate to GET "/assessments/<NEWLY CREATED ENTITY ID>"
-    And "lowestGradeLevelAssessed" should be "Sixth grade"
-    And I verify "objectiveAssessment, assessmentPeriodDescriptor" and "assessmentItem" is collapsed in response body
-    And I verify "codeValue" is "codeRed" inside "assessmentPeriodDescriptor"
-  # the corresponding studentAssessment
-    Given entity URI "/v1/studentAssessments"
-    And a valid entity json document for a "studentAssessment"
-    When I navigate to POST "<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI
-    And I verify "studentObjectiveAssessment" and "studentAssessmentItem" should be subdoc'ed in mongo for this new "studentAssessment"
-    When I navigate to GET "/studentAssessments/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-  # verifies DID and associations between studentAssessment and assessment
-    And I verify "studentObjectiveAssessments" and "studentAssessmentItems" is collapsed in response body
-    And I verify there are "2" "studentObjectiveAssessments" in response body
-    When I set the "administrationEnvironment" to "School"
-    And I navigate to PUT "/studentAssessments/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I verify "studentObjectiveAssessment" and "studentAssessmentItem" should be subdoc'ed in mongo for this new "studentAssessment"
-    When I navigate to GET "/studentAssessments/<NEWLY CREATED ENTITY ID>"
-    And "administrationEnvironment" should be "School"
-    Then I delete both studentAssessment and Assessment
-
-#yearlyAttendance CRUD
-
-  @us5389
-  Scenario: yearlyAttendance CRUD
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And entity URI "yearlyAttendances"
-    And an entity json document for a "yearlyAttendance"
-  # Create
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI after a successful response
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And the response should contain the appropriate fields and values
-    And "entityType" should be "attendance"
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Update
-    When I set the "attendanceEvent" array to "<ATT_EVENT_ARRAY>"
-    And I navigate to PUT "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  @us5389
-  Scenario:  yearlyAttendance CRUD - read not allowed on /yearlyAttendance
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And entity URI "yearlyAttendance"
-  #Read
-    When I navigate to GET "/<ENTITY URI>"
-    Then I should receive a return code of 404
-
-  @us5389
-  Scenario: yearlyAttendance CRUD for duplicate entity
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And entity URI "yearlyAttendances"
-    And an entity json document for a "yearlyAttendance"
-  # Create duplicate entity.
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI after a successful response
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 409
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And the response should contain the appropriate fields and values
-    And "entityType" should be "attendance"
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And the response should contain the appropriate fields and values
-    And "entityType" should be "attendance"
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Update. Should be able to update the entity multiple times.
-    When I set the "attendanceEvent" array to "<ATT_EVENT_ARRAY>"
-    And I navigate to PUT "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    When I set the "attendanceEvent" array to "<ATT_EVENT_ARRAY>"
-    And I navigate to PUT "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 404
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  @us5389
-  Scenario: yearlyAttendance CRUD for invalid entity
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And entity URI "yearlyAttendances"
-    And an entity json document for a "invalidYearlyAttendance"
-  # Create using invalid entity.
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 400
-
-  Scenario Outline: CRUD operations till we unwip auto_crud
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And format "application/vnd.slc+json"
-    Given entity URI <Entity Resource URI>
-  # Create
-    Given a valid entity json document for a <Entity Type>
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And a valid entity json document for a <Entity Type>
-    And the response should contain the appropriate fields and values
-    And "entityType" should be <Entity Type>
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Update
-    When I set the <Update Field> to <Updated Value>
-    And I navigate to PUT "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And <Update Field> should be <Updated Value>
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  Examples:
-    | Entity Type      | Entity Resource URI | Update Field  | Updated Value         |
-    | "gradebookEntry" | "gradebookEntries"  | "description" | "Updated description" |
-
-
-  Scenario Outline: Get modified grade, reportCard and AcademicRecord entities
-
-    Given I am logged in using "cgray" "cgray1234" to realm "IL"
-    And format "application/vnd.slc+json"
-    And my contextual access is defined by table:
-      | Context                | Ids                                                                             |
-      | schools                | 92d6d5a0-852c-45f4-907a-912752831772,6756e2b9-aba1-4336-80b8-4a5dde3c63fe       |
-      | educationOrganizations | 92d6d5a0-852c-45f4-907a-912752831772,6756e2b9-aba1-4336-80b8-4a5dde3c63fe       |
-      | staff                  | e9ca4497-e1e5-4fc4-ac7b-24bad1f2998b                                            |
-      | teachers               | e9ca4497-e1e5-4fc4-ac7b-24bad1f2998b                                            |
-      | sections               | 15ab6363-5509-470c-8b59-4f289c224107_id,47b5adbf-6fd0-4f07-ba5e-39612da2e234_id |
-    Given entity URI <Entity Resource URI>
-    Given parameter "limit" is "250"
-    When I navigate to GET "/<ENTITY URI>"
-    Then I should receive a return code of 200
-    And I should receive a collection of "<Count>" entities
-    And each entity's "entityType" should be <Entity Type>
-  #And each entity's "schoolyear" value should be <school year>
-    And uri was rewritten to "<Rewrite URI>"
-    And the response should contain the "<school year>" field
-  Examples:
-    | Entity Type             | Entity Resource URI      | Count | Rewrite URI                                                               |  | school year |
-    | "studentAcademicRecord" | "studentAcademicRecords" | 2     | /sections/@ids/studentSectionAssociations/students/studentAcademicRecords |  | 2010-2011   |
-    | "grade"                 | "grades"                 | 1     | /sections/@ids/studentSectionAssociations/grades                          |  | 2010-2011   |
-    | "reportCard"            | "reportCards"            | 3     | /sections/@ids/studentSectionAssociations/students/reportCards            |  | 2010-2011   |
-
-  @student
-  Scenario Outline: Rewrites for student work
-    Given I am logged in using "carmen.ortiz" "carmen.ortiz1234" to realm "IL-Daybreak-Students"
-    And format "application/vnd.slc+json"
-    And my contextual access is defined by table:
-      | Context                | Ids                                                                       |
-      | schools                | 92d6d5a0-852c-45f4-907a-912752831772,ec2e4218-6483-4e9c-8954-0aecccfd4731 |
-      | educationOrganizations | 92d6d5a0-852c-45f4-907a-912752831772,ec2e4218-6483-4e9c-8954-0aecccfd4731 |
-      | students               | 11e51fc3-2e4a-4ef0-bfe7-c8c29d1a798b_id                                   |
-    When I navigate to GET "/v1.5/<Entity>"
-    Then I should receive a return code of 200
-    And uri was rewritten to "<Rewrite>"
-  Examples:
-    | Entity                      | Rewrite                                                  |
-    | courses                     | /schools/@ids/courses                                    |
-    | schools                     | /schools/@ids                                            |
-    | educationOrganizations      | /schools/@ids                                            |
-    #| programs                    | /students/@ids/studentProgramAssociations/programs                            |
-    | courseOfferings             | /schools/@ids/courseOfferings                            |
-    | sessions                    | /schools/@ids/sessions                                   |
-    #| sections                    | /students/@ids/studentSectionAssociations/sections |
-    | gradingPeriods              | /schools/@ids/sessions/gradingPeriods                    |
-    | graduationPlans             | /schools/@ids/graduationPlans                            |
-    #| assessments                 | /student/@ids/studentAssessments/assessments      |
-    | learningObjectives          | /search/learningObjectives                               |
-    | learningStandards           | /search/learningStandards                                |
-    | studentCompetencyObjectives | /educationOrganizations/@ids/studentCompetencyObjectives |
diff --git a/sli/acceptance-tests/test/features/apiV1/entities/crud/attendance_events_crud.feature b/sli/acceptance-tests/test/features/apiV1/entities/crud/attendance_events_crud.feature
index c67382e..8c4a32d8 100644
--- a/sli/acceptance-tests/test/features/apiV1/entities/crud/attendance_events_crud.feature
+++ b/sli/acceptance-tests/test/features/apiV1/entities/crud/attendance_events_crud.feature
@@ -14,6 +14,7 @@ Feature:
     Then the response status should be 201 Created
      And the response location header should link to the new attendance event
      And the attendance event should be saved
+     And the students attendance should contain the attendance event
 
   Scenario: An API user cannot create (POST) a duplicate attendance event
     Given I create an attendance event
@@ -43,6 +44,7 @@ Feature:
     When I DELETE that attendance event
     Then the response status should be 204 No Content
      And the attendance event should be deleted
+     And the students attendance should not contain the attendance event
 
   Scenario: An API user partially updates (PATCH) an attendance event
     Given I create an attendance event
diff --git a/sli/acceptance-tests/test/features/apiV1/entities/crud/crud.feature b/sli/acceptance-tests/test/features/apiV1/entities/crud/crud.feature
index cf4919c..f468c50 100644
--- a/sli/acceptance-tests/test/features/apiV1/entities/crud/crud.feature
+++ b/sli/acceptance-tests/test/features/apiV1/entities/crud/crud.feature
@@ -394,76 +394,6 @@ Feature: As an SLI application, I want to be able to perform CRUD operations on
     When I navigate to POST "<ENTITY URI>"
     Then I should receive a return code of 400
 
-  @us5389
-  Scenario: yearlyAttendance CRUD
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And entity URI "yearlyAttendances"
-    And an entity json document for a "yearlyAttendance"
-  # Create
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI after a successful response
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And the response should contain the appropriate fields and values
-    And "entityType" should be "attendance"
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  @us5389
-  Scenario:  yearlyAttendance CRUD - read not allowed on /yearlyAttendance
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And entity URI "yearlyAttendance"
-  #Read
-    When I navigate to GET "/<ENTITY URI>"
-    Then I should receive a return code of 404
-
-  @us5389
-  Scenario: yearlyAttendance CRUD for duplicate entity
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And entity URI "yearlyAttendances"
-    And an entity json document for a "yearlyAttendance"
-  # Create duplicate entity.
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 201
-    And I should receive a new entity URI after a successful response
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 409
-  # Read
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And the response should contain the appropriate fields and values
-    And "entityType" should be "attendance"
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    When I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 200
-    And the response should contain the appropriate fields and values
-    And "entityType" should be "attendance"
-    And I should receive a link named "self" with URI "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-  # Delete
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 204
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-    When I navigate to DELETE "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    Then I should receive a return code of 404
-    And I navigate to GET "/<ENTITY URI>/<NEWLY CREATED ENTITY ID>"
-    And I should receive a return code of 404
-
-  @us5389
-  Scenario: yearlyAttendance CRUD for invalid entity
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-    And entity URI "yearlyAttendances"
-    And an entity json document for a "invalidYearlyAttendance"
-  # Create using invalid entity.
-    When I navigate to POST "/<ENTITY URI>"
-    Then I should receive a return code of 400
-
   Scenario Outline: CRUD operations till we unwip auto_crud
     Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
     And format "application/vnd.slc+json"
diff --git a/sli/acceptance-tests/test/features/apiV1/entities/crud/multipleAttendanceEventCategories.feature b/sli/acceptance-tests/test/features/apiV1/entities/crud/multipleAttendanceEventCategories.feature
deleted file mode 100644
index ee15866..0000000
--- a/sli/acceptance-tests/test/features/apiV1/entities/crud/multipleAttendanceEventCategories.feature
+++ /dev/null
@@ -1,11 +0,0 @@
-@RALLY_US5906
-Feature: As an SLI application, I want to insert and update attendanceEvents differing only in AttendanceEventCategories
-
-  Scenario: Attendance api GETs and POSTs
-
-    Given I am logged in using "rrogers" "rrogers1234" to realm "IL"
-      And I GET attendance for student "0c2756fd-6a30-4010-af79-488d6ef2735a_id" in school "92d6d5a0-852c-45f4-907a-912752831772" for the schoolYear "2012-2013" on date "2012-10-10" and verify that it has "0" attendance events
-    When I POST an attendance of "In Attendance, Early departure" for student "0c2756fd-6a30-4010-af79-488d6ef2735a_id" in school "92d6d5a0-852c-45f4-907a-912752831772" for the schoolYear "2012-2013" on date "2012-10-10" for section "f048354d-dbcb-0214-791d-b769f521210d_id" with educational environment "Classroom"
-    Then I GET attendance for student "0c2756fd-6a30-4010-af79-488d6ef2735a_id" in school "92d6d5a0-852c-45f4-907a-912752831772" for the schoolYear "2012-2013" on date "2012-10-10" and verify that it has "2" attendance events
-      And I GET attendance for student "0c2756fd-6a30-4010-af79-488d6ef2735a_id" in school "92d6d5a0-852c-45f4-907a-912752831772" for the schoolYear "2012-2013" on date "2012-10-10" and verify that its attendance events are for section "f048354d-dbcb-0214-791d-b769f521210d_id"
-      And I DELETE attendance for student "0c2756fd-6a30-4010-af79-488d6ef2735a_id" in school "92d6d5a0-852c-45f4-907a-912752831772" for the schoolYear "2012-2013" on date "2012-10-10" and verify that there are no attendance events remaining
\ No newline at end of file
diff --git a/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/attendance_events_crud.rb b/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/attendance_events_crud.rb
index b4c1456..6fc54ec 100644
--- a/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/attendance_events_crud.rb
+++ b/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/attendance_events_crud.rb
@@ -10,6 +10,10 @@ def attendance_endpoint
   "/v1.5/#{yearly? ? 'yearlyAttendances' : 'attendances'}"
 end
 
+def student_attendance_endpoint(student_id, school_id)
+  "/v1.5/students/#{student_id}/attendances?schoolId=#{school_id}"
+end
+
 def resource
   yearly? ? yearly_attendance_resource : attendance_resource
 end
@@ -28,11 +32,23 @@ When /^I POST an? (yearly )?attendance event$/ do |yearly|
   restHttpPost(attendance_endpoint, @new_entity.to_json, 'application/vnd.slc+json')
 end
 
+When /^I POST a modified (yearly )?attendance event$/ do |yearly|
+  @yearly = yearly
+  @entity = resource
+  @entity['schoolYearAttendance'].first['attendanceEvent'] << {'date'=>'2011-09-17', 'event'=>'Early departure'}
+  restHttpPost(attendance_endpoint, @entity.to_json, 'application/vnd.slc+json')
+end
+
 When /^I GET that attendance event$/ do
   restHttpGet("#{attendance_endpoint}/#{entity_id}")
   @entity = JSON.parse(@res)
 end
 
+When /^I GET the attendance for that student$/ do
+  restHttpGet( student_attendance_endpoint( @entity['studentId'], @entity['schoolId'] ) )
+  @student_attendance_entity = JSON.parse(@res)
+end
+
 When /^I GET a non-existent (yearly )?attendance event$/ do |yearly|
   @yearly = yearly
   restHttpGet("#{attendance_endpoint}/unknown")
@@ -89,23 +105,56 @@ Then /^the response resource should contain expected attendance data$/ do
   pare_entity(@entity).should == resource
 end
 
+Then /^the students attendance should (not )?contain the attendance event$/ do |not_expected|
+  student_attendance = find_student_attendance(@entity['studentId'], @entity['schoolId'])
+  student_attendance.should_not be_nil
+
+  contains = student_attendance.any? do |attendance|
+    school_year_attendance = attendance['schoolYearAttendance']
+    school_year_attendance == attendance_resource['schoolYearAttendance']
+  end
+
+  message = "Expected: #{student_attendance} \nto #{not_expected}contain: #{attendance_resource['schoolYearAttendance']}"
+  if not_expected
+    contains.should be_false, message
+  else
+    contains.should be_true, message
+  end
+end
+
 def find_attendance(id)
   restHttpGet("#{attendance_endpoint}/#{id}")
   @res.code == 200 ? JSON.parse(@res) : nil
 end
 
+def find_student_attendance(student_id, school_id)
+  restHttpGet(student_attendance_endpoint(student_id, school_id))
+  @res.code == 200 ? JSON.parse(@res) : nil
+end
+
 def delete_attendance(id)
   restHttpDelete("#{attendance_endpoint}/#{id}", 'application/vnd.slc+json') if id
 end
 
 def verify_attendance_entity_links
-  links = @entity['links']
-
-  links.should include( build_entity_link 'getSchool', @entity['schoolId'])
-  links.should include( build_entity_link 'getStudent', @entity['studentId'])
-  links.should include( build_entity_link 'getEducationOrganization', @entity['schoolId'])
-
-  links.should include( build_entity_link 'getSection', @entity['attendanceEvent'].first['sectionId']) if yearly?
+  links = remove_common_links( @entity['links'] ).dup
+  [
+    ['getSchool', @entity['schoolId']],
+    ['getStudent', @entity['studentId']],
+    ['getEducationOrganization', @entity['schoolId']]
+  ].each do |rel, id|
+    link = build_entity_link rel, id
+    links.should include(link)
+    links.delete link
+  end
+
+  if yearly?
+    link = build_entity_link 'getSection', @entity['attendanceEvent'].first['sectionId']
+    links.should include(link)
+    links.delete link
+  end
+
+  links.map{|link| link['rel']}.should == []
 end
 
 def attendance_resource
diff --git a/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/bell_schedule_crud.rb b/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/bell_schedule_crud.rb
index dd69ca2..768d6d7 100644
--- a/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/bell_schedule_crud.rb
+++ b/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/bell_schedule_crud.rb
@@ -188,10 +188,17 @@ def delete_bell_schedule(id)
 end
 
 def verify_bell_schedule_entity_links
-  links = @entity['links']
+  links = remove_common_links(@entity['links']).dup
+  [
+    ['getSchool', bell_schedule_resource['educationOrganizationId']],
+    ['getEducationOrganization', bell_schedule_resource['educationOrganizationId']],
+    ['getClassPeriod', bell_schedule_resource['meetingTime']['classPeriodId']],
+    ['getCalendarDate', bell_schedule_resource['calendarDateReference']]
+  ].each do |rel, id|
+    link = build_entity_link rel, id
+    links.should include(link)
+    links.delete link
+  end
 
-  links.should include( build_entity_link 'getSchool', bell_schedule_resource['educationOrganizationId'])
-  links.should include( build_entity_link 'getEducationOrganization', bell_schedule_resource['educationOrganizationId'])
-  links.should include( build_entity_link 'getClassPeriod', bell_schedule_resource['meetingTime']['classPeriodId'])
-  links.should include( build_entity_link 'getCalendarDate', bell_schedule_resource['calendarDateReference'])
+  links.map{|link| link['rel']}.should == []
 end
\ No newline at end of file
diff --git a/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/crud_step.rb b/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/crud_step.rb
index 7f56cb6..6c79cec 100644
--- a/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/crud_step.rb
+++ b/sli/acceptance-tests/test/features/apiV1/entities/crud/step_definitions/crud_step.rb
@@ -969,100 +969,6 @@ Then /^I delete both studentAssessment and Assessment$/ do
     step "I should receive a return code of 204"
 end
 
-And(/^I GET attendance for student "([^"]*)" in school "([^"]*)" for the schoolYear "([^"]*)" on date "([^"]*)" and verify that it has "([^"]*)" attendance events$/) do |studentId, schoolId, schoolYear, eventDate, eventCount|
-  url = "/v1/students/#{studentId}/attendances?schoolId=#{schoolId}"
-  restHttpGet(url, 'application/vnd.slc+json')
-  assert(@res.code == 200, "Could not fetch attendance #{url}.")
-  attendances = JSON.parse @res
-  attendanceCount = 0
-  attendanceForSchoolYear = attendances.select { |attendance|
-    if attendance.has_key? ('schoolYearAttendance')
-      schoolYear == attendance['schoolYearAttendance'][0]['schoolYear']
-    end
-  }
-
-  attendanceCount =  attendanceForSchoolYear[0]['schoolYearAttendance'][0]['attendanceEvent'].count if attendanceForSchoolYear.count > 0
-  assert(attendanceCount == eventCount.to_i, "Expected #{eventCount} attendanceEvents. Found  #{attendanceCount}")
-
-end
-
-When(/^I POST an attendance of "([^"]*)" for student "([^"]*)" in school "([^"]*)" for the schoolYear "([^"]*)" on date "([^"]*)" for section "([^"]*)" with educational environment "([^"]*)"$/) do |categories, studentId, schoolId, schoolYear, eventDate, sectionId, educationalEnvironment|
-  attendance = <<-jsonDelimiter
-  {
-   "entityType":"attendance",
-   "studentId":"-----PLACEHOLDER-----",
-   "schoolId":"-----PLACEHOLDER-----",
-   "schoolYearAttendance":[
-      {
-         "schoolYear":"-----PLACEHOLDER-----",
-         "attendanceEvent":[
-            {
-               "date":"-----PLACEHOLDER-----",
-               "event":"-----PLACEHOLDER-----",
-               "educationalEnvironment":"-----PLACEHOLDER-----",
-               "sectionId":"-----PLACEHOLDER-----"
-            }
-         ]
-      }
-   ]
-  }
-  jsonDelimiter
-  attendance = JSON.parse(attendance)
-  attendance['studentId']                                  = studentId
-  attendance['schoolId']                                   = schoolId
-  attendance['schoolYearAttendance'][0]['schoolYear']      = schoolYear
-  events = categories.split(/,/).map {|category|
-      category.strip!
-      { 'date' => eventDate, 'event' => category, 'sectionId' => sectionId, "educationalEnvironment" => educationalEnvironment}
-  }
-  attendance['schoolYearAttendance'][0]['attendanceEvent'] = events
-  restHttpPost('/v1/attendances', attendance.to_json, 'application/vnd.slc+json')
-  assert(@res.code == 201, "Could not create attendance #{attendance.to_json}.")
-  location = @res.raw_headers['location'][0]
-  restHttpGetAbs(location, 'application/vnd.slc+json')
-  assert(@res.code == 200, "Could not fetch newly created attendance #{attendance.to_json}.")
-end
-
-And /^I GET attendance for student "(.*?)" in school "(.*?)" for the schoolYear "(.*?)" on date "(.*?)" and verify that its attendance events are for section "(.*?)"$/ do |studentId, schoolId, schoolYear, eventDate, sectionId|
-  url = "/v1/students/#{studentId}/attendances?schoolId=#{schoolId}"
-  restHttpGet(url, 'application/vnd.slc+json')
-  assert(@res.code == 200, "Could not fetch attendance #{url}.")
-  expected_count = 2
-  actual_count = 0
-  attendances = JSON.parse @res
-  attendances.each do |attendance|
-    schoolYearAttendances = attendance['schoolYearAttendance']
-    schoolYearAttendances.each do |schoolYearAttendance|
-      if schoolYearAttendance['schoolYear'] = schoolYear
-        events = schoolYearAttendance['attendanceEvent']
-        events.each do |event|
-          if event['date'] == eventDate && event['sectionId'] == sectionId
-            actual_count += 1
-          end
-        end
-      end
-    end
-  end
-  assert(expected_count == actual_count, "#{expected_count.to_s} expected, got #{actual_count.to_s}")
-end
-
-And /^I DELETE attendance for student "(.*?)" in school "(.*?)" for the schoolYear "(.*?)" on date "(.*?)" and verify that there are no attendance events remaining$/ do |studentId, schoolId, schoolYear, eventDate|
-  url = "/v1/students/#{studentId}/attendances?schoolId=#{schoolId}"
-  restHttpGet(url, 'application/vnd.slc+json')
-  assert(@res.code == 200, "Could not fetch attendance #{url}.")
-  attendances = JSON.parse @res
-
-  attendances.each {|attendance|
-    attendance_id = attendance['id']
-    restHttpDelete("/v1/attendances/#{attendance_id}")
-    assert(@res.code == 204, "Could not delete with id #{attendance_id}")
-    restHttpGet("/v1/attendances/#{attendance_id}")
-    assert(@res.code == 404, "Attendance #{attendance_id} still exists")
-  }
-
-end
-
-
 When /^I POST a "([^"]*)"$/ do |entityType|
   @expected_entity_bs = {
       "bellScheduleName" => "Grade School Schedule",
diff --git a/sli/acceptance-tests/test/features/utils/capybara_common.rb b/sli/acceptance-tests/test/features/utils/capybara_common.rb
new file mode 100644
index 0000000..5d0af3e
--- /dev/null
+++ b/sli/acceptance-tests/test/features/utils/capybara_common.rb
@@ -0,0 +1,4 @@
+require 'capybara'
+include Capybara::DSL
+Capybara.default_driver = :selenium
+
diff --git a/sli/acceptance-tests/test/features/utils/db_client.rb b/sli/acceptance-tests/test/features/utils/db_client.rb
index e5663ef..de383d5 100644
--- a/sli/acceptance-tests/test/features/utils/db_client.rb
+++ b/sli/acceptance-tests/test/features/utils/db_client.rb
@@ -16,6 +16,12 @@ class DbClient
 
   def for_tenant(tenant)
     @db = @conn[tenant_to_db_name(tenant)]
+    self
+  end
+
+  def for_sli
+    @db = @conn[Property[:sli_database_name]]
+    self
   end
 
   def close
diff --git a/sli/acceptance-tests/test/features/utils/rakefile_common.rb b/sli/acceptance-tests/test/features/utils/rakefile_common.rb
index 228b9ba..e4db0f2 100755
--- a/sli/acceptance-tests/test/features/utils/rakefile_common.rb
+++ b/sli/acceptance-tests/test/features/utils/rakefile_common.rb
@@ -181,6 +181,7 @@ class Property
   end
 
   def self.[](key)
+    key = key.to_s # in case key is a symbol
     ENV[key] || @@yml[key]
   end
 
diff --git a/sli/acceptance-tests/test/features/utils/selenium_common.rb b/sli/acceptance-tests/test/features/utils/selenium_common.rb
index a1fd7de..436d747 100644
--- a/sli/acceptance-tests/test/features/utils/selenium_common.rb
+++ b/sli/acceptance-tests/test/features/utils/selenium_common.rb
@@ -93,6 +93,7 @@ end
 When /^I submit the credentials "([^"]*)" "([^"]*)" for the "([^"]*)" login page$/ do |user, pass, idpType|
   disable_NOTABLESCAN
   puts "Logging in with credentials \"#{user}\" \"#{pass}\"" if $SLI_DEBUG
+  # TODO Determine if anything other than "Simple" is needed
   if idpType=="OpenAM"
     @driver.find_element(:id, "IDToken1").send_keys user
     @driver.find_element(:id, "IDToken2").send_keys pass
diff --git a/sli/acceptance-tests/test/features/utils/sli_utils.rb b/sli/acceptance-tests/test/features/utils/sli_utils.rb
index 80a9e11..ed3fd8f 100644
--- a/sli/acceptance-tests/test/features/utils/sli_utils.rb
+++ b/sli/acceptance-tests/test/features/utils/sli_utils.rb
@@ -16,7 +16,6 @@ limitations under the License.
 
 =end
 
-
 require 'rubygems'
 require 'bundler/setup'
 
@@ -33,7 +32,7 @@ require 'digest/sha1'
 require 'socket'
 require 'macaddr'
 
-include REXML
+#include REXML
 
 $SLI_DEBUG=ENV['DEBUG'] if ENV['DEBUG']
 
diff --git a/sli/databrowser/app/controllers/entities_controller.rb b/sli/databrowser/app/controllers/entities_controller.rb
index c4f9ba8..6e009b4 100644
--- a/sli/databrowser/app/controllers/entities_controller.rb
+++ b/sli/databrowser/app/controllers/entities_controller.rb
@@ -16,8 +16,6 @@ See the License for the specific language governing permissions and
 limitations under the License.
 
 =end
-#include EdorgTreeHelper
-#require "edorg_tree_helper"
 require "active_resource/base"
 # This is the main controller of the Databrowser.
 # We try to "Wrap" all api requests in this one single point
@@ -42,28 +40,28 @@ class EntitiesController < ApplicationController
   def set_url
     @search_field = nil
     case params[:search_type]
-      when /studentByName/
-        @search_field = "q"
-      when /staffByName/
-        @search_field = "q"
-      when /edOrgByName/
-        @search_field = "q"
-      when /students/
-        @search_field = "studentUniqueStateId"
-      when /staff/
-        @search_field = "staffUniqueStateId"
-      when /parents/
-        @search_field = "parentUniqueStateId"
-      when /educationOrganizations/
-        @search_field = "stateOrganizationId"
+    when /studentByName/
+      @search_field = "q"
+    when /staffByName/
+      @search_field = "q"
+    when /edOrgByName/
+      @search_field = "q"
+    when /students/
+      @search_field = "studentUniqueStateId"
+    when /staff/
+      @search_field = "staffUniqueStateId"
+    when /parents/
+      @search_field = "parentUniqueStateId"
+    when /educationOrganizations/
+      @search_field = "stateOrganizationId"
     end
     params[:other] = params[:search_type] if @search_field
     if params[:search_type] == "studentByName"
       Entity.url_type = "search/students"
     elsif params[:search_type] == "staffByName"
-      Entity.url_type = "search/staff,teachers"
+        Entity.url_type = "search/staff,teachers"
     elsif params[:search_type] == "edOrgByName"
-      Entity.url_type = "search/educationOrganizations"
+        Entity.url_type = "search/educationOrganizations"
     else
       Entity.url_type = params[:other]
     end
@@ -90,13 +88,12 @@ class EntitiesController < ApplicationController
   # Second, if we see any offset in params then we make the call to
   # grab the next page of data from the Api.
   def show
-    logger.debug {"Parameters are:#{params.inspect}"}
     @@LIMIT = 50
     @page = Page.new
     if params[:search_id] && @search_field
       @entities = []
       @entities = Entity.get("", @search_field => params[:search_id].strip) if params[:search_id] && !params[:search_id].strip.empty?
-      @entities = clean_up_results(@entities)
+      clean_up_results
       flash.now[:notice] = "There were no entries matching your search" if @entities.size == 0 || @entities.nil?
     else
       #Clean up the parameters to pass through to the API.
@@ -106,19 +103,10 @@ class EntitiesController < ApplicationController
       query = params.reject {|k, v| k == 'controller' || k == 'action' || k == 'other' || k == 'search_id'}
       logger.debug {"Keeping query parameters #{query.inspect}"}
       @entities = Entity.get("", query)
-
-
       @page = Page.new(@entities.http_response)
-      @entities= clean_up_results(@entities)
+      clean_up_results
     end
     if params[:other] == 'home'
-      entidAndCollection = getUserEntityIdAndCollection
-      if entidAndCollection['collection'] != "students"
-        getStudentAndStaffCounts(entidAndCollection)
-        @isAStudent = false
-      else
-        @isAStudent = true
-      end
       render :index
       return
     end
@@ -129,158 +117,13 @@ class EntitiesController < ApplicationController
       format.js #show.js.erb
     end
   end
-
+  
   private
-  def clean_up_results(entities)
-    tmp = entities
-    if entities.is_a?(Hash)
+  def clean_up_results
+    if @entities.is_a?(Hash)
       tmp = Array.new()
-      tmp.push(entities)
-    end
-    tmp
-  end
-  private
-  def getStudentAndStaffCounts(entidAndCollection)
-    # for @entities.each |e|
-    # logger.debug{""}
-
-    userEdOrgsString = getUserEdOrgsString(entidAndCollection['entid'])
-
-    #userEdOrgsNameString = getUserEdOrgsString(entidAndCollection['entid'])['nameOfInstituition']
-
-
-
-    #@userEdOrgsNameVar = userEdOrgsNameString
-
-
-    @allStudentCount = -1
-    @allStaffCount = -1
-    @currentStudentCount = -1
-    @currentStaffCount = -1
-    @allStudentCount = getCount("educationOrganizations", userEdOrgsString, "studentSchoolAssociations", "students", false)
-    @allStaffCount = getCount("educationOrganizations", userEdOrgsString, "staffEducationOrgAssignmentAssociations", "staff", false)
-    @currentStudentCount = getCount("educationOrganizations", userEdOrgsString, "studentSchoolAssociations", "students", true)
-    @currentStaffCount = getCount("educationOrganizations", userEdOrgsString, "staffEducationOrgAssignmentAssociations", "staff", true)
-
-  end
-  private
-  def getUserEntityIdAndCollection
-    logger.debug {"Try to print Response:"}
-    bodyparts = JSON.parse(@entities.http_response.body)
-    #bodyparts['links'].each do |e|
-    bodyparts.each do |e|
-      logger.debug {"#{e} \n"}
-    end
-    logger.debug {"After Try to print Response:"}
-    #get one link
-    linkstring = bodyparts['links'][0]
-    logger.debug {"linkstring = #{linkstring['href']}"}
-    #split the link on "rest/", as that always comes before the version number, user's entity collection, and entityId
-    linksplit = linkstring['href'].split("rest/")
-    # then take the part of the string that comes after
-    entidPlus = linksplit[1]
-    # drop everything after "/" to isolate the id from other url parts
-    #break the string into version number, user's entity collection, entityId, and other parts that follow
-    entidplussplit = entidPlus.split("/")
-    collection = entidplussplit[1]
-    logger.debug {"User entity collection: #{collection}"}
-    entid = entidplussplit[2]
-    logger.debug {"User entity ID: #{entid}"}
-    entidAndCollection = {"entid"=>entid,"collection"=>collection}
-    entidAndCollection
-  end
-
-  #This function is used to set the values for EdOrg table for Id, name, parent and type fields in the homepage
-  private
-  def getUserEdOrgsString(entid)
-
-    #The URL to get edOrgs
-    edOrgUrl = "staff/#{entid}/staffEducationOrgAssignmentAssociations/educationOrganizations"
-
-    #The attributes to be set in the EdOrg table fields
-    id ="id"
-    name = "nameOfInstitution"
-    type = "entityType"
-    parent = "parentEducationAgencyReference"
-
-    #Calling the getEdOrgs function, which will handle the API call to return the values from JSON
-    userEdOrgsId = getEdOrgs(edOrgUrl, id)
-    userEdOrgsName = getEdOrgs(edOrgUrl, name)
-    userEdOrgsType = getEdOrgs(edOrgUrl, type)
-    userEdOrgsParentArr = getEdOrgs(edOrgUrl, parent)
-
-    #The parent field for EdOrg is a string that actually contains the value of an array of parent
-    # EdOrgs associated with an EdOrg. The string has to be converted to an array to do array manipulations to
-    # display the parent EdOrgs for the Edorg
-    userEdOrgsParent = eval(userEdOrgsParentArr)
-    logger.debug("User edorgs parent : #{userEdOrgsParent}")
-
-    #Looping through parent EdOrgs and sending an API call to get the parent EdOrg Name associated with Parent EdOrg Id
-    userEdOrgsParent.each do |parentId|
-      parentUrl = "educationOrganizations/#{parentId}"
-      userEdOrgsParent = getEdOrgs(parentUrl, name)
-    end
-
-    #Setting variables to be sent to the View
-    @userEdOrgsIdVar = userEdOrgsId
-    @userEdOrgsNameVar = userEdOrgsName
-    @userEdOrgsTypeVar = userEdOrgsType
-    @userEdOrgsParentVar = userEdOrgsParent
-    @userFeederUrl =  getFeederOrg(userEdOrgsId)
-
-    #userEdOrgsId
-  end
-
-  #This function is used to run an API call to fetch the values of attributes associated with Entity Id
-  private
-  def getEdOrgs(entityUrl, attribute)
-
-    #Entity.url_type = "staff/#{entid}/staffEducationOrgAssignmentAssociations/educationOrganizations"
-    Entity.url_type = entityUrl
-    begin
-      userEdOrgs = Entity.get("")
-    rescue
-      logger.debug {"Caught Exception on getting edorgs"}
-      return
-    end
-    userEdOrgs = clean_up_results(userEdOrgs)
-    userEdOrgsString = ""
-
-    userEdOrgs.each do |e|
-      userEdOrgsString = "#{userEdOrgsString},#{e[attribute]}"
-
-      logger.debug {"User edorgs : #{e}"}
-    end
-
-    # drop leading comma
-    userEdOrgsString = userEdOrgsString[1..-1]
-    userEdOrgsString
-  end
-
-  #This function is used to run an API call to fetch the values of feeder EdOrgs associated with the EdOrg Id
-  def getFeederOrg(parentId)
-    Entity.url_type = "educationOrganizations?parentEducationAgencyReference=#{parentId}"
-    parentEdOrgs = Entity.url_type
-    parentEdOrgs = clean_up_results(parentEdOrgs)
-    logger.debug {"Parent EdOrgs : #{parentEdOrgs}"}
-    parentEdOrgs
-  end
-
-
-  private
-  def  getCount(associationRoot, userEdOrgsString, associationType, targetCollection, currentOnly)
-    Entity.url_type = "#{associationRoot}/#{userEdOrgsString}/#{associationType}/#{targetCollection}"
-    if !currentOnly.nil? && currentOnly == true
-      params = {"countOnly"=>"true","currentOnly"=>"true"}
-    else
-      params = {"countOnly"=>"true"}
-    end
-    begin
-      count = Entity.get("",params).http_response['TotalCount']
-    rescue
-      count = "N/A"
-      logger.debug {"Caught Exception on count"}
+      tmp.push(@entities)
+      @entities = tmp
     end
-    count
   end
 end
diff --git a/sli/databrowser/app/views/entities/index.html.erb b/sli/databrowser/app/views/entities/index.html.erb
index 05b567b..973b746 100644
--- a/sli/databrowser/app/views/entities/index.html.erb
+++ b/sli/databrowser/app/views/entities/index.html.erb
@@ -1,47 +1,6 @@
 <div id='data'>
-
-  <h1>Listing Home </h1>
-  <% @entities.each do |e| %>
-      <p><%= link_to t(e['rel']), localize_url(e['href']) %></p>
-  <% end %>
-  <% if !@isAStudent %>
-     <!-- <h2>Counts</h2>
-      <table>
-        <tr>
-          <td>Data Point</td>
-          <td># Ever Enrolled/Associated</td>
-          <td># Currently Enrolled/Associated</td>
-        </tr>
-        <tr>
-          <td>Students</td>
-          <td><%=@allStudentCount%></td>
-          <td><%=@currentStudentCount%></td>
-        </tr>
-        <tr>
-          <td>Staff</td>
-          <td><%=@allStaffCount%></td>
-          <td><%=@currentStaffCount%></td>
-        </tr>
-      </table>
-      <div></div>
-      <table>-->
-      <table>
-        <tr>
-          <td>EdOrgs Name</td>
-          <td>EdOrgs Id</td>
-          <td>EdOrgs Type</td>
-          <td>EdOrgs Parent</td>
-        </tr>
-        <tr>
-          <td><%=link_to @userEdOrgsNameVar, @userFeederUrl  %></td>
-          <td><%=@userEdOrgsIdVar%></td>
-          <td><%=@userEdOrgsTypeVar%></td>
-          <td><%=@userEdOrgsParentVar%></td>
-        </tr>
-      </table>
-  <% end %>
-
-
-
-
-
+<h1>Welcome to the inBloom, inc. Data Browser</h1>
+<% @entities.each do |e| %>
+	<p><%= link_to t(e['rel']), localize_url(e['href']) %></p>
+<% end %>
+</div>
