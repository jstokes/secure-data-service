//n is the number of district data sets that have been ingested till now
// mongo localhost/02f7abaa9764db2fa3c1ad852247cd4ff06b2c0a -eval 'var n = 3;' nDistrictCounts.js

var studentCohort =      db.student.aggregate({ $unwind: '$cohort'},                   {$project:{ g:1}}, {$group :{_id:"$g", count : { $sum : 1 }}} )["result"][0].count;
var studentSchool =      db.student.aggregate({ $unwind: '$schools'},                  {$project:{ g:1}}, {$group :{_id:"$g", count : { $sum : 1 }}} )["result"][0].count;
var studentSection =     db.student.aggregate({ $unwind: '$section'},                  {$project:{ g:1}}, {$group :{_id:"$g", count : { $sum : 1 }}} )["result"][0].count;
var studentAssessment =  db.student.aggregate({ $unwind: '$studentAssessment'},        {$project:{ g:1}}, {$group :{_id:"$g", count : { $sum : 1 }}} )["result"][0].count;
var studentParent =      db.student.aggregate({ $unwind: '$studentParentAssociation'}, {$project:{ g:1}}, {$group :{_id:"$g", count : { $sum : 1 }}} )["result"][0].count;
var studentSection =     db.section.aggregate({ $unwind: '$studentSectionAssociation'}, {$project:{ g:1}}, {$group :{_id:"$g", count : { $sum : 1 }}} )["result"][0].count;
var teacherSection =     db.section.aggregate({ $unwind: '$teacherSectionAssociation'}, {$project:{ g:1}}, {$group :{_id:"$g", count : { $sum : 1 }}} )["result"][0].count;
var assessment =         db.assessment.find().count();
var attendance =         db.attendance.find().count();
var calendarDate =       db.calendarDate.find().count();
var cohort =             db.cohort.find().count();
var competencyLevelDescriptor =  db.competencyLevelDescriptor.find().count();
var course =             db.course.find().count();
var courseOffering =     db.courseOffering.find().count();
var courseSectionAssociation =  db.courseSectionAssociation.find().count();
var courseTranscript =   db.courseTranscript.find().count();
var customRole =         db.customRole.find().count();
var disciplineAction =   db.disciplineAction.find().count();
var disciplineIncident =  db.disciplineIncident.find().count();
var educationOrganization =  db.educationOrganization.find().count();
var educationOrganizationAssociation =  db.educationOrganizationAssociation.find().count();
var educationOrganizationSchoolAssociation =  db.educationOrganizationSchoolAssociation.find().count();
var grade =              db.grade.find().count();
var gradebookEntry =     db.gradebookEntry.find().count();
var gradingPeriod =      db.gradingPeriod.find().count();
var graduationPlan =     db.graduationPlan.find().count();
var learningObjective =  db.learningObjective.find().count();
var learningStandard =   db.learningStandard.find().count();
var parent =             db.parent.find().count();
var program =            db.program.find().count();
var reportCard =         db.reportCard.find().count();
var section =            db.section.find().count();
var session =            db.session.find().count();
var staff =              db.staff.find().count();
var staffCohortAssociation =  db.staffCohortAssociation.find().count();
var staffEducationOrganizationAssociation =  db.staffEducationOrganizationAssociation.find().count();
var staffProgramAssociation =  db.staffProgramAssociation.find().count();
var student =            db.student.find().count();
var studentAcademicRecord =  db.studentAcademicRecord.find().count();
var studentCompetency =  db.studentCompetency.find().count();
var studentCompetencyObjective =  db.studentCompetencyObjective.find().count();
var studentDisciplineIncidentAssociation =  db.studentDisciplineIncidentAssociation.find().count();
var studentGradebookEntry =  db.studentGradebookEntry.find().count();
var studentSchoolAssociation =  db.studentSchoolAssociation.find().count();
var teacherSchoolAssociation =  db.teacherSchoolAssociation.find().count();

ok=(31920 * n == studentCohort )?"Matching":"* ERROR *"; print (ok + " studentCohort " + 31920 + "*n " + (studentCohort * n));
ok=(31696 * n == studentSchool )?"Matching":"* ERROR *"; print (ok + " studentSchool " + 31696 + "*n " + (studentSchool * n));
ok=(31696 * n == studentSection )?"Matching":"* ERROR *"; print (ok + " studentSection " + 31696 + "*n " + (studentSection * n));
ok=(63392 * n == studentAssessment )?"Matching":"* ERROR *"; print (ok + " studentAssessment " + 63392 + "*n " + (studentAssessment * n));
ok=(48048 * n == studentParent )?"Matching":"* ERROR *"; print (ok + " studentParent " + 48048 + "*n " + (studentParent * n));
ok=(31696 * n == studentSection )?"Matching":"* ERROR *"; print (ok + " studentSection " + 31696 + "*n " + (studentSection * n));
ok=(4032 * n == teacherSection )?"Matching":"* ERROR *"; print (ok + " teacherSection " + 4032 + "*n " + (teacherSection * n));
ok=(100 * n == assessment )?"Matching":"* ERROR *"; print (ok + " assessment " + 100 + "*n " + (assessment * n));
ok=(0 * n == attendance )?"Matching":"* ERROR *"; print (ok + " attendance " + 0 + "*n " + (attendance * n));
ok=(448 * n == calendarDate )?"Matching":"* ERROR *"; print (ok + " calendarDate " + 448 + "*n " + (calendarDate * n));
ok=(336 * n == cohort )?"Matching":"* ERROR *"; print (ok + " cohort " + 336 + "*n " + (cohort * n));
ok=(2016 * n == course )?"Matching":"* ERROR *"; print (ok + " course " + 2016 + "*n " + (course * n));
ok=(4032 * n == courseOffering )?"Matching":"* ERROR *"; print (ok + " courseOffering " + 4032 + "*n " + (courseOffering * n));
ok=(((114 * n)- (n -1)) == educationOrganization )?"Matching":"* ERROR *"; print (ok + " educationOrganization " + 114 + "*n " + (educationOrganization * n));
ok=(896 * n == gradingPeriod )?"Matching":"* ERROR *"; print (ok + " gradingPeriod " + 896 + "*n " + (gradingPeriod * n));
ok=(112 * n == graduationPlan )?"Matching":"* ERROR *"; print (ok + " graduationPlan " + 112 + "*n " + (graduationPlan * n));
ok=(1 * n == learningStandard )?"Matching":"* ERROR *"; print (ok + " learningStandard " + 1 + "*n " + (learningStandard * n));
ok=(48048 * n == parent )?"Matching":"* ERROR *"; print (ok + " parent " + 48048 + "*n " + (parent * n));
ok=(115 * n == program )?"Matching":"* ERROR *"; print (ok + " program " + 115 + "*n " + (program * n));
ok=(4032 * n == section )?"Matching":"* ERROR *"; print (ok + " section " + 4032 + "*n " + (section * n));
ok=(224 * n == session )?"Matching":"* ERROR *"; print (ok + " session " + 224 + "*n " + (session * n));
ok=(14695 * n == staff )?"Matching":"* ERROR *"; print (ok + " staff " + 14695 + "*n " + (staff * n));
ok=(6608 * n == staffCohortAssociation )?"Matching":"* ERROR *"; print (ok + " staffCohortAssociation " + 6608 + "*n " + (staffCohortAssociation * n));
ok=(135 * n == staffEducationOrganizationAssociation )?"Matching":"* ERROR *"; print (ok + " staffEducationOrganizationAssociation " + 135 + "*n " + (staffEducationOrganizationAssociation * n));
ok=(6498 * n == staffProgramAssociation )?"Matching":"* ERROR *"; print (ok + " staffProgramAssociation " + 6498 + "*n " + (staffProgramAssociation * n));
ok=(31696 * n == student )?"Matching":"* ERROR *"; print (ok + " student " + 31696 + "*n " + (student * n));
ok=(31696 * n == studentSchoolAssociation )?"Matching":"* ERROR *"; print (ok + " studentSchoolAssociation " + 31696 + "*n " + (studentSchoolAssociation * n));
ok=(14560 * n == teacherSchoolAssociation )?"Matching":"* ERROR *"; print (ok + " teacherSchoolAssociation " + 14560 + "*n " + (teacherSchoolAssociation * n));
