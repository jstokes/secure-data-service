package org.slc.sli.test.exportTool;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

public class GenerateAssessment {

    private String begin = new StringBuilder()
        .append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n")
        .append("<!--Sample XML file generated by XMLSpy v2012 sp1 (http://www.altova.com)-->\n")
        .append("<InterchangeAssessmentMetadata xsi:schemaLocation=\"http://ed-fi.org/0100 Interchange-AssessmentMetadata.xsd\" xmlns=\"http://ed-fi.org/0100\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n")
        .toString();

    private String end = new StringBuilder()
        .append("</InterchangeAssessmentMetadata>\n")
        .toString();

    private String body = new StringBuilder()
//		.append("	<Assessment id=\"--Assessment_id--\">\n")
        .append("	<Assessment>\n")
        .append("		<AssessmentTitle>--AssessmentTitle--</AssessmentTitle>\n")

        .append("--AssessmentIdentificationCodes--\n")

        .append("		<AssessmentCategory>--AssessmentCategory--</AssessmentCategory>\n")
        .append("		<AcademicSubject>--AcademicSubject--</AcademicSubject>\n")
        .append("		<GradeLevelAssessed>--GradeLevelAssessed--</GradeLevelAssessed>\n")
        .append("		<LowestGradeLevelAssessed>--LowestGradeLevelAssessed--</LowestGradeLevelAssessed>\n")

        .append("--AssessmentPerformanceLevels--\n")

        .append("		<ContentStandard>--ContentStandard--</ContentStandard>\n")
        .append("		<AssessmentForm>--AssessmentForm--</AssessmentForm>\n")
        .append("		<Version>--Version--</Version>\n")
        .append("		<RevisionDate>--RevisionDate--</RevisionDate>\n")
        .append("		<MaxRawScore>--MaxRawScore--</MaxRawScore>\n")
        .append("		<Nomenclature>--Nomenclature--</Nomenclature>\n")
//		.append("		<AssessmentPeriod id=\"--AssessmentPeriod_id--\" ref=\"--AssessmentPeriod_ref--\">\n")
        .append("		<AssessmentPeriod>\n")
        .append("			<CodeValue>--AssessmentPeriod--</CodeValue>\n")
        .append("		</AssessmentPeriod>\n")

        .append("--AssessmentItemReferences--\n")

        .append("--ObjectiveAssessmentReferences--\n")

        .append("--AssessmentFamilyReferences--\n")

        .append("--SectionReferences--\n")

        .append("	</Assessment>\n")
        .toString();

    private String assessmentIdentificationCodes = new StringBuilder()
        .append("		<AssessmentIdentificationCode IdentificationSystem=\"--AssessmentIdentificationCode_IdentificationSystem--\" AssigningOrganizationCode=\"--AssessmentIdentificationCode_AssigningOrganizationCode--\">\n")
        .append("			<ID>--Assessment_id--</ID>\n")
        .append("		</AssessmentIdentificationCode>\n")
        .toString();

    private String assessmentPerformanceLevels = new StringBuilder()
        .append("		<AssessmentPerformanceLevel>\n")
//		.append("			<PerformanceLevel id=\"--PerformanceLevel_id--\" ref=\"--PerformanceLevel_ref--\">\n")
        .append("			<PerformanceLevel>\n")
        .append("				<CodeValue>--PerformanceLevel--</CodeValue>\n")
        .append("			</PerformanceLevel>\n")
        .append("			<AssessmentReportingMethod>--AssessmentReportingMethod--</AssessmentReportingMethod>\n")
        .append("			<MinimumScore>--MinimumScore--</MinimumScore>\n")
        .append("			<MaximumScore>--MaximumScore--</MaximumScore>\n")
        .append("		</AssessmentPerformanceLevel>\n")
        .toString();

    private String assessmentItemReferences = new StringBuilder()
//		.append("		<AssessmentItemReference id=\"--AssessmentItemReference_id--\" ref=\"--AssessmentItemReference_ref--\"/>\n")
        .append("		<AssessmentItemReference/>\n")
        .toString();

    private String objectiveAssessmentReferences = new StringBuilder()
//		.append("		<ObjectiveAssessmentReference id=\"--ObjectiveAssessmentReference_id--\" ref=\"--ObjectiveAssessmentReference_ref--\"/>\n")
        .append("		<ObjectiveAssessmentReference/>\n")
        .toString();

    private String assessmentFamilyReferences = new StringBuilder()
//		.append("		<AssessmentFamilyReference id=\"--AssessmentFamilyReference_id--\" ref=\"--AssessmentFamilyReference_ref--\">\n")
        .append("		<AssessmentFamilyReference>\n")
        .append("			<AssessmentFamilyIdentity>\n")
        .append("				<AssessmentFamilyIdentificationCode IdentificationSystem=\"--AssessmentFamilyIdentificationCode_IdentificationSystem--\" AssigningOrganizationCode=\"--AssessmentFamilyIdentificationCode_AssigningOrganizationCode--\">\n")
        .append("					<ID>--AssessmentFamilyIdentificationCode--</ID>\n")
        .append("				</AssessmentFamilyIdentificationCode>\n")
        .append("			</AssessmentFamilyIdentity>\n")
        .append("		</AssessmentFamilyReference>\n")
        .toString();

    private String sectionReferences = new StringBuilder()
//		.append("		<SectionReference id=\"--SectionReference_id--\" ref=\"--SectionReference_ref--\">\n")
        .append("		<SectionReference>\n")
        .append("			<SectionIdentity>\n")
        .append("				<StateOrganizationId>--StateOrganizationId--</StateOrganizationId>\n")
        .append("				<UniqueSectionCode>--UniqueSectionCode--</UniqueSectionCode>\n")
        .append("			</SectionIdentity>\n")
        .append("		</SectionReference>\n")
        .toString();

    private ResultSet assessmentResultSet;
    private String assessmentQuery = new StringBuilder()
        .append("SELECT a.AssessmentTitle\n")
        .append("      ,a.AcademicSubjectTypeId\n")
        .append("      ,a.AssessedGradeLevelTypeId\n")
        .append("      ,ast.CodeValue as AcademicSubjectType\n")
        .append("      ,glt.CodeValue as AssessedGradeLevelType\n")
        .append("      ,a.Version\n")
        .append("      ,act.CodeValue as AssessmentCategoryType\n")
        .append("      ,a.LowestAssessedGradeLevelTypeId\n")
        .append("      ,cst.CodeValue as ContentStandardType\n")
        .append("      ,a.AssessmentForm\n")
        .append("      ,a.RevisionDate\n")
        .append("      ,a.MaxRawScore\n")
        .append("      ,a.Nomenclature\n")
        .append("      ,apd.CodeValue as AssessmentPeriodDescriptor\n")
        .append("  FROM EdFi.edfi.Assessment a\n")
        .append("  LEFT JOIN EdFi.edfi.AcademicSubjectType ast ON a.AcademicSubjectTypeId = ast.AcademicSubjectTypeId\n")
        .append("  LEFT JOIN EdFi.edfi.GradeLevelType glt ON a.AssessedGradeLevelTypeId = glt.GradeLevelTypeId\n")
        .append("  LEFT JOIN EdFi.edfi.AssessmentCategoryType act ON a.AssessmentCategoryTypeId = act.AssessmentCategoryTypeId\n")
        .append("  LEFT JOIN EdFi.edfi.ContentStandardType cst ON a.ContentStandardTypeId = cst.ContentStandardTypeId\n")
        .append("  LEFT JOIN EdFi.edfi.AssessmentPeriodDescriptor apd ON a.AssessmentPeriodDescriptorId = apd.AssessmentPeriodDescriptorId\n")
        .append("    ORDER BY a.AssessmentTitle, a.AcademicSubjectTypeId, a.AssessedGradeLevelTypeId, a.Version\n")
        .toString();

    private ResultSet assessmentIdentificationCodeResultSet;
    private String assessmentIdentificationCodeQuery = new StringBuilder()
        .append("SELECT aic.AssessmentTitle\n")
        .append("      ,aic.AcademicSubjectTypeId\n")
        .append("      ,aic.AssessedGradeLevelTypeId\n")
        .append("      ,aic.Version\n")
        .append("      ,aist.CodeValue as AssessmentIdentificationSystem\n")
        .append("      ,aic.AssigningOrganizationCode\n")
        .append("      ,aic.IdentificationCode\n")
        .append("  FROM EdFi.edfi.AssessmentIdentificationCode aic\n")
        .append("  RIGHT JOIN EdFi.edfi.Assessment a \n")
        .append("   ON a.AssessmentTitle = aic.AssessmentTitle\n")
        .append("       AND a.AcademicSubjectTypeId = aic.AcademicSubjectTypeId\n")
        .append("       AND a.AssessedGradeLevelTypeId = aic.AssessedGradeLevelTypeId\n")
        .append("       AND a.Version = aic.Version\n")
        .append("  LEFT JOIN EdFi.edfi.AssessmentIdentificationSystemType aist ON aic.AssessmentIdentificationSystemTypeId = aist.AssessmentIdentificationSystemTypeId\n")
        .append("  ORDER BY aic.AssessmentTitle, aic.AcademicSubjectTypeId, aic.AssessedGradeLevelTypeId, aic.Version\n")
        .toString();


    private void getDataSet() {
        Connection conn = Utility.getConnection();
        assessmentResultSet = Utility.getResultSet(conn, this.assessmentQuery);
    }

    private void getAssessment() {
        String assessment = body;
        try {
            assessment = Utility.replace(assessment, "--AssessmentTitle--", this.assessmentResultSet.getString("AssessmentTitle"));
            assessment = Utility.replace(assessment, "--AcademicSubject--", this.assessmentResultSet.getString("AcademicSubjectType"));
            assessment = Utility.replace(assessment, "--GradeLevelAssessed--", this.assessmentResultSet.getString("AssessedGradeLevelType"));
            assessment = Utility.replace(assessment, "--Version--", this.assessmentResultSet.getString("Version"));
            assessment = Utility.replace(assessment, "--AssessmentCategory--", this.assessmentResultSet.getString("AssessmentCategoryType"));
            assessment = Utility.replace(assessment, "--LowestGradeLevelAssessed--", this.assessmentResultSet.getString("LowestAssessedGradeLevelTypeId"));
            assessment = Utility.replace(assessment, "--ContentStandard--", this.assessmentResultSet.getString("ContentStandardType"));
            assessment = Utility.replace(assessment, "--AssessmentForm--", this.assessmentResultSet.getString("AssessmentForm"));
            assessment = Utility.replace(assessment, "--RevisionDate--", this.assessmentResultSet.getString("RevisionDate"));
            assessment = Utility.replace(assessment, "--MaxRawScore--", this.assessmentResultSet.getString("MaxRawScore"));
            assessment = Utility.replace(assessment, "--Nomenclature--", this.assessmentResultSet.getString("Nomenclature"));
            assessment = Utility.replace(assessment, "--AssessmentPeriod--", this.assessmentResultSet.getString("AssessmentPeriodDescriptor"));

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        System.out.print(assessment);
    }


    public void getAssessments() {
        this.getDataSet();
        System.out.print(this.begin);
        try {
            while (this.assessmentResultSet.next()) {
                this.getAssessment();
            }
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        System.out.println(this.end);
    }

    /**
     * @param args
     */
    public static void main(String[] args) {
        // TODO Auto-generated method stub
        (new GenerateAssessment()).getAssessments();
    }



}
