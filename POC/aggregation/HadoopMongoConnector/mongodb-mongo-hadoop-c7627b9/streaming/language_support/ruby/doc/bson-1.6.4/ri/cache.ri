{:ancestors{I"BSON::BSON_C:EF[I"Object;FI"Object;F[I"BasicObject;FI"	Java;FI"BSON::BSON_JAVA;F[@	I"BSON::BSON_RUBY;F[@	I"BSON::ByteBuffer;F[@	I"BSON::MongoRubyError;F[I"StandardError;FI"BSON::MongoDBError;F[I"RuntimeError;FI"BSON::BSONError;F[I"BSON::MongoDBError;FI" BSON::InvalidStringEncoding;F[I"BSON::BSONError;FI"BSON::InvalidObjectId;F[@I"BSON::InvalidDocument;F[@I"BSON::InvalidKeyName;F[@I"BSON::OrderedHash;F[I"	Hash;FI"BSON::Binary;F[I"BSON::ByteBuffer;FI"BSON::Code;F[@	I"BSON::DBRef;F[@	I"BSON::MaxKey;F[@	I"BSON::MinKey;F[@	I"BSON::ObjectId;F[@	I"BSON::Timestamp;F[I"Enumerable;F@	I"BSON::BSON_CODER;F[@	:attributes{I"BSON::ByteBuffer;F[I"attr_reader max_size;FI"attr_reader order;FI"BSON::Binary;F[I"attr_accessor subtype;FI"BSON::Code;F[I"attr_accessor code;FI"attr_accessor scope;FI"BSON::DBRef;F[I"attr_reader namespace;FI"attr_reader object_id;FI"BSON::ObjectId;F[I"attr_accessor data;FI"BSON::Timestamp;F[I"attr_reader increment;FI"attr_reader seconds;F:class_methods{I"BSON::BSON_C;F[	I"deserialize;FI"max_bson_size;FI"serialize;FI"update_max_bson_size;FI"BSON::BSON_JAVA;F[	I"deserialize;FI"max_bson_size;FI"serialize;FI"update_max_bson_size;FI"BSON::BSON_RUBY;F[I"deserialize;FI"max_bson_size;FI"new;FI"serialize;FI"serialize_cstr;FI"serialize_key;FI"to_utf8_binary;FI"update_max_bson_size;FI"BSON::ByteBuffer;F[I"new;FI"serialize_cstr;FI"to_utf8_binary;FI"BSON::OrderedHash;F[I"[];FI"new;FI"BSON::Binary;F[I"new;FI"BSON::Code;F[I"new;FI"BSON::DBRef;F[I"new;FI"BSON::ObjectId;F[I"create_pk;FI"from_string;FI"from_time;FI"legal?;FI"machine_id;FI"new;FI"BSON::Timestamp;F[I"new;FI"BSON::BSON_CODER;F[	@[@\@]@^I"	BSON;F[	I"ObjectId;FI"deserialize;FI"read_bson_document;FI"serialize;F:encodingIu:Encoding
UTF-8;F:instance_methods{I"BSON::BSON_RUBY;F[-I"bson_type;FI"deserialize;FI"deserialize_array_data;FI"deserialize_binary_data;FI"deserialize_boolean_data;FI""deserialize_code_w_scope_data;FI"deserialize_cstr;FI"deserialize_date_data;FI"deserialize_dbref_data;FI"deserialize_number_data;FI" deserialize_number_int_data;FI"!deserialize_number_long_data;FI"deserialize_object_data;FI"deserialize_oid_data;FI"deserialize_regex_data;FI"deserialize_string_data;FI"deserialize_timestamp_data;FI"encoded_str;FI"hex_dump;FI"serialize;FI"serialize_array_element;FI"serialize_binary_element;FI"serialize_boolean_element;FI"serialize_code_w_scope;FI"serialize_date_element;FI"serialize_dbref_element;FI"serialize_eoo_element;FI"serialize_key_value;FI"serialize_max_key_element;FI"serialize_min_key_element;FI"serialize_null_element;FI"serialize_number_element;FI"serialize_object_element;FI"serialize_oid_element;FI"serialize_regex_element;FI"serialize_string_element;FI" serialize_timestamp_element;FI"	to_a;FI"	to_s;FI"unpack;FI"BSON::ByteBuffer;F[ I"==;FI"append!;FI"
clear;FI"	dump;FI"get;FI"get_double;FI"get_int;FI"get_long;FI"length;FI"max_size;FI"
more?;FI"
order;FI"order=;FI"position;FI"position=;FI"prepend!;FI"put;FI"put_array;FI"put_binary;FI"put_double;FI"put_int;FI"put_long;FI"rewind;FI"	size;FI"	to_a;FI"	to_s;FI"unpack;FI"BSON::OrderedHash;F[I"==;FI"[]=;FI"
clear;FI"
clone;FI"delete;FI"delete_if;FI"dup;FI"	each;FI"each_pair;FI"	eql?;FI"	hash;FI"inspect;FI"	keys;FI"
merge;FI"merge!;FI"reject;FI"reject!;FI"replace;FI"	to_a;FI"update;FI"values;FI"yaml_initialize;FI"BSON::Binary;F[I"inspect;FI"subtype;FI"BSON::Code;F[I"==;FI"	code;FI"inspect;FI"length;FI"
scope;FI"to_bson_code;FI"BSON::DBRef;F[	I"namespace;FI"object_id;FI"to_hash;FI"	to_s;FI"BSON::MaxKey;F[I"==;FI"BSON::MinKey;F[I"==;FI"BSON::ObjectId;F[I"==;FI"as_json;FI"	data;FI"	eql?;FI"generation_time;FI"	hash;FI"inspect;FI"	to_a;FI"to_json;FI"	to_s;FI"BSON::Timestamp;F[I"==;FI"[];FI"	each;FI"increment;FI"seconds;FI"	to_s;F:modules[I"	BSON;F@I"BSON::BSON_C;FI"BSON::BSON_CODER;FI"BSON::BSON_JAVA;FI"BSON::BSON_RUBY;FI"BSON::Binary;F@+I"BSON::Code;FI"BSON::DBRef;FI"BSON::InvalidDocument;FI"BSON::InvalidKeyName;FI"BSON::InvalidObjectId;FI" BSON::InvalidStringEncoding;FI"BSON::MaxKey;FI"BSON::MinKey;F@I"BSON::MongoRubyError;FI"BSON::ObjectId;FI"BSON::OrderedHash;FI"BSON::Timestamp;F@	